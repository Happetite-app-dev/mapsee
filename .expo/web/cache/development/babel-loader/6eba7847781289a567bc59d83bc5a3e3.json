{"ast":null,"code":"import Image from \"react-native-web/dist/exports/Image\";\nimport { Marker } from \"react-native-maps\";\nimport Marker1 from \"../../assets/markers/marker#4F92D9.svg\";\nimport NewMarker from \"../../assets/markers/newMarker.svg\";\nimport { useAllFolderQuery } from \"../../queries\";\nimport get from \"lodash/get\";\nimport { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar now = new Date();\nvar currentDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\nvar RecordMarker = function RecordMarker(_ref) {\n  var recordData = _ref.recordData,\n      origin = _ref.origin;\n  var myContext = useContext(AppContext);\n  var myUID = myContext.myUID;\n\n  var _useAllFolderQuery = useAllFolderQuery(),\n      isLoading = _useAllFolderQuery.isLoading,\n      error = _useAllFolderQuery.error,\n      data = _useAllFolderQuery.data;\n\n  return recordData == null || recordData === undefined ? _jsx(_Fragment, {}) : recordData.map(function (record) {\n    var _record$date, _record$date2, _record$date3;\n\n    var showMarker = Math.random();\n    var recordDate = new Date(record == null ? void 0 : (_record$date = record.date) == null ? void 0 : _record$date.year, (record == null ? void 0 : (_record$date2 = record.date) == null ? void 0 : _record$date2.month) - 1, record == null ? void 0 : (_record$date3 = record.date) == null ? void 0 : _record$date3.day);\n    var dayDiff = (recordDate - currentDate) / (1000 * 60 * 60 * 24);\n    var color = get(data, [record.folderID, \"folderColor\", myUID]) || get(data, [record.folderID, \"initFoldercolor\"]);\n    return _jsx(Marker, {\n      coordinate: record.lctn,\n      opacity: origin.latitudeDelta < 0.01 || showMarker > 0.5 ? 100 : 0,\n      style: {\n        zIndex: Math.round(dayDiff * 1000)\n      },\n      children: dayDiff <= 3 ? _jsx(NewMarker, {}) : _jsx(Marker1, {\n        color: color\n      })\n    }, record.placeID);\n  });\n};\n\nexport default RecordMarker;","map":{"version":3,"names":["Marker","Marker1","NewMarker","useAllFolderQuery","get","useContext","AppContext","now","Date","currentDate","getFullYear","getMonth","getDate","RecordMarker","recordData","origin","myContext","myUID","isLoading","error","data","undefined","map","record","showMarker","Math","random","recordDate","date","year","month","day","dayDiff","color","folderID","lctn","latitudeDelta","zIndex","round","placeID"],"sources":["/Users/jeongin/mapsee_2/components/MapScreen/RecordMarker.js"],"sourcesContent":["import { Image } from \"react-native\";\nimport { Marker } from \"react-native-maps\";\n\nimport Marker1 from \"../../assets/markers/marker#4F92D9.svg\";\nimport NewMarker from \"../../assets/markers/newMarker.svg\";\nimport { useAllFolderQuery } from \"../../queries\";\nimport get from \"lodash/get\";\nimport { useContext } from \"react\";\nimport AppContext from \"../AppContext\";\n\nconst now = new Date();\nconst currentDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n\nconst RecordMarker = ({ recordData, origin }) => {\n  const myContext = useContext(AppContext);\n  const myUID = myContext.myUID;\n  const { isLoading, error, data } = useAllFolderQuery();\n  return recordData == null || recordData === undefined ? (\n    <></>\n  ) : (\n    recordData.map((record) => {\n      const showMarker = Math.random();\n      const recordDate = new Date(\n        record?.date?.year,\n        record?.date?.month - 1,\n        record?.date?.day\n      );\n      const dayDiff = (recordDate - currentDate) / (1000 * 60 * 60 * 24);\n      const color =\n        get(data, [record.folderID, \"folderColor\", myUID]) ||\n        get(data, [record.folderID, \"initFoldercolor\"]);\n\n      return (\n        <Marker\n          key={record.placeID}\n          coordinate={record.lctn}\n          opacity={origin.latitudeDelta < 0.01 || showMarker > 0.5 ? 100 : 0}\n          style={{ zIndex: Math.round(dayDiff * 1000) }}\n        >\n          {dayDiff <= 3 ? <NewMarker /> : <Marker1 color={color} />}\n        </Marker>\n      );\n    })\n  );\n};\n\nexport default RecordMarker;\n"],"mappings":";AACA,SAASA,MAAT,QAAuB,mBAAvB;AAEA,OAAOC,OAAP;AACA,OAAOC,SAAP;AACA,SAASC,iBAAT;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,SAASC,UAAT,QAA2B,OAA3B;AACA,OAAOC,UAAP;;;AAEA,IAAMC,GAAG,GAAG,IAAIC,IAAJ,EAAZ;AACA,IAAMC,WAAW,GAAG,IAAID,IAAJ,CAASD,GAAG,CAACG,WAAJ,EAAT,EAA4BH,GAAG,CAACI,QAAJ,EAA5B,EAA4CJ,GAAG,CAACK,OAAJ,EAA5C,CAApB;;AAEA,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAA4B;EAAA,IAAzBC,UAAyB,QAAzBA,UAAyB;EAAA,IAAbC,MAAa,QAAbA,MAAa;EAC/C,IAAMC,SAAS,GAAGX,UAAU,CAACC,UAAD,CAA5B;EACA,IAAMW,KAAK,GAAGD,SAAS,CAACC,KAAxB;;EACA,yBAAmCd,iBAAiB,EAApD;EAAA,IAAQe,SAAR,sBAAQA,SAAR;EAAA,IAAmBC,KAAnB,sBAAmBA,KAAnB;EAAA,IAA0BC,IAA1B,sBAA0BA,IAA1B;;EACA,OAAON,UAAU,IAAI,IAAd,IAAsBA,UAAU,KAAKO,SAArC,GACL,mBADK,GAGLP,UAAU,CAACQ,GAAX,CAAe,UAACC,MAAD,EAAY;IAAA;;IACzB,IAAMC,UAAU,GAAGC,IAAI,CAACC,MAAL,EAAnB;IACA,IAAMC,UAAU,GAAG,IAAInB,IAAJ,CACjBe,MADiB,oCACjBA,MAAM,CAAEK,IADS,qBACjB,aAAcC,IADG,EAEjB,CAAAN,MAAM,QAAN,6BAAAA,MAAM,CAAEK,IAAR,mCAAcE,KAAd,IAAsB,CAFL,EAGjBP,MAHiB,qCAGjBA,MAAM,CAAEK,IAHS,qBAGjB,cAAcG,GAHG,CAAnB;IAKA,IAAMC,OAAO,GAAG,CAACL,UAAU,GAAGlB,WAAd,KAA8B,OAAO,EAAP,GAAY,EAAZ,GAAiB,EAA/C,CAAhB;IACA,IAAMwB,KAAK,GACT7B,GAAG,CAACgB,IAAD,EAAO,CAACG,MAAM,CAACW,QAAR,EAAkB,aAAlB,EAAiCjB,KAAjC,CAAP,CAAH,IACAb,GAAG,CAACgB,IAAD,EAAO,CAACG,MAAM,CAACW,QAAR,EAAkB,iBAAlB,CAAP,CAFL;IAIA,OACE,KAAC,MAAD;MAEE,UAAU,EAAEX,MAAM,CAACY,IAFrB;MAGE,OAAO,EAAEpB,MAAM,CAACqB,aAAP,GAAuB,IAAvB,IAA+BZ,UAAU,GAAG,GAA5C,GAAkD,GAAlD,GAAwD,CAHnE;MAIE,KAAK,EAAE;QAAEa,MAAM,EAAEZ,IAAI,CAACa,KAAL,CAAWN,OAAO,GAAG,IAArB;MAAV,CAJT;MAAA,UAMGA,OAAO,IAAI,CAAX,GAAe,KAAC,SAAD,KAAf,GAA+B,KAAC,OAAD;QAAS,KAAK,EAAEC;MAAhB;IANlC,GACOV,MAAM,CAACgB,OADd,CADF;EAUD,CAtBD,CAHF;AA2BD,CA/BD;;AAiCA,eAAe1B,YAAf"},"metadata":{},"sourceType":"module"}