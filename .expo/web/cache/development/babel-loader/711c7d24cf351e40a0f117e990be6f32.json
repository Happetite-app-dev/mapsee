{"ast":null,"code":"import { useContext } from \"react\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport { useFolderQuery } from \"../../queries\";\nimport AppContext from \"../AppContext\";\nimport PinFolder from \"../../assets/icons/pinFolder.svg\";\nimport SearchData from \"../../assets/icons/searchData.svg\";\nimport ShareFolder from \"../../assets/icons/shareFolder2.svg\";\nimport SingleFolder from \"../../assets/icons/singleFolder.svg\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar IndividualFolder = function IndividualFolder(_ref) {\n  var folderID = _ref.folderID,\n      setSelectedFolderIDNameColorUserIDs = _ref.setSelectedFolderIDNameColorUserIDs,\n      setLongPressedFolder = _ref.setLongPressedFolder,\n      setModalVisible = _ref.setModalVisible;\n  var myContext = useContext(AppContext);\n  var myUID = myContext.myUID;\n  var query = useFolderQuery(folderID);\n  if (query.isLoading) return _jsx(Text, {\n    children: \"\\uAC15\\uD574\\uB9B0 \\uB85C\\uB529\\uC911\\uC774\\uB2E4\"\n  });else if (query.error) return _jsx(Text, {\n    children: \"\\uAC15\\uD574\\uB9B0 \\uC774\\uC0C1\\uD558\\uB2E4\"\n  });\n  return query.data && _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      setSelectedFolderIDNameColorUserIDs({\n        folderID: folderID,\n        folderName: query.data.folderName[myUID],\n        folderColor: query.data.folderColor[myUID],\n        folderUserIDs: query.data.userIDs ? Object.keys(query.data.userIDs) : []\n      });\n    },\n    onLongPress: function onLongPress() {\n      var _query$data$fixedDate;\n\n      setLongPressedFolder({\n        folderID: folderID,\n        folderName: query.data.folderName[myUID],\n        folderColor: query.data.folderColor[myUID],\n        folderUserIDs: query.data.userIDs,\n        folderFixedDate: (_query$data$fixedDate = query.data.fixedDate) == null ? void 0 : _query$data$fixedDate[myUID]\n      });\n      setModalVisible(true);\n    },\n    style: {\n      height: 65\n    },\n    activeOpacity: 0.2,\n    children: _jsxs(View, {\n      style: {\n        marginLeft: 10,\n        marginRight: 10\n      },\n      children: [_jsx(SingleFolder, {\n        color: query.data.folderColor[myUID] || query.data.initFolderColor\n      }), query.data.userIDs.length > 1 ? _jsx(ShareFolder, {}) : _jsx(_Fragment, {}), _jsxs(View, {\n        style: {\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          top: 8,\n          justifyContent: \"center\"\n        },\n        children: [_jsx(Text, {\n          style: {\n            position: \"relative\"\n          },\n          children: query.data.folderName[myUID]\n        }), query.data.fixedDate !== undefined && query.data.fixedDate[myUID] !== undefined ? _jsx(PinFolder, {\n          style: {\n            position: \"relative\",\n            left: 3\n          }\n        }) : _jsx(_Fragment, {})]\n      })]\n    })\n  });\n};\n\nexport default IndividualFolder;","map":{"version":3,"names":["useContext","TouchableOpacity","useFolderQuery","AppContext","PinFolder","SearchData","ShareFolder","SingleFolder","IndividualFolder","folderID","setSelectedFolderIDNameColorUserIDs","setLongPressedFolder","setModalVisible","myContext","myUID","query","isLoading","error","data","folderName","folderColor","folderUserIDs","userIDs","Object","keys","folderFixedDate","fixedDate","height","marginLeft","marginRight","initFolderColor","length","flexDirection","alignItems","top","justifyContent","position","undefined","left"],"sources":["/Users/jeongin/mapsee_2/components/StorageScreen/IndividualFolder.js"],"sourcesContent":["import { useContext } from \"react\";\nimport { Image, Text, View } from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport { useFolderQuery } from \"../../queries\";\nimport AppContext from \"../AppContext\";\n\nimport PinFolder from \"../../assets/icons/pinFolder.svg\";\nimport SearchData from \"../../assets/icons/searchData.svg\";\nimport ShareFolder from \"../../assets/icons/shareFolder2.svg\";\nimport SingleFolder from \"../../assets/icons/singleFolder.svg\";\nconst IndividualFolder = ({\n  folderID,\n  setSelectedFolderIDNameColorUserIDs,\n  setLongPressedFolder,\n  setModalVisible,\n}) => {\n  const myContext = useContext(AppContext);\n  const myUID = myContext.myUID;\n  const query = useFolderQuery(folderID);\n  if (query.isLoading) return <Text>강해린 로딩중이다</Text>;\n  else if (query.error) return <Text>강해린 이상하다</Text>;\n  return (\n    query.data && (\n      <TouchableOpacity\n        onPress={() => {\n          setSelectedFolderIDNameColorUserIDs({\n            folderID,\n            folderName: query.data.folderName[myUID],\n            folderColor: query.data.folderColor[myUID],\n            folderUserIDs: query.data.userIDs\n              ? Object.keys(query.data.userIDs)\n              : [],\n          });\n          //gotoSingleFolderScreen()\n        }}\n        onLongPress={() => {\n          setLongPressedFolder({\n            folderID,\n            folderName: query.data.folderName[myUID],\n            folderColor: query.data.folderColor[myUID],\n            folderUserIDs: query.data.userIDs,\n            folderFixedDate: query.data.fixedDate?.[myUID],\n          });\n          setModalVisible(true);\n        }}\n        style={{ height: 65 }}\n        activeOpacity={0.2}\n      >\n        <View style={{ marginLeft: 10, marginRight: 10 }}>\n          <SingleFolder\n            color={query.data.folderColor[myUID] || query.data.initFolderColor}\n          />\n          {query.data.userIDs.length > 1 ? <ShareFolder /> : <></>}\n          <View\n            style={{\n              flexDirection: \"row\",\n              alignItems: \"center\",\n              top: 8,\n              justifyContent: \"center\",\n            }}\n          >\n            <Text style={{ position: \"relative\" }}>\n              {query.data.folderName[myUID]}\n            </Text>\n            {query.data.fixedDate !== undefined &&\n            query.data.fixedDate[myUID] !== undefined ? (\n              <PinFolder style={{ position: \"relative\", left: 3 }} />\n            ) : (\n              <></>\n            )}\n          </View>\n        </View>\n      </TouchableOpacity>\n    )\n  );\n};\n\nexport default IndividualFolder;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}