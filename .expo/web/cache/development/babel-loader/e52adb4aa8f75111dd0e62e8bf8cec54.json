{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _excluded = [\"label\", \"accessibilityLabel\", \"page\", \"numberOfPages\", \"onPageChange\", \"style\", \"theme\", \"showFastPaginationControls\", \"numberOfItemsPerPageList\", \"numberOfItemsPerPage\", \"onItemsPerPageChange\", \"selectPageDropdownLabel\", \"selectPageDropdownAccessibilityLabel\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport color from 'color';\nimport { useInternalTheme, withInternalTheme } from \"../../core/theming\";\nimport Button from \"../Button/Button\";\nimport IconButton from \"../IconButton/IconButton\";\nimport MaterialCommunityIcon from \"../MaterialCommunityIcon\";\nimport Menu from \"../Menu/Menu\";\nimport Text from \"../Typography/Text\";\n\nvar PaginationControls = function PaginationControls(_ref) {\n  var page = _ref.page,\n      numberOfPages = _ref.numberOfPages,\n      onPageChange = _ref.onPageChange,\n      showFastPaginationControls = _ref.showFastPaginationControls;\n  var theme = useInternalTheme();\n  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n  return React.createElement(React.Fragment, null, showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref2) {\n      var size = _ref2.size,\n          color = _ref2.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-first\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(0);\n    },\n    accessibilityLabel: \"page-first\"\n  }) : null, React.createElement(IconButton, {\n    icon: function icon(_ref3) {\n      var size = _ref3.size,\n          color = _ref3.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-left\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: page === 0,\n    onPress: function onPress() {\n      return onPageChange(page - 1);\n    },\n    accessibilityLabel: \"chevron-left\"\n  }), React.createElement(IconButton, {\n    icon: function icon(_ref4) {\n      var size = _ref4.size,\n          color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"chevron-right\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(page + 1);\n    },\n    accessibilityLabel: \"chevron-right\"\n  }), showFastPaginationControls ? React.createElement(IconButton, {\n    icon: function icon(_ref5) {\n      var size = _ref5.size,\n          color = _ref5.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"page-last\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    iconColor: textColor,\n    disabled: numberOfPages === 0 || page === numberOfPages - 1,\n    onPress: function onPress() {\n      return onPageChange(numberOfPages - 1);\n    },\n    accessibilityLabel: \"page-last\"\n  }) : null);\n};\n\nvar PaginationDropdown = function PaginationDropdown(_ref6) {\n  var numberOfItemsPerPageList = _ref6.numberOfItemsPerPageList,\n      numberOfItemsPerPage = _ref6.numberOfItemsPerPage,\n      onItemsPerPageChange = _ref6.onItemsPerPageChange;\n\n  var _useInternalTheme = useInternalTheme(),\n      colors = _useInternalTheme.colors;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showSelect = _React$useState2[0],\n      toggleSelect = _React$useState2[1];\n\n  return React.createElement(Menu, {\n    visible: showSelect,\n    onDismiss: function onDismiss() {\n      return toggleSelect(!showSelect);\n    },\n    anchor: React.createElement(Button, {\n      mode: \"outlined\",\n      onPress: function onPress() {\n        return toggleSelect(true);\n      },\n      style: styles.button,\n      icon: \"menu-down\",\n      contentStyle: styles.contentStyle\n    }, \"\" + numberOfItemsPerPage)\n  }, numberOfItemsPerPageList === null || numberOfItemsPerPageList === void 0 ? void 0 : numberOfItemsPerPageList.map(function (option) {\n    return React.createElement(Menu.Item, {\n      key: option,\n      titleStyle: option === numberOfItemsPerPage && {\n        color: colors === null || colors === void 0 ? void 0 : colors.primary\n      },\n      onPress: function onPress() {\n        onItemsPerPageChange === null || onItemsPerPageChange === void 0 ? void 0 : onItemsPerPageChange(option);\n        toggleSelect(false);\n      },\n      title: option\n    });\n  }));\n};\n\nvar DataTablePagination = function DataTablePagination(_ref7) {\n  var label = _ref7.label,\n      accessibilityLabel = _ref7.accessibilityLabel,\n      page = _ref7.page,\n      numberOfPages = _ref7.numberOfPages,\n      onPageChange = _ref7.onPageChange,\n      style = _ref7.style,\n      theme = _ref7.theme,\n      _ref7$showFastPaginat = _ref7.showFastPaginationControls,\n      showFastPaginationControls = _ref7$showFastPaginat === void 0 ? false : _ref7$showFastPaginat,\n      numberOfItemsPerPageList = _ref7.numberOfItemsPerPageList,\n      numberOfItemsPerPage = _ref7.numberOfItemsPerPage,\n      onItemsPerPageChange = _ref7.onItemsPerPageChange,\n      selectPageDropdownLabel = _ref7.selectPageDropdownLabel,\n      selectPageDropdownAccessibilityLabel = _ref7.selectPageDropdownAccessibilityLabel,\n      rest = _objectWithoutProperties(_ref7, _excluded);\n\n  var labelColor = color(theme.isV3 ? theme.colors.onSurface : theme === null || theme === void 0 ? void 0 : theme.colors.text).alpha(0.6).rgb().string();\n  return React.createElement(View, _extends({}, rest, {\n    style: [styles.container, style],\n    accessibilityLabel: \"pagination-container\"\n  }), numberOfItemsPerPageList && numberOfItemsPerPage && onItemsPerPageChange && React.createElement(View, {\n    accessibilityLabel: \"Options Select\",\n    style: styles.optionsContainer\n  }, React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: selectPageDropdownAccessibilityLabel || 'selectPageDropdownLabel'\n  }, selectPageDropdownLabel), React.createElement(PaginationDropdown, {\n    numberOfItemsPerPageList: numberOfItemsPerPageList,\n    numberOfItemsPerPage: numberOfItemsPerPage,\n    onItemsPerPageChange: onItemsPerPageChange\n  })), React.createElement(Text, {\n    style: [styles.label, {\n      color: labelColor\n    }],\n    numberOfLines: 3,\n    accessibilityLabel: accessibilityLabel || 'label'\n  }, label), React.createElement(View, {\n    style: styles.iconsContainer\n  }, React.createElement(PaginationControls, {\n    showFastPaginationControls: showFastPaginationControls,\n    onPageChange: onPageChange,\n    page: page,\n    numberOfPages: numberOfPages\n  })));\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap'\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16\n  },\n  iconsContainer: {\n    flexDirection: 'row'\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse'\n  }\n});\nexport default withInternalTheme(DataTablePagination);\nexport { DataTablePagination };","map":{"version":3,"mappings":"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","names":["React","color","useInternalTheme","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Menu","Text","PaginationControls","page","_ref","numberOfPages","onPageChange","showFastPaginationControls","theme","textColor","isV3","colors","onSurface","text","icon","size","_ref2","name","direction","I18nManager","getConstants","isRTL","iconColor","disabled","onPress","accessibilityLabel","_ref3","_ref4","_ref5","PaginationDropdown","numberOfItemsPerPageList","_ref6","numberOfItemsPerPage","onItemsPerPageChange","useState","showSelect","toggleSelect","visible","onDismiss","anchor","mode","style","styles","button","contentStyle","map","option","Item","key","titleStyle","primary","title","DataTablePagination","label","_ref7","selectPageDropdownLabel","selectPageDropdownAccessibilityLabel","rest","labelColor","alpha","rgb","string","View","_extends","container","optionsContainer","numberOfLines","iconsContainer","displayName","StyleSheet","create","justifyContent","flexDirection","alignItems","paddingLeft","flexWrap","marginVertical","fontSize","marginRight","textAlign"],"sources":["DataTablePagination.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport { useInternalTheme, withInternalTheme } from '../../core/theming';\nimport Button from '../Button/Button';\nimport IconButton from '../IconButton/IconButton';\nimport MaterialCommunityIcon from '../MaterialCommunityIcon';\nimport Menu from '../Menu/Menu';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> &\n  PaginationControlsProps &\n  PaginationDropdownProps & {\n    /**\n     * Label text to display which indicates current pagination.\n     */\n    label?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `label`.\n     */\n    accessibilityLabel?: string;\n    /**\n     * Label text for select page dropdown to display.\n     */\n    selectPageDropdownLabel?: React.ReactNode;\n    /**\n     * AccessibilityLabel for `selectPageDropdownLabel`.\n     */\n    selectPageDropdownAccessibilityLabel?: string;\n    style?: StyleProp<ViewStyle>;\n    /**\n     * @optional\n     */\n    theme: InternalTheme;\n  };\n\ntype PaginationDropdownProps = {\n  /**\n   * The current number of rows per page.\n   */\n  numberOfItemsPerPage?: number;\n  /**\n   * Options for a number of rows per page to choose from.\n   */\n  numberOfItemsPerPageList?: Array<number>;\n  /**\n   * The function to set the number of rows per page.\n   */\n  onItemsPerPageChange?: (numberOfItemsPerPage: number) => void;\n};\n\ntype PaginationControlsProps = {\n  /**\n   * The currently visible page (starting with 0).\n   */\n  page: number;\n  /**\n   * The total number of pages.\n   */\n  numberOfPages: number;\n  /**\n   * Function to execute on page change.\n   */\n  onPageChange: (page: number) => void;\n  /**\n   * Whether to show fast forward and fast rewind buttons in pagination. False by default.\n   */\n  showFastPaginationControls?: boolean;\n};\n\nconst PaginationControls = ({\n  page,\n  numberOfPages,\n  onPageChange,\n  showFastPaginationControls,\n}: PaginationControlsProps) => {\n  const theme = useInternalTheme();\n\n  const textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;\n\n  return (\n    <>\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-first\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={page === 0}\n          onPress={() => onPageChange(0)}\n          accessibilityLabel=\"page-first\"\n        />\n      ) : null}\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-left\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={page === 0}\n        onPress={() => onPageChange(page - 1)}\n        accessibilityLabel=\"chevron-left\"\n      />\n      <IconButton\n        icon={({ size, color }) => (\n          <MaterialCommunityIcon\n            name=\"chevron-right\"\n            color={color}\n            size={size}\n            direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n          />\n        )}\n        iconColor={textColor}\n        disabled={numberOfPages === 0 || page === numberOfPages - 1}\n        onPress={() => onPageChange(page + 1)}\n        accessibilityLabel=\"chevron-right\"\n      />\n      {showFastPaginationControls ? (\n        <IconButton\n          icon={({ size, color }) => (\n            <MaterialCommunityIcon\n              name=\"page-last\"\n              color={color}\n              size={size}\n              direction={I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'}\n            />\n          )}\n          iconColor={textColor}\n          disabled={numberOfPages === 0 || page === numberOfPages - 1}\n          onPress={() => onPageChange(numberOfPages - 1)}\n          accessibilityLabel=\"page-last\"\n        />\n      ) : null}\n    </>\n  );\n};\n\nconst PaginationDropdown = ({\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n}: PaginationDropdownProps) => {\n  const { colors } = useInternalTheme();\n  const [showSelect, toggleSelect] = React.useState<boolean>(false);\n\n  return (\n    <Menu\n      visible={showSelect}\n      onDismiss={() => toggleSelect(!showSelect)}\n      anchor={\n        <Button\n          mode=\"outlined\"\n          onPress={() => toggleSelect(true)}\n          style={styles.button}\n          icon=\"menu-down\"\n          contentStyle={styles.contentStyle}\n        >\n          {`${numberOfItemsPerPage}`}\n        </Button>\n      }\n    >\n      {numberOfItemsPerPageList?.map((option) => (\n        <Menu.Item\n          key={option}\n          titleStyle={\n            option === numberOfItemsPerPage && {\n              color: colors?.primary,\n            }\n          }\n          onPress={() => {\n            onItemsPerPageChange?.(option);\n            toggleSelect(false);\n          }}\n          title={option}\n        />\n      ))}\n    </Menu>\n  );\n};\n\n/**\n * A component to show pagination for data table.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/data-table-pagination.png\" />\n *   </figure>\n * </div>\n *\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { DataTable } from 'react-native-paper';\n *\n * const numberOfItemsPerPageList = [2, 3, 4];\n *\n * const items = [\n *   {\n *     key: 1,\n *     name: 'Page 1',\n *   },\n *   {\n *     key: 2,\n *     name: 'Page 2',\n *   },\n *   {\n *     key: 3,\n *     name: 'Page 3',\n *   },\n * ];\n *\n * const MyComponent = () => {\n *   const [page, setPage] = React.useState(0);\n *   const [numberOfItemsPerPage, onItemsPerPageChange] = React.useState(numberOfItemsPerPageList[0]);\n *   const from = page * numberOfItemsPerPage;\n *   const to = Math.min((page + 1) * numberOfItemsPerPage, items.length);\n *\n *   React.useEffect(() => {\n *      setPage(0);\n *   }, [numberOfItemsPerPage]);\n *\n *   return (\n *     <DataTable>\n *       <DataTable.Pagination\n *         page={page}\n *         numberOfPages={Math.ceil(items.length / numberOfItemsPerPage)}\n *         onPageChange={page => setPage(page)}\n *         label={`${from + 1}-${to} of ${items.length}`}\n *         showFastPaginationControls\n *         numberOfItemsPerPageList={numberOfItemsPerPageList}\n *         numberOfItemsPerPage={numberOfItemsPerPage}\n *         onItemsPerPageChange={onItemsPerPageChange}\n *         selectPageDropdownLabel={'Rows per page'}\n *       />\n *     </DataTable>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DataTablePagination = ({\n  label,\n  accessibilityLabel,\n  page,\n  numberOfPages,\n  onPageChange,\n  style,\n  theme,\n  showFastPaginationControls = false,\n  numberOfItemsPerPageList,\n  numberOfItemsPerPage,\n  onItemsPerPageChange,\n  selectPageDropdownLabel,\n  selectPageDropdownAccessibilityLabel,\n  ...rest\n}: Props) => {\n  const labelColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme?.colors.text\n  )\n    .alpha(0.6)\n    .rgb()\n    .string();\n\n  return (\n    <View\n      {...rest}\n      style={[styles.container, style]}\n      accessibilityLabel=\"pagination-container\"\n    >\n      {numberOfItemsPerPageList &&\n        numberOfItemsPerPage &&\n        onItemsPerPageChange && (\n          <View\n            accessibilityLabel=\"Options Select\"\n            style={styles.optionsContainer}\n          >\n            <Text\n              style={[styles.label, { color: labelColor }]}\n              numberOfLines={3}\n              accessibilityLabel={\n                selectPageDropdownAccessibilityLabel ||\n                'selectPageDropdownLabel'\n              }\n            >\n              {selectPageDropdownLabel}\n            </Text>\n            <PaginationDropdown\n              numberOfItemsPerPageList={numberOfItemsPerPageList}\n              numberOfItemsPerPage={numberOfItemsPerPage}\n              onItemsPerPageChange={onItemsPerPageChange}\n            />\n          </View>\n        )}\n      <Text\n        style={[styles.label, { color: labelColor }]}\n        numberOfLines={3}\n        accessibilityLabel={accessibilityLabel || 'label'}\n      >\n        {label}\n      </Text>\n      <View style={styles.iconsContainer}>\n        <PaginationControls\n          showFastPaginationControls={showFastPaginationControls}\n          onPageChange={onPageChange}\n          page={page}\n          numberOfPages={numberOfPages}\n        />\n      </View>\n    </View>\n  );\n};\n\nDataTablePagination.displayName = 'DataTable.Pagination';\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n    alignItems: 'center',\n    paddingLeft: 16,\n    flexWrap: 'wrap',\n  },\n  optionsContainer: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    marginVertical: 6,\n  },\n  label: {\n    fontSize: 12,\n    marginRight: 16,\n  },\n  button: {\n    textAlign: 'center',\n    marginRight: 16,\n  },\n  iconsContainer: {\n    flexDirection: 'row',\n  },\n  contentStyle: {\n    flexDirection: 'row-reverse',\n  },\n});\n\nexport default withInternalTheme(DataTablePagination);\n\n// @component-docs ignore-next-line\nexport { DataTablePagination };\n"]},"metadata":{},"sourceType":"module"}