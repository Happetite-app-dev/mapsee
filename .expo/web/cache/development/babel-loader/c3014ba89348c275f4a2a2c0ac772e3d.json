{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"visible\", \"action\", \"icon\", \"onIconPress\", \"iconAccessibilityLabel\", \"duration\", \"onDismiss\", \"children\", \"elevation\", \"wrapperStyle\", \"style\", \"theme\"],\n    _excluded2 = [\"style\", \"label\", \"onPress\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { withInternalTheme } from \"../core/theming\";\nimport Button from \"./Button/Button\";\nimport IconButton from \"./IconButton/IconButton\";\nimport MaterialCommunityIcon from \"./MaterialCommunityIcon\";\nimport Surface from \"./Surface\";\nimport Text from \"./Typography/Text\";\nvar DURATION_SHORT = 4000;\nvar DURATION_MEDIUM = 7000;\nvar DURATION_LONG = 10000;\n\nvar Snackbar = function Snackbar(_ref) {\n  var visible = _ref.visible,\n      action = _ref.action,\n      icon = _ref.icon,\n      onIconPress = _ref.onIconPress,\n      _ref$iconAccessibilit = _ref.iconAccessibilityLabel,\n      iconAccessibilityLabel = _ref$iconAccessibilit === void 0 ? 'Close icon' : _ref$iconAccessibilit,\n      _ref$duration = _ref.duration,\n      duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,\n      onDismiss = _ref.onDismiss,\n      children = _ref.children,\n      _ref$elevation = _ref.elevation,\n      elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,\n      wrapperStyle = _ref.wrapperStyle,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _useSafeAreaInsets = useSafeAreaInsets(),\n      bottom = _useSafeAreaInsets.bottom,\n      right = _useSafeAreaInsets.right,\n      left = _useSafeAreaInsets.left;\n\n  var _React$useRef = React.useRef(new Animated.Value(0.0)),\n      opacity = _React$useRef.current;\n\n  var hideTimeout = React.useRef(undefined);\n\n  var _React$useState = React.useState(!visible),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      hidden = _React$useState2[0],\n      setHidden = _React$useState2[1];\n\n  var scale = theme.animation.scale;\n  React.useEffect(function () {\n    return function () {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n  React.useLayoutEffect(function () {\n    if (visible) {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true\n      }).start(function (_ref2) {\n        var finished = _ref2.finished;\n\n        if (finished) {\n          var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;\n\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(onDismiss, duration);\n          }\n        }\n      });\n    } else {\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true\n      }).start(function (_ref3) {\n        var finished = _ref3.finished;\n\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n  var colors = theme.colors,\n      roundness = theme.roundness,\n      isV3 = theme.isV3;\n\n  if (hidden) {\n    return null;\n  }\n\n  var _ref5 = action || {},\n      actionStyle = _ref5.style,\n      actionLabel = _ref5.label,\n      onPressAction = _ref5.onPress,\n      actionProps = _objectWithoutProperties(_ref5, _excluded2);\n\n  var buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  var textColor = isV3 ? colors.inverseOnSurface : colors === null || colors === void 0 ? void 0 : colors.surface;\n  var backgroundColor = isV3 ? colors.inverseSurface : colors === null || colors === void 0 ? void 0 : colors.onSurface;\n  var isIconButton = isV3 && onIconPress;\n  var marginLeft = action ? -12 : -16;\n  var wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right)\n  };\n\n  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {\n    if (typeof children === 'string') {\n      return React.createElement(Text, {\n        variant: \"bodyMedium\",\n        style: [styles.content, {\n          color: textColor\n        }]\n      }, children);\n    }\n\n    return React.createElement(View, {\n      style: styles.content\n    }, React.createElement(View, null, children));\n  };\n\n  return React.createElement(View, {\n    pointerEvents: \"box-none\",\n    style: [styles.wrapper, wrapperPaddings, wrapperStyle]\n  }, React.createElement(Surface, _extends({\n    pointerEvents: \"box-none\",\n    accessibilityLiveRegion: \"polite\",\n    style: [!isV3 && styles.elevation, styles.container, {\n      backgroundColor: backgroundColor,\n      borderRadius: roundness,\n      opacity: opacity,\n      transform: [{\n        scale: visible ? opacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0.9, 1]\n        }) : 1\n      }]\n    }, style]\n  }, isV3 && {\n    elevation: elevation\n  }, rest), renderChildrenWithWrapper(), (action || isIconButton) && React.createElement(View, {\n    style: [styles.actionsContainer, {\n      marginLeft: marginLeft\n    }]\n  }, action ? React.createElement(Button, _extends({\n    onPress: function onPress(event) {\n      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction(event);\n      onDismiss();\n    },\n    style: [styles.button, actionStyle],\n    textColor: buttonTextColor,\n    compact: !isV3,\n    mode: \"text\"\n  }, actionProps), actionLabel) : null, isIconButton ? React.createElement(IconButton, {\n    accessibilityRole: \"button\",\n    borderless: true,\n    onPress: onIconPress,\n    iconColor: theme.colors.inverseOnSurface,\n    icon: icon || function (_ref4) {\n      var size = _ref4.size,\n          color = _ref4.color;\n      return React.createElement(MaterialCommunityIcon, {\n        name: \"close\",\n        color: color,\n        size: size,\n        direction: I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n      });\n    },\n    accessibilityLabel: iconAccessibilityLabel,\n    style: styles.icon\n  }) : null)));\n};\n\nSnackbar.DURATION_SHORT = DURATION_SHORT;\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\nSnackbar.DURATION_LONG = DURATION_LONG;\nvar styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%'\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4\n  },\n  elevation: {\n    elevation: 6\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0\n  }\n});\nexport default withInternalTheme(Snackbar);","map":{"version":3,"mappings":"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","names":["React","useSafeAreaInsets","withInternalTheme","Button","IconButton","MaterialCommunityIcon","Surface","Text","DURATION_SHORT","DURATION_MEDIUM","DURATION_LONG","Snackbar","visible","_ref","action","icon","onIconPress","iconAccessibilityLabel","duration","onDismiss","children","elevation","wrapperStyle","style","theme","rest","bottom","right","left","useRef","Animated","Value","opacity","current","hideTimeout","undefined","useState","hidden","setHidden","scale","animation","useEffect","clearTimeout","useLayoutEffect","timing","toValue","easing","Easing","out","ease","useNativeDriver","start","finished","_ref2","isInfinity","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","setTimeout","_ref3","colors","roundness","isV3","actionStyle","actionLabel","label","onPressAction","onPress","actionProps","buttonTextColor","inversePrimary","accent","textColor","inverseOnSurface","surface","backgroundColor","inverseSurface","onSurface","isIconButton","marginLeft","wrapperPaddings","paddingBottom","paddingHorizontal","Math","max","renderChildrenWithWrapper","variant","styles","content","color","View","pointerEvents","wrapper","_extends","accessibilityLiveRegion","container","borderRadius","transform","interpolate","inputRange","outputRange","actionsContainer","event","button","compact","mode","accessibilityRole","borderless","iconColor","size","_ref4","name","direction","I18nManager","getConstants","isRTL","accessibilityLabel","StyleSheet","create","position","width","flexDirection","justifyContent","margin","minHeight","marginHorizontal","marginVertical","flex","alignItems","marginRight","height"],"sources":["Snackbar.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  I18nManager,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Button from './Button/Button';\nimport type { IconSource } from './Icon';\nimport IconButton from './IconButton/IconButton';\nimport MaterialCommunityIcon from './MaterialCommunityIcon';\nimport Surface from './Surface';\nimport Text from './Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Surface> & {\n  /**\n   * Whether the Snackbar is currently visible.\n   */\n  visible: boolean;\n  /**\n   * Label and press callback for the action button. It should contain the following properties:\n   * - `label` - Label of the action button\n   * - `onPress` - Callback that is called when action button is pressed.\n   */\n  action?: Omit<React.ComponentProps<typeof Button>, 'children'> & {\n    label: string;\n  };\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Icon to display when `onIconPress` is defined. Default will be `close` icon.\n   */\n  icon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Function to execute on icon button press. The icon button appears only when this prop is specified.\n   */\n  onIconPress?: () => void;\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Accessibility label for the icon button. This is read by the screen reader when the user taps the button.\n   */\n  iconAccessibilityLabel?: string;\n  /**\n   * The duration for which the Snackbar is shown.\n   */\n  duration?: number;\n  /**\n   * Callback called when Snackbar is dismissed. The `visible` prop needs to be updated when this is called.\n   */\n  onDismiss: () => void;\n  /**\n   * Text content of the Snackbar.\n   */\n  children: React.ReactNode;\n  /**\n   * Style for the wrapper of the snackbar\n   */\n  /**\n   * @supported Available in v5.x with theme version 3\n   * Changes Snackbar shadow and background on iOS and Android.\n   */\n  elevation?: 0 | 1 | 2 | 3 | 4 | 5 | Animated.Value;\n  wrapperStyle?: StyleProp<ViewStyle>;\n  style?: StyleProp<ViewStyle>;\n  ref?: React.RefObject<View>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION_SHORT = 4000;\nconst DURATION_MEDIUM = 7000;\nconst DURATION_LONG = 10000;\n\n/**\n * Snackbars provide brief feedback about an operation through a message at the bottom of the screen.\n * Snackbar by default uses `onSurface` color from theme.\n * <div class=\"screenshots\">\n *   <img class=\"small\" src=\"screenshots/snackbar.gif\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View, StyleSheet } from 'react-native';\n * import { Button, Snackbar } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const onToggleSnackBar = () => setVisible(!visible);\n *\n *   const onDismissSnackBar = () => setVisible(false);\n *\n *   return (\n *     <View style={styles.container}>\n *       <Button onPress={onToggleSnackBar}>{visible ? 'Hide' : 'Show'}</Button>\n *       <Snackbar\n *         visible={visible}\n *         onDismiss={onDismissSnackBar}\n *         action={{\n *           label: 'Undo',\n *           onPress: () => {\n *             // Do something\n *           },\n *         }}>\n *         Hey there! I'm a Snackbar.\n *       </Snackbar>\n *     </View>\n *   );\n * };\n *\n * const styles = StyleSheet.create({\n *   container: {\n *     flex: 1,\n *     justifyContent: 'space-between',\n *   },\n * });\n *\n * export default MyComponent;\n * ```\n */\nconst Snackbar = ({\n  visible,\n  action,\n  icon,\n  onIconPress,\n  iconAccessibilityLabel = 'Close icon',\n  duration = DURATION_MEDIUM,\n  onDismiss,\n  children,\n  elevation = 2,\n  wrapperStyle,\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { bottom, right, left } = useSafeAreaInsets();\n\n  const { current: opacity } = React.useRef<Animated.Value>(\n    new Animated.Value(0.0)\n  );\n  const hideTimeout = React.useRef<NodeJS.Timeout | undefined>(undefined);\n\n  const [hidden, setHidden] = React.useState(!visible);\n\n  const { scale } = theme.animation;\n\n  React.useEffect(() => {\n    return () => {\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n    };\n  }, []);\n\n  React.useLayoutEffect(() => {\n    if (visible) {\n      // show\n      if (hideTimeout.current) clearTimeout(hideTimeout.current);\n      setHidden(false);\n      Animated.timing(opacity, {\n        toValue: 1,\n        duration: 200 * scale,\n        easing: Easing.out(Easing.ease),\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          const isInfinity =\n            duration === Number.POSITIVE_INFINITY ||\n            duration === Number.NEGATIVE_INFINITY;\n\n          if (!isInfinity) {\n            hideTimeout.current = setTimeout(\n              onDismiss,\n              duration\n            ) as unknown as NodeJS.Timeout;\n          }\n        }\n      });\n    } else {\n      // hide\n      if (hideTimeout.current) {\n        clearTimeout(hideTimeout.current);\n      }\n\n      Animated.timing(opacity, {\n        toValue: 0,\n        duration: 100 * scale,\n        useNativeDriver: true,\n      }).start(({ finished }) => {\n        if (finished) {\n          setHidden(true);\n        }\n      });\n    }\n  }, [visible, duration, opacity, scale, onDismiss]);\n\n  const { colors, roundness, isV3 } = theme;\n\n  if (hidden) {\n    return null;\n  }\n\n  const {\n    style: actionStyle,\n    label: actionLabel,\n    onPress: onPressAction,\n    ...actionProps\n  } = action || {};\n\n  const buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;\n  const textColor = isV3 ? colors.inverseOnSurface : colors?.surface;\n  const backgroundColor = isV3 ? colors.inverseSurface : colors?.onSurface;\n\n  const isIconButton = isV3 && onIconPress;\n\n  const marginLeft = action ? -12 : -16;\n\n  const wrapperPaddings = {\n    paddingBottom: bottom,\n    paddingHorizontal: Math.max(left, right),\n  };\n\n  const renderChildrenWithWrapper = () => {\n    if (typeof children === 'string') {\n      return (\n        <Text\n          variant=\"bodyMedium\"\n          style={[styles.content, { color: textColor }]}\n        >\n          {children}\n        </Text>\n      );\n    }\n\n    return (\n      <View style={styles.content}>\n        {/* View is added to allow multiple lines support for Text component as children */}\n        <View>{children}</View>\n      </View>\n    );\n  };\n\n  return (\n    <View\n      pointerEvents=\"box-none\"\n      style={[styles.wrapper, wrapperPaddings, wrapperStyle]}\n    >\n      <Surface\n        pointerEvents=\"box-none\"\n        accessibilityLiveRegion=\"polite\"\n        style={\n          [\n            !isV3 && styles.elevation,\n            styles.container,\n            {\n              backgroundColor,\n              borderRadius: roundness,\n              opacity: opacity,\n              transform: [\n                {\n                  scale: visible\n                    ? opacity.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [0.9, 1],\n                      })\n                    : 1,\n                },\n              ],\n            },\n            style,\n          ] as StyleProp<ViewStyle>\n        }\n        {...(isV3 && { elevation })}\n        {...rest}\n      >\n        {renderChildrenWithWrapper()}\n        {(action || isIconButton) && (\n          <View style={[styles.actionsContainer, { marginLeft }]}>\n            {action ? (\n              <Button\n                onPress={(event) => {\n                  onPressAction?.(event);\n                  onDismiss();\n                }}\n                style={[styles.button, actionStyle]}\n                textColor={buttonTextColor}\n                compact={!isV3}\n                mode=\"text\"\n                {...actionProps}\n              >\n                {actionLabel}\n              </Button>\n            ) : null}\n            {isIconButton ? (\n              <IconButton\n                accessibilityRole=\"button\"\n                borderless\n                onPress={onIconPress}\n                iconColor={theme.colors.inverseOnSurface}\n                icon={\n                  icon ||\n                  (({ size, color }) => {\n                    return (\n                      <MaterialCommunityIcon\n                        name=\"close\"\n                        color={color}\n                        size={size}\n                        direction={\n                          I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'\n                        }\n                      />\n                    );\n                  })\n                }\n                accessibilityLabel={iconAccessibilityLabel}\n                style={styles.icon}\n              />\n            ) : null}\n          </View>\n        )}\n      </Surface>\n    </View>\n  );\n};\n\n/**\n * Show the Snackbar for a short duration.\n */\nSnackbar.DURATION_SHORT = DURATION_SHORT;\n\n/**\n * Show the Snackbar for a medium duration.\n */\nSnackbar.DURATION_MEDIUM = DURATION_MEDIUM;\n\n/**\n * Show the Snackbar for a long duration.\n */\nSnackbar.DURATION_LONG = DURATION_LONG;\n\nconst styles = StyleSheet.create({\n  wrapper: {\n    position: 'absolute',\n    bottom: 0,\n    width: '100%',\n  },\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    margin: 8,\n    borderRadius: 4,\n    minHeight: 48,\n  },\n  content: {\n    marginHorizontal: 16,\n    marginVertical: 14,\n    flex: 1,\n  },\n  actionsContainer: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    minHeight: 48,\n  },\n  button: {\n    marginRight: 8,\n    marginLeft: 4,\n  },\n  elevation: {\n    elevation: 6,\n  },\n  icon: {\n    width: 40,\n    height: 40,\n    margin: 0,\n  },\n});\n\nexport default withInternalTheme(Snackbar);\n"]},"metadata":{},"sourceType":"module"}