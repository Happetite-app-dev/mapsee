{"ast":null,"code":"import { Asset } from \"./Asset\";\nimport { IS_ENV_WITH_UPDATES_ENABLED } from \"./PlatformUtils\";\nimport { setCustomSourceTransformer } from \"./resolveAssetSource\";\n\nif (IS_ENV_WITH_UPDATES_ENABLED) {\n  setCustomSourceTransformer(function (resolver) {\n    try {\n      if (resolver.asset.fileHashes) {\n        var asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch (_unused) {\n      return resolver.defaultAsset();\n    }\n  });\n}","map":{"version":3,"mappings":"AAAA,SAASA,KAAT;AACA,SAASC,2BAAT;AACA,SAASC,0BAAT;;AAGA,IAAID,2BAAJ,EAAiC;EAC/BC,0BAA0B,CAAC,UAACC,QAAD,EAAa;IACtC,IAAI;MAEF,IAAIA,QAAQ,CAACC,KAAT,CAAeC,UAAnB,EAA+B;QAC7B,IAAMD,KAAK,GAAGJ,KAAK,CAACM,YAAN,CAAmBH,QAAQ,CAACC,KAA5B,CAAd;QACA,OAAOD,QAAQ,CAACI,UAAT,CAAoBH,KAAK,CAACI,UAAN,GAAmBJ,KAAK,CAACK,QAAzB,GAAqCL,KAAK,CAACM,GAA/D,CAAP;MACD,CAHD,MAGO;QACL,OAAOP,QAAQ,CAACQ,YAAT,EAAP;MACD;IACF,CARD,CAQE,gBAAM;MACN,OAAOR,QAAQ,CAACQ,YAAT,EAAP;IACD;EACF,CAZyB,CAA1B;AAaD","names":["Asset","IS_ENV_WITH_UPDATES_ENABLED","setCustomSourceTransformer","resolver","asset","fileHashes","fromMetadata","fromSource","downloaded","localUri","uri","defaultAsset"],"sourceRoot":"","sources":["../src/Asset.fx.ts"],"sourcesContent":["import { Asset } from './Asset';\nimport { IS_ENV_WITH_UPDATES_ENABLED } from './PlatformUtils';\nimport { setCustomSourceTransformer } from './resolveAssetSource';\n\n// Override React Native's asset resolution for `Image` components in contexts where it matters\nif (IS_ENV_WITH_UPDATES_ENABLED) {\n  setCustomSourceTransformer((resolver) => {\n    try {\n      // Bundler is using the hashAssetFiles plugin if and only if the fileHashes property exists\n      if (resolver.asset.fileHashes) {\n        const asset = Asset.fromMetadata(resolver.asset);\n        return resolver.fromSource(asset.downloaded ? asset.localUri! : asset.uri);\n      } else {\n        return resolver.defaultAsset();\n      }\n    } catch {\n      return resolver.defaultAsset();\n    }\n  });\n}\n"]},"metadata":{},"sourceType":"module"}