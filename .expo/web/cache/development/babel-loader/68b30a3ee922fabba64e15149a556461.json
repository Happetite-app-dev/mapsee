{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\n\nvar PortalConsumer = function (_React$Component) {\n  _inherits(PortalConsumer, _React$Component);\n\n  var _super = _createSuper(PortalConsumer);\n\n  function PortalConsumer() {\n    var _this;\n\n    _classCallCheck(this, PortalConsumer);\n\n    _this = _super.apply(this, arguments);\n\n    _defineProperty(_assertThisInitialized(_this), \"key\", void 0);\n\n    return _this;\n  }\n\n  _createClass(PortalConsumer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.checkManager();\n      this.key = this.props.manager.mount(this.props.children);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      this.checkManager();\n      this.props.manager.update(this.key, this.props.children);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.checkManager();\n      this.props.manager.unmount(this.key);\n    }\n  }, {\n    key: \"checkManager\",\n    value: function checkManager() {\n      if (!this.props.manager) {\n        throw new Error('Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' + \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" + 'https://callstack.github.io/react-native-paper/getting-started.html');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return null;\n    }\n  }]);\n\n  return PortalConsumer;\n}(React.Component);\n\nexport { PortalConsumer as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;IASqBC,c;;;;;EAA8C;IAAA;;IAAA;;IAAA;;IAAAC;;IAAA;EAAA;;;;WACjEC,6BAAoB;MAClB,KAAKC,YAAL;MAEA,KAAKC,GAAL,GAAW,KAAKC,KAAL,CAAWC,OAAX,CAAmBC,KAAnB,CAAyB,KAAKF,KAAL,CAAWG,QAApC,CAAX;IACF;;;WAEAC,8BAAqB;MACnB,KAAKN,YAAL;MAEA,KAAKE,KAAL,CAAWC,OAAX,CAAmBI,MAAnB,CAA0B,KAAKN,GAA/B,EAAoC,KAAKC,KAAL,CAAWG,QAA/C;IACF;;;WAEAG,gCAAuB;MACrB,KAAKR,YAAL;MAEA,KAAKE,KAAL,CAAWC,OAAX,CAAmBM,OAAnB,CAA2B,KAAKR,GAAhC;IACF;;;WAIQD,wBAAe;MACrB,IAAI,CAAC,KAAKE,KAAL,CAAWC,OAAhB,EAAyB;QACvB,MAAM,IAAIO,KAAJ,CACJ,+GACE,iGADF,GAEE,qEAHE,CAAN;MAKF;IACF;;;WAEAC,kBAAS;MACP,OAAO,IAAP;IACF;;;;EAjC0Cf,KAAK,CAACgB,S;;SAA7Bf,c","names":["React","PortalConsumer","_defineProperty","componentDidMount","checkManager","key","props","manager","mount","children","componentDidUpdate","update","componentWillUnmount","unmount","Error","render","Component"],"sources":["PortalConsumer.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { PortalMethods } from './PortalHost';\n\ntype Props = {\n  manager: PortalMethods;\n  children: React.ReactNode;\n};\n\nexport default class PortalConsumer extends React.Component<Props> {\n  componentDidMount() {\n    this.checkManager();\n\n    this.key = this.props.manager.mount(this.props.children);\n  }\n\n  componentDidUpdate() {\n    this.checkManager();\n\n    this.props.manager.update(this.key, this.props.children);\n  }\n\n  componentWillUnmount() {\n    this.checkManager();\n\n    this.props.manager.unmount(this.key);\n  }\n\n  private key: any;\n\n  private checkManager() {\n    if (!this.props.manager) {\n      throw new Error(\n        'Looks like you forgot to wrap your root component with `Provider` component from `react-native-paper`.\\n\\n' +\n          \"Please read our getting-started guide and make sure you've followed all the required steps.\\n\\n\" +\n          'https://callstack.github.io/react-native-paper/getting-started.html'\n      );\n    }\n  }\n\n  render() {\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}