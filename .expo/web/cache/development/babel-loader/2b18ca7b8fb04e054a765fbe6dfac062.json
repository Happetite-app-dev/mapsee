{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../../core/theming\";\nimport Icon from \"../Icon\";\nimport TouchableRipple from \"../TouchableRipple/TouchableRipple\";\nimport Text from \"../Typography/Text\";\nimport { getContentMaxWidth, getMenuItemColor, MAX_WIDTH, MIN_WIDTH } from \"./utils\";\n\nvar MenuItem = function MenuItem(_ref) {\n  var leadingIcon = _ref.leadingIcon,\n      trailingIcon = _ref.trailingIcon,\n      dense = _ref.dense,\n      title = _ref.title,\n      disabled = _ref.disabled,\n      onPress = _ref.onPress,\n      style = _ref.style,\n      contentStyle = _ref.contentStyle,\n      testID = _ref.testID,\n      titleStyle = _ref.titleStyle,\n      accessibilityLabel = _ref.accessibilityLabel,\n      theme = _ref.theme;\n\n  var _getMenuItemColor = getMenuItemColor({\n    theme: theme,\n    disabled: disabled\n  }),\n      titleColor = _getMenuItemColor.titleColor,\n      iconColor = _getMenuItemColor.iconColor,\n      underlayColor = _getMenuItemColor.underlayColor;\n\n  var isV3 = theme.isV3;\n  var containerPadding = isV3 ? 12 : 8;\n  var iconWidth = isV3 ? 24 : 40;\n  var minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n  var maxWidth = getContentMaxWidth({\n    isV3: isV3,\n    iconWidth: iconWidth,\n    leadingIcon: leadingIcon,\n    trailingIcon: trailingIcon\n  });\n\n  var titleTextStyle = _objectSpread({\n    color: titleColor\n  }, isV3 ? theme.fonts.bodyLarge : {});\n\n  return React.createElement(TouchableRipple, {\n    style: [styles.container, {\n      paddingHorizontal: containerPadding\n    }, dense && styles.md3DenseContainer, style],\n    onPress: onPress,\n    disabled: disabled,\n    testID: testID,\n    accessibilityLabel: accessibilityLabel,\n    accessibilityRole: \"menuitem\",\n    accessibilityState: {\n      disabled: disabled\n    },\n    underlayColor: underlayColor\n  }, React.createElement(View, {\n    style: styles.row\n  }, leadingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: leadingIcon,\n    size: 24,\n    color: iconColor\n  })) : null, React.createElement(View, {\n    style: [!isV3 && styles.item, styles.content, {\n      minWidth: minWidth,\n      maxWidth: maxWidth\n    }, isV3 && (leadingIcon ? styles.md3LeadingIcon : styles.md3WithoutLeadingIcon), contentStyle],\n    pointerEvents: \"none\"\n  }, React.createElement(Text, {\n    variant: \"bodyLarge\",\n    selectable: false,\n    numberOfLines: 1,\n    style: [!isV3 && styles.title, titleTextStyle, titleStyle]\n  }, title)), isV3 && trailingIcon ? React.createElement(View, {\n    style: [!isV3 && styles.item, {\n      width: iconWidth\n    }],\n    pointerEvents: \"box-none\"\n  }, React.createElement(Icon, {\n    source: trailingIcon,\n    size: 24,\n    color: iconColor\n  })) : null));\n};\n\nMenuItem.displayName = 'Menu.Item';\nvar styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center'\n  },\n  md3DenseContainer: {\n    height: 32\n  },\n  row: {\n    flexDirection: 'row'\n  },\n  title: {\n    fontSize: 16\n  },\n  item: {\n    marginHorizontal: 8\n  },\n  content: {\n    justifyContent: 'center'\n  },\n  md3LeadingIcon: {\n    marginLeft: 12\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4\n  }\n});\nexport default withInternalTheme(MenuItem);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Icon","TouchableRipple","Text","getContentMaxWidth","getMenuItemColor","MAX_WIDTH","MIN_WIDTH","MenuItem","leadingIcon","_ref","trailingIcon","dense","title","disabled","onPress","style","contentStyle","testID","titleStyle","accessibilityLabel","theme","titleColor","iconColor","underlayColor","isV3","containerPadding","iconWidth","minWidth","maxWidth","titleTextStyle","color","fonts","bodyLarge","styles","container","paddingHorizontal","md3DenseContainer","accessibilityRole","accessibilityState","View","row","item","width","pointerEvents","source","size","content","md3LeadingIcon","md3WithoutLeadingIcon","variant","selectable","numberOfLines","displayName","StyleSheet","create","height","justifyContent","flexDirection","fontSize","marginHorizontal","marginLeft"],"sources":["MenuItem.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  GestureResponderEvent,\n  StyleProp,\n  StyleSheet,\n  TextStyle,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../../core/theming';\nimport type { InternalTheme } from '../../types';\nimport Icon, { IconSource } from '../Icon';\nimport TouchableRipple from '../TouchableRipple/TouchableRipple';\nimport Text from '../Typography/Text';\nimport {\n  getContentMaxWidth,\n  getMenuItemColor,\n  MAX_WIDTH,\n  MIN_WIDTH,\n} from './utils';\n\nexport type Props = {\n  /**\n   * Title text for the `MenuItem`.\n   */\n  title: React.ReactNode;\n  /**\n   * @renamed Renamed from 'icon' to 'leadingIcon' in v5.x\n   *\n   * Leading icon to display for the `MenuItem`.\n   */\n  leadingIcon?: IconSource;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Trailing icon to display for the `MenuItem`.\n   */\n  trailingIcon?: IconSource;\n  /**\n   * Whether the 'item' is disabled. A disabled 'item' is greyed out and `onPress` is not called on touch.\n   */\n  disabled?: boolean;\n  /**\n   * @supported Available in v5.x with theme version 3\n   *\n   * Sets min height with densed layout.\n   */\n  dense?: boolean;\n  /**\n   * Function to execute on press.\n   */\n  onPress?: (e: GestureResponderEvent) => void;\n  /**\n   * @optional\n   */\n  style?: StyleProp<ViewStyle>;\n  contentStyle?: StyleProp<ViewStyle>;\n  titleStyle?: StyleProp<TextStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n  /**\n   * TestID used for testing purposes\n   */\n  testID?: string;\n  /**\n   * Accessibility label for the Touchable. This is read by the screen reader when the user taps the component.\n   */\n  accessibilityLabel?: string;\n};\n\n/**\n * A component to show a single list item inside a Menu.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"medium\" src=\"screenshots/menu-item.png\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { View } from 'react-native';\n * import { Menu } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <View style={{ flex: 1 }}>\n *     <Menu.Item leadingIcon=\"redo\" onPress={() => {}} title=\"Redo\" />\n *     <Menu.Item leadingIcon=\"undo\" onPress={() => {}} title=\"Undo\" />\n *     <Menu.Item leadingIcon=\"content-cut\" onPress={() => {}} title=\"Cut\" disabled />\n *     <Menu.Item leadingIcon=\"content-copy\" onPress={() => {}} title=\"Copy\" disabled />\n *     <Menu.Item leadingIcon=\"content-paste\" onPress={() => {}} title=\"Paste\" />\n *   </View>\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst MenuItem = ({\n  leadingIcon,\n  trailingIcon,\n  dense,\n  title,\n  disabled,\n  onPress,\n  style,\n  contentStyle,\n  testID,\n  titleStyle,\n  accessibilityLabel,\n  theme,\n}: Props) => {\n  const { titleColor, iconColor, underlayColor } = getMenuItemColor({\n    theme,\n    disabled,\n  });\n  const { isV3 } = theme;\n\n  const containerPadding = isV3 ? 12 : 8;\n\n  const iconWidth = isV3 ? 24 : 40;\n\n  const minWidth = MIN_WIDTH - (isV3 ? 12 : 16);\n\n  const maxWidth = getContentMaxWidth({\n    isV3,\n    iconWidth,\n    leadingIcon,\n    trailingIcon,\n  });\n\n  const titleTextStyle = {\n    color: titleColor,\n    ...(isV3 ? theme.fonts.bodyLarge : {}),\n  };\n\n  return (\n    <TouchableRipple\n      style={[\n        styles.container,\n        { paddingHorizontal: containerPadding },\n        dense && styles.md3DenseContainer,\n        style,\n      ]}\n      onPress={onPress}\n      disabled={disabled}\n      testID={testID}\n      accessibilityLabel={accessibilityLabel}\n      accessibilityRole=\"menuitem\"\n      accessibilityState={{ disabled }}\n      underlayColor={underlayColor}\n    >\n      <View style={styles.row}>\n        {leadingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={leadingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n        <View\n          style={[\n            !isV3 && styles.item,\n            styles.content,\n            { minWidth, maxWidth },\n            isV3 &&\n              (leadingIcon\n                ? styles.md3LeadingIcon\n                : styles.md3WithoutLeadingIcon),\n            contentStyle,\n          ]}\n          pointerEvents=\"none\"\n        >\n          <Text\n            variant=\"bodyLarge\"\n            selectable={false}\n            numberOfLines={1}\n            style={[!isV3 && styles.title, titleTextStyle, titleStyle]}\n          >\n            {title}\n          </Text>\n        </View>\n        {isV3 && trailingIcon ? (\n          <View\n            style={[!isV3 && styles.item, { width: iconWidth }]}\n            pointerEvents=\"box-none\"\n          >\n            <Icon source={trailingIcon} size={24} color={iconColor} />\n          </View>\n        ) : null}\n      </View>\n    </TouchableRipple>\n  );\n};\n\nMenuItem.displayName = 'Menu.Item';\n\nconst styles = StyleSheet.create({\n  container: {\n    minWidth: MIN_WIDTH,\n    maxWidth: MAX_WIDTH,\n    height: 48,\n    justifyContent: 'center',\n  },\n  md3DenseContainer: {\n    height: 32,\n  },\n  row: {\n    flexDirection: 'row',\n  },\n  title: {\n    fontSize: 16,\n  },\n  item: {\n    marginHorizontal: 8,\n  },\n  content: {\n    justifyContent: 'center',\n  },\n  md3LeadingIcon: {\n    marginLeft: 12,\n  },\n  md3WithoutLeadingIcon: {\n    marginLeft: 4,\n  },\n});\n\nexport default withInternalTheme(MenuItem);\n"]},"metadata":{},"sourceType":"module"}