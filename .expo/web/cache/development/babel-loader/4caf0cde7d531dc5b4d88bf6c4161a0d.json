{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nvar _excluded = [\"repeats\"],\n    _excluded2 = [\"channelId\"],\n    _excluded3 = [\"channelId\"],\n    _excluded4 = [\"channelId\"],\n    _excluded5 = [\"channelId\"],\n    _excluded6 = [\"channelId\"];\nimport { Platform, UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function scheduleNotificationAsync(_x) {\n  return _scheduleNotificationAsync.apply(this, arguments);\n}\n\nfunction _scheduleNotificationAsync() {\n  _scheduleNotificationAsync = _asyncToGenerator(function* (request) {\n    var _request$identifier;\n\n    if (!NotificationScheduler.scheduleNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n    }\n\n    return yield NotificationScheduler.scheduleNotificationAsync((_request$identifier = request.identifier) != null ? _request$identifier : uuidv4(), request.content, parseTrigger(request.trigger));\n  });\n  return _scheduleNotificationAsync.apply(this, arguments);\n}\n\nvar DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['hour', 'minute'];\nvar WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['weekday', 'hour', 'minute'];\nvar YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS = ['day', 'month', 'hour', 'minute'];\nexport function parseTrigger(userFacingTrigger) {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger === undefined) {\n    throw new TypeError('Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.');\n  }\n\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError('Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.');\n  } else if ('seconds' in userFacingTrigger) {\n    var _userFacingTrigger$re;\n\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: (_userFacingTrigger$re = userFacingTrigger.repeats) != null ? _userFacingTrigger$re : false\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    var repeats = userFacingTrigger.repeats,\n        calendarTrigger = _objectWithoutProperties(userFacingTrigger, _excluded);\n\n    return {\n      type: 'calendar',\n      value: calendarTrigger,\n      repeats: repeats\n    };\n  } else {\n    return Platform.select({\n      default: null,\n      android: {\n        type: 'channel',\n        channelId: userFacingTrigger.channelId\n      }\n    });\n  }\n}\n\nfunction isCalendarTrigger(trigger) {\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded2);\n\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\n\nfunction isDateTrigger(trigger) {\n  return trigger instanceof Date || typeof trigger === 'number' || typeof trigger === 'object' && 'date' in trigger;\n}\n\nfunction parseDateTrigger(trigger) {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return {\n      type: 'date',\n      timestamp: toTimestamp(trigger)\n    };\n  }\n\n  return {\n    type: 'date',\n    timestamp: toTimestamp(trigger.date),\n    channelId: trigger.channelId\n  };\n}\n\nfunction toTimestamp(date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n\n  return date;\n}\n\nfunction isDailyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded3);\n\n  return Object.keys(triggerWithoutChannelId).length === DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isWeeklyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded4);\n\n  return Object.keys(triggerWithoutChannelId).length === WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isYearlyTriggerInput(trigger) {\n  if (typeof trigger !== 'object') return false;\n\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded5);\n\n  return Object.keys(triggerWithoutChannelId).length === YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 && YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(function (component) {\n    return component in triggerWithoutChannelId;\n  }) && 'repeats' in triggerWithoutChannelId && triggerWithoutChannelId.repeats === true;\n}\n\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(trigger) {\n  var channelId = trigger.channelId,\n      triggerWithoutChannelId = _objectWithoutProperties(trigger, _excluded6);\n\n  return 'seconds' in triggerWithoutChannelId && 'repeats' in triggerWithoutChannelId && Object.keys(triggerWithoutChannelId).length > 2 || 'seconds' in triggerWithoutChannelId && !('repeats' in triggerWithoutChannelId) && Object.keys(triggerWithoutChannelId).length > 1;\n}\n\nfunction validateDateComponentsInTrigger(trigger, components) {\n  var anyTriggerType = trigger;\n  components.forEach(function (component) {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(\"The \" + component + \" parameter needs to be present\");\n    }\n\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(\"The \" + component + \" parameter should be a number\");\n    }\n\n    switch (component) {\n      case 'month':\n        {\n          var month = anyTriggerType.month;\n\n          if (month < 0 || month > 11) {\n            throw new RangeError(\"The month parameter needs to be between 0 and 11. Found: \" + month);\n          }\n\n          break;\n        }\n\n      case 'day':\n        {\n          var day = anyTriggerType.day,\n              _month = anyTriggerType.month;\n          var daysInGivenMonth = daysInMonth(_month);\n\n          if (day < 1 || day > daysInGivenMonth) {\n            throw new RangeError(\"The day parameter for month \" + _month + \" must be between 1 and \" + daysInGivenMonth + \". Found: \" + day);\n          }\n\n          break;\n        }\n\n      case 'weekday':\n        {\n          var weekday = anyTriggerType.weekday;\n\n          if (weekday < 1 || weekday > 7) {\n            throw new RangeError(\"The weekday parameter needs to be between 1 and 7. Found: \" + weekday);\n          }\n\n          break;\n        }\n\n      case 'hour':\n        {\n          var hour = anyTriggerType.hour;\n\n          if (hour < 0 || hour > 23) {\n            throw new RangeError(\"The hour parameter needs to be between 0 and 23. Found: \" + hour);\n          }\n\n          break;\n        }\n\n      case 'minute':\n        {\n          var minute = anyTriggerType.minute;\n\n          if (minute < 0 || minute > 59) {\n            throw new RangeError(\"The minute parameter needs to be between 0 and 59. Found: \" + minute);\n          }\n\n          break;\n        }\n    }\n  });\n}\n\nfunction daysInMonth() {\n  var month = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n  var year = arguments.length > 1 ? arguments[1] : undefined;\n  return new Date(year != null ? year : 2000, month + 1, 0).getDate();\n}","map":{"version":3,"mappings":"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","names":["Platform","UnavailabilityError","v4","uuidv4","NotificationScheduler","scheduleNotificationAsync","request","identifier","content","parseTrigger","trigger","DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS","WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS","YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS","userFacingTrigger","undefined","TypeError","isDateTrigger","parseDateTrigger","isDailyTriggerInput","validateDateComponentsInTrigger","type","channelId","hour","minute","isWeeklyTriggerInput","weekday","isYearlyTriggerInput","day","month","isSecondsPropertyMisusedInCalendarTriggerInput","seconds","repeats","isCalendarTrigger","calendarTrigger","value","select","default","android","triggerWithoutChannelId","Object","keys","length","Date","timestamp","toTimestamp","date","getTime","every","component","components","anyTriggerType","forEach","RangeError","daysInGivenMonth","daysInMonth","year","getDate"],"sourceRoot":"","sources":["../src/scheduleNotificationAsync.ts"],"sourcesContent":["import { Platform, UnavailabilityError } from 'expo-modules-core';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport NotificationScheduler from './NotificationScheduler';\nimport { NotificationTriggerInput as NativeNotificationTriggerInput } from './NotificationScheduler.types';\nimport {\n  NotificationRequestInput,\n  NotificationTriggerInput,\n  DailyTriggerInput,\n  WeeklyTriggerInput,\n  YearlyTriggerInput,\n  CalendarTriggerInput,\n  TimeIntervalTriggerInput,\n  DateTriggerInput,\n  ChannelAwareTriggerInput,\n  SchedulableNotificationTriggerInput,\n} from './Notifications.types';\n\nexport default async function scheduleNotificationAsync(\n  request: NotificationRequestInput\n): Promise<string> {\n  if (!NotificationScheduler.scheduleNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'scheduleNotificationAsync');\n  }\n\n  return await NotificationScheduler.scheduleNotificationAsync(\n    request.identifier ?? uuidv4(),\n    request.content,\n    parseTrigger(request.trigger)\n  );\n}\n\ntype ValidTriggerDateComponents = 'month' | 'day' | 'weekday' | 'hour' | 'minute';\n\nconst DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'hour',\n  'minute',\n];\nconst WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'weekday',\n  'hour',\n  'minute',\n];\nconst YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS: readonly ValidTriggerDateComponents[] = [\n  'day',\n  'month',\n  'hour',\n  'minute',\n];\n\nexport function parseTrigger(\n  userFacingTrigger: NotificationTriggerInput\n): NativeNotificationTriggerInput {\n  if (userFacingTrigger === null) {\n    return null;\n  }\n\n  if (userFacingTrigger === undefined) {\n    throw new TypeError(\n      'Encountered an `undefined` notification trigger. If you want to trigger the notification immediately, pass in an explicit `null` value.'\n    );\n  }\n\n  if (isDateTrigger(userFacingTrigger)) {\n    return parseDateTrigger(userFacingTrigger);\n  } else if (isDailyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'daily',\n      channelId: userFacingTrigger.channelId,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isWeeklyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'weekly',\n      channelId: userFacingTrigger.channelId,\n      weekday: userFacingTrigger.weekday,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isYearlyTriggerInput(userFacingTrigger)) {\n    validateDateComponentsInTrigger(userFacingTrigger, YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS);\n    return {\n      type: 'yearly',\n      channelId: userFacingTrigger.channelId,\n      day: userFacingTrigger.day,\n      month: userFacingTrigger.month,\n      hour: userFacingTrigger.hour,\n      minute: userFacingTrigger.minute,\n    };\n  } else if (isSecondsPropertyMisusedInCalendarTriggerInput(userFacingTrigger)) {\n    throw new TypeError(\n      'Could not have inferred the notification trigger type: if you want to use a time interval trigger, pass in only `seconds` with or without `repeats` property; if you want to use calendar-based trigger, pass in `second`.'\n    );\n  } else if ('seconds' in userFacingTrigger) {\n    return {\n      type: 'timeInterval',\n      channelId: userFacingTrigger.channelId,\n      seconds: userFacingTrigger.seconds,\n      repeats: userFacingTrigger.repeats ?? false,\n    };\n  } else if (isCalendarTrigger(userFacingTrigger)) {\n    const { repeats, ...calendarTrigger } = userFacingTrigger;\n    return { type: 'calendar', value: calendarTrigger, repeats };\n  } else {\n    return Platform.select({\n      default: null, // There's no notion of channels on platforms other than Android.\n      android: { type: 'channel', channelId: userFacingTrigger.channelId },\n    });\n  }\n}\n\nfunction isCalendarTrigger(\n  trigger: CalendarTriggerInput | ChannelAwareTriggerInput\n): trigger is CalendarTriggerInput {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return Object.keys(triggerWithoutChannelId).length > 0;\n}\n\nfunction isDateTrigger(\n  trigger:\n    | DateTriggerInput\n    | WeeklyTriggerInput\n    | DailyTriggerInput\n    | CalendarTriggerInput\n    | TimeIntervalTriggerInput\n): trigger is DateTriggerInput {\n  return (\n    trigger instanceof Date ||\n    typeof trigger === 'number' ||\n    (typeof trigger === 'object' && 'date' in trigger)\n  );\n}\n\nfunction parseDateTrigger(trigger: DateTriggerInput): NativeNotificationTriggerInput {\n  if (trigger instanceof Date || typeof trigger === 'number') {\n    return { type: 'date', timestamp: toTimestamp(trigger) };\n  }\n  return { type: 'date', timestamp: toTimestamp(trigger.date), channelId: trigger.channelId };\n}\n\nfunction toTimestamp(date: number | Date) {\n  if (date instanceof Date) {\n    return date.getTime();\n  }\n  return date;\n}\n\nfunction isDailyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is DailyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as DailyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    DAILY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isWeeklyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is WeeklyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as WeeklyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    WEEKLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isYearlyTriggerInput(\n  trigger: SchedulableNotificationTriggerInput\n): trigger is YearlyTriggerInput {\n  if (typeof trigger !== 'object') return false;\n  const { channelId, ...triggerWithoutChannelId } = trigger as YearlyTriggerInput;\n  return (\n    Object.keys(triggerWithoutChannelId).length ===\n      YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.length + 1 &&\n    YEARLY_TRIGGER_EXPECTED_DATE_COMPONENTS.every(\n      (component) => component in triggerWithoutChannelId\n    ) &&\n    'repeats' in triggerWithoutChannelId &&\n    triggerWithoutChannelId.repeats === true\n  );\n}\n\nfunction isSecondsPropertyMisusedInCalendarTriggerInput(\n  trigger: TimeIntervalTriggerInput | CalendarTriggerInput\n) {\n  const { channelId, ...triggerWithoutChannelId } = trigger;\n  return (\n    // eg. { seconds: ..., repeats: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      'repeats' in triggerWithoutChannelId &&\n      Object.keys(triggerWithoutChannelId).length > 2) ||\n    // eg. { seconds: ..., hour: ... }\n    ('seconds' in triggerWithoutChannelId &&\n      !('repeats' in triggerWithoutChannelId) &&\n      Object.keys(triggerWithoutChannelId).length > 1)\n  );\n}\n\nfunction validateDateComponentsInTrigger(\n  trigger: NonNullable<NotificationTriggerInput>,\n  components: readonly ValidTriggerDateComponents[]\n) {\n  const anyTriggerType = trigger as any;\n  components.forEach((component) => {\n    if (!(component in anyTriggerType)) {\n      throw new TypeError(`The ${component} parameter needs to be present`);\n    }\n    if (typeof anyTriggerType[component] !== 'number') {\n      throw new TypeError(`The ${component} parameter should be a number`);\n    }\n    switch (component) {\n      case 'month': {\n        const { month } = anyTriggerType;\n        if (month < 0 || month > 11) {\n          throw new RangeError(`The month parameter needs to be between 0 and 11. Found: ${month}`);\n        }\n        break;\n      }\n      case 'day': {\n        const { day, month } = anyTriggerType;\n        const daysInGivenMonth = daysInMonth(month);\n        if (day < 1 || day > daysInGivenMonth) {\n          throw new RangeError(\n            `The day parameter for month ${month} must be between 1 and ${daysInGivenMonth}. Found: ${day}`\n          );\n        }\n        break;\n      }\n      case 'weekday': {\n        const { weekday } = anyTriggerType;\n        if (weekday < 1 || weekday > 7) {\n          throw new RangeError(\n            `The weekday parameter needs to be between 1 and 7. Found: ${weekday}`\n          );\n        }\n        break;\n      }\n      case 'hour': {\n        const { hour } = anyTriggerType;\n        if (hour < 0 || hour > 23) {\n          throw new RangeError(`The hour parameter needs to be between 0 and 23. Found: ${hour}`);\n        }\n        break;\n      }\n      case 'minute': {\n        const { minute } = anyTriggerType;\n        if (minute < 0 || minute > 59) {\n          throw new RangeError(\n            `The minute parameter needs to be between 0 and 59. Found: ${minute}`\n          );\n        }\n        break;\n      }\n    }\n  });\n}\n\n/**\n * Determines the number of days in the given month (or January if omitted).\n * If year is specified, it will include leap year logic, else it will always assume a leap year\n */\nfunction daysInMonth(month: number = 0, year?: number) {\n  return new Date(year ?? 2000, month + 1, 0).getDate();\n}\n"]},"metadata":{},"sourceType":"module"}