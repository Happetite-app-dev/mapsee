{"ast":null,"code":"import color from 'color';\n\nvar getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {\n  var theme = _ref.theme,\n      customColor = _ref.customColor;\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {\n  var theme = _ref2.theme,\n      customUncheckedColor = _ref2.customUncheckedColor;\n\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getAndroidRippleColor = function getAndroidRippleColor(_ref3) {\n  var theme = _ref3.theme,\n      checkedColor = _ref3.checkedColor,\n      disabled = _ref3.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nvar getAndroidControlColor = function getAndroidControlColor(_ref4) {\n  var theme = _ref4.theme,\n      checked = _ref4.checked,\n      disabled = _ref4.disabled,\n      checkedColor = _ref4.checkedColor,\n      uncheckedColor = _ref4.uncheckedColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n\n  return uncheckedColor;\n};\n\nexport var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {\n  var theme = _ref5.theme,\n      disabled = _ref5.disabled,\n      checked = _ref5.checked,\n      customColor = _ref5.customColor,\n      customUncheckedColor = _ref5.customUncheckedColor;\n  var checkedColor = getAndroidCheckedColor({\n    theme: theme,\n    customColor: customColor\n  });\n  var uncheckedColor = getAndroidUncheckedColor({\n    theme: theme,\n    customUncheckedColor: customUncheckedColor\n  });\n  return {\n    rippleColor: getAndroidRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    }),\n    selectionControlColor: getAndroidControlColor({\n      theme: theme,\n      disabled: disabled,\n      checked: checked,\n      checkedColor: checkedColor,\n      uncheckedColor: uncheckedColor\n    })\n  };\n};\n\nvar getIOSCheckedColor = function getIOSCheckedColor(_ref6) {\n  var theme = _ref6.theme,\n      disabled = _ref6.disabled,\n      customColor = _ref6.customColor;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getIOSRippleColor = function getIOSRippleColor(_ref7) {\n  var theme = _ref7.theme,\n      checkedColor = _ref7.checkedColor,\n      disabled = _ref7.disabled;\n\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {\n  var theme = _ref8.theme,\n      disabled = _ref8.disabled,\n      customColor = _ref8.customColor;\n  var checkedColor = getIOSCheckedColor({\n    theme: theme,\n    disabled: disabled,\n    customColor: customColor\n  });\n  return {\n    checkedColor: checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme: theme,\n      checkedColor: checkedColor,\n      disabled: disabled\n    })\n  };\n};","map":{"version":3,"mappings":"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","names":["color","getAndroidCheckedColor","theme","_ref","customColor","isV3","colors","primary","accent","getAndroidUncheckedColor","_ref2","customUncheckedColor","onSurfaceVariant","dark","text","alpha","rgb","string","getAndroidRippleColor","_ref3","checkedColor","disabled","onSurface","fade","getAndroidControlColor","_ref4","checked","uncheckedColor","onSurfaceDisabled","getAndroidSelectionControlColor","_ref5","rippleColor","selectionControlColor","getIOSCheckedColor","_ref6","getIOSRippleColor","_ref7","getSelectionControlIOSColor","_ref8"],"sources":["utils.ts"],"sourcesContent":["import color from 'color';\n\nimport type { InternalTheme } from '../../types';\n\nconst getAndroidCheckedColor = ({\n  theme,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n}) => {\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getAndroidUncheckedColor = ({\n  theme,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  customUncheckedColor?: string;\n}) => {\n  if (customUncheckedColor) {\n    return customUncheckedColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (theme.dark) {\n    return color(theme.colors.text).alpha(0.7).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getAndroidRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nconst getAndroidControlColor = ({\n  theme,\n  checked,\n  disabled,\n  checkedColor,\n  uncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  checkedColor: string;\n  uncheckedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.text;\n  }\n\n  if (checked) {\n    return checkedColor;\n  }\n  return uncheckedColor;\n};\n\nexport const getAndroidSelectionControlColor = ({\n  theme,\n  disabled,\n  checked,\n  customColor,\n  customUncheckedColor,\n}: {\n  theme: InternalTheme;\n  checked: boolean;\n  disabled?: boolean;\n  customColor?: string;\n  customUncheckedColor?: string;\n}) => {\n  const checkedColor = getAndroidCheckedColor({ theme, customColor });\n  const uncheckedColor = getAndroidUncheckedColor({\n    theme,\n    customUncheckedColor,\n  });\n  return {\n    rippleColor: getAndroidRippleColor({ theme, checkedColor, disabled }),\n    selectionControlColor: getAndroidControlColor({\n      theme,\n      disabled,\n      checked,\n      checkedColor,\n      uncheckedColor,\n    }),\n  };\n};\n\nconst getIOSCheckedColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  customColor?: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n    return theme.colors.disabled;\n  }\n\n  if (customColor) {\n    return customColor;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getIOSRippleColor = ({\n  theme,\n  checkedColor,\n  disabled,\n}: {\n  theme: InternalTheme;\n  checkedColor: string;\n  disabled?: boolean;\n}) => {\n  if (disabled) {\n    if (theme.isV3) {\n      return color(theme.colors.onSurface).alpha(0.16).rgb().string();\n    }\n    return color(theme.colors.text).alpha(0.16).rgb().string();\n  }\n  return color(checkedColor).fade(0.32).rgb().string();\n};\n\nexport const getSelectionControlIOSColor = ({\n  theme,\n  disabled,\n  customColor,\n}: {\n  theme: InternalTheme;\n  disabled?: boolean;\n  customColor?: string;\n}) => {\n  const checkedColor = getIOSCheckedColor({ theme, disabled, customColor });\n  return {\n    checkedColor,\n    rippleColor: getIOSRippleColor({\n      theme,\n      checkedColor,\n      disabled,\n    }),\n  };\n};\n"]},"metadata":{},"sourceType":"module"}