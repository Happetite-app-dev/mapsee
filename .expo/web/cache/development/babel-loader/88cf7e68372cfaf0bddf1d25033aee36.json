{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { onValue, ref } from \"@firebase/database\";\nimport { useEffect, useState } from \"react\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { database } from \"../firebase\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar db = database;\n\nvar gotoEditScreen = function gotoEditScreen(_ref) {\n  var navigation = _ref.navigation,\n      recordID = _ref.recordID;\n  var recordData;\n  onValue(ref(db, \"/records/\" + recordID), function (snapshot) {\n    recordData = snapshot.val();\n  });\n  navigation.navigate(\"EditScreen\", _objectSpread({\n    recordID: recordID\n  }, recordData));\n};\n\nvar ReceptRecordAddDoneList = function ReceptRecordAddDoneList(_ref2) {\n  var performerObject = _ref2.performerObject,\n      folderObject = _ref2.folderObject,\n      recordID = _ref2.recordID,\n      navigation = _ref2.navigation;\n\n  var _useState = useState(performerObject || {\n    id: \"\",\n    firstName: \"\",\n    lastName: \"\"\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      performerObj = _useState2[0],\n      setPerformerObj = _useState2[1];\n\n  useEffect(function () {\n    if (performerObject != undefined) {\n      setPerformerObj(performerObject);\n    }\n  }, [performerObject]);\n  var performerID = JSON.stringify(performerObj.id).slice(1, -1);\n  var performerFirstName = JSON.stringify(performerObj.firstName).slice(1, -1);\n  var performerLastName = JSON.stringify(performerObj.lastName).slice(1, -1);\n\n  var _useState3 = useState(folderObject || {\n    folderName: \"\",\n    folderColor: \"\",\n    folderUserIDs: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      folderObj = _useState4[0],\n      setFolderObj = _useState4[1];\n\n  useEffect(function () {\n    if (folderObject != undefined) {\n      setFolderObj(folderObject);\n    }\n  }, [folderObject]);\n  var folderName = JSON.stringify(folderObj.folderName).slice(1, -1);\n  return _jsx(TouchableOpacity, {\n    onPress: function onPress() {\n      gotoEditScreen({\n        navigation: navigation,\n        recordID: recordID\n      });\n    },\n    style: {\n      flex: 1,\n      alignItems: \"center\",\n      marginBottom: 40\n    },\n    children: _jsx(View, {\n      style: {\n        width: 344,\n        height: 24,\n        borderRadius: 16,\n        flexDirection: \"row\"\n      },\n      children: _jsxs(Text, {\n        style: {\n          left: 16,\n          top: 5,\n          fontWeight: \"400\",\n          fontSize: 14,\n          lineHeight: 16,\n          letterSpacing: -0.5\n        },\n        children: [_jsxs(Text, {\n          style: {\n            fontWeight: \"700\"\n          },\n          children: [performerLastName, performerFirstName, \"(@\", performerID, \")\"]\n        }), \"\\uB2D8\\uC774\", _jsxs(Text, {\n          style: {\n            fontWeight: \"700\"\n          },\n          children: [\"\\uD3F4\\uB354[\", folderName, \"]\"]\n        }), \"\\uC5D0 \\uAE30\\uB85D\\uC744 \\uB0A8\\uACBC\\uC2B5\\uB2C8\\uB2E4.\"]\n      })\n    })\n  });\n};\n\nexport default ReceptRecordAddDoneList;","map":{"version":3,"names":["onValue","ref","useEffect","useState","database","db","gotoEditScreen","navigation","recordID","recordData","snapshot","val","navigate","ReceptRecordAddDoneList","performerObject","folderObject","id","firstName","lastName","performerObj","setPerformerObj","undefined","performerID","JSON","stringify","slice","performerFirstName","performerLastName","folderName","folderColor","folderUserIDs","folderObj","setFolderObj","flex","alignItems","marginBottom","width","height","borderRadius","flexDirection","left","top","fontWeight","fontSize","lineHeight","letterSpacing"],"sources":["/Users/jeongin/mapsee_2/components/ReceptRecordAddDoneList.js"],"sourcesContent":["import { onValue, ref } from \"@firebase/database\";\nimport { useEffect, useState } from \"react\";\nimport {\n  Pressable,\n  SafeAreaView,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\n\nimport { database } from \"../firebase\";\nconst db = database;\nconst gotoEditScreen = ({ navigation, recordID }) => {\n  let recordData;\n  onValue(ref(db, `/records/${recordID}`), (snapshot) => {\n    recordData = snapshot.val();\n  });\n  navigation.navigate(\"EditScreen\", {\n    recordID,\n    ...recordData,\n  });\n};\nconst ReceptRecordAddDoneList = ({\n  performerObject,\n  folderObject,\n  recordID,\n  navigation,\n}) => {\n  const [performerObj, setPerformerObj] = useState(\n    performerObject || { id: \"\", firstName: \"\", lastName: \"\" }\n  );\n  useEffect(() => {\n    if (performerObject != undefined) {\n      setPerformerObj(performerObject);\n    }\n  }, [performerObject]);\n  const performerID = JSON.stringify(performerObj.id).slice(1, -1);\n  const performerFirstName = JSON.stringify(performerObj.firstName).slice(\n    1,\n    -1\n  );\n  const performerLastName = JSON.stringify(performerObj.lastName).slice(1, -1);\n  const [folderObj, setFolderObj] = useState(\n    folderObject || { folderName: \"\", folderColor: \"\", folderUserIDs: [] }\n  );\n  useEffect(() => {\n    if (folderObject != undefined) {\n      setFolderObj(folderObject);\n    }\n  }, [folderObject]);\n  const folderName = JSON.stringify(folderObj.folderName).slice(1, -1);\n  return (\n    <TouchableOpacity\n      onPress={() => {\n        gotoEditScreen({ navigation, recordID });\n      }}\n      style={{ flex: 1, alignItems: \"center\", marginBottom: 40 }}\n    >\n      <View\n        style={{\n          width: 344,\n          height: 24,\n          borderRadius: 16,\n          flexDirection: \"row\",\n        }}\n      >\n        <Text\n          style={{\n            left: 16,\n            top: 5,\n            fontWeight: \"400\",\n            fontSize: 14,\n            lineHeight: 16,\n            letterSpacing: -0.5,\n          }}\n        >\n          <Text style={{ fontWeight: \"700\" }}>\n            {performerLastName}\n            {performerFirstName}(@{performerID})\n          </Text>\n          님이\n          <Text style={{ fontWeight: \"700\" }}>폴더[{folderName}]</Text>에 기록을\n          남겼습니다.\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n};\n\nexport default ReceptRecordAddDoneList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}