{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport color from 'color';\nimport { black, white } from \"../../styles/themes/v2/colors\";\n\nvar getBorderColor = function getBorderColor(_ref) {\n  var theme = _ref.theme,\n      isOutlined = _ref.isOutlined,\n      disabled = _ref.disabled,\n      selectedColor = _ref.selectedColor,\n      backgroundColor = _ref.backgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nvar getTextColor = function getTextColor(_ref2) {\n  var theme = _ref2.theme,\n      isOutlined = _ref2.isOutlined,\n      disabled = _ref2.disabled,\n      selectedColor = _ref2.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nvar getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {\n  var theme = _ref3.theme,\n      isOutlined = _ref3.isOutlined;\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    var _theme$colors;\n\n    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nvar getBackgroundColor = function getBackgroundColor(_ref4) {\n  var theme = _ref4.theme,\n      isOutlined = _ref4.isOutlined,\n      disabled = _ref4.disabled,\n      customBackgroundColor = _ref4.customBackgroundColor;\n\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({\n    theme: theme,\n    isOutlined: isOutlined\n  });\n};\n\nvar getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {\n  var theme = _ref5.theme,\n      isOutlined = _ref5.isOutlined,\n      disabled = _ref5.disabled,\n      customBackgroundColor = _ref5.customBackgroundColor,\n      showSelectedOverlay = _ref5.showSelectedOverlay;\n  var backgroundColor = getBackgroundColor({\n    theme: theme,\n    disabled: disabled,\n    isOutlined: isOutlined,\n    customBackgroundColor: customBackgroundColor\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0.12).rgb().string();\n      }\n\n      return color(backgroundColor).mix(color(theme.colors.onSurfaceVariant), 0).rgb().string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0.12).rgb().string();\n    }\n\n    return color(backgroundColor).mix(color(theme.colors.onSecondaryContainer), 0).rgb().string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nvar getIconColor = function getIconColor(_ref6) {\n  var theme = _ref6.theme,\n      isOutlined = _ref6.isOutlined,\n      disabled = _ref6.disabled,\n      selectedColor = _ref6.selectedColor;\n  var isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nvar getUnderlayColor = function getUnderlayColor(_ref7) {\n  var theme = _ref7.theme,\n      isOutlined = _ref7.isOutlined,\n      disabled = _ref7.disabled,\n      selectedColor = _ref7.selectedColor,\n      selectedBackgroundColor = _ref7.selectedBackgroundColor;\n  var isSelectedColor = selectedColor !== undefined;\n  var textColor = getTextColor({\n    theme: theme,\n    disabled: disabled,\n    selectedColor: selectedColor,\n    isOutlined: isOutlined\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport var getChipColors = function getChipColors(_ref8) {\n  var isOutlined = _ref8.isOutlined,\n      theme = _ref8.theme,\n      selectedColor = _ref8.selectedColor,\n      showSelectedOverlay = _ref8.showSelectedOverlay,\n      customBackgroundColor = _ref8.customBackgroundColor,\n      disabled = _ref8.disabled;\n  var baseChipColorProps = {\n    theme: theme,\n    isOutlined: isOutlined,\n    disabled: disabled\n  };\n  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor\n  }));\n  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n    customBackgroundColor: customBackgroundColor,\n    showSelectedOverlay: showSelectedOverlay\n  }));\n  return {\n    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      backgroundColor: backgroundColor\n    })),\n    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor\n    })),\n    underlayColor: getUnderlayColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {\n      selectedColor: selectedColor,\n      selectedBackgroundColor: selectedBackgroundColor\n    })),\n    backgroundColor: backgroundColor,\n    selectedBackgroundColor: selectedBackgroundColor\n  };\n};","map":{"version":3,"mappings":"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","names":["color","black","white","getBorderColor","theme","_ref","isOutlined","disabled","selectedColor","backgroundColor","isSelectedColor","undefined","isV3","colors","onSurfaceVariant","alpha","rgb","string","outline","dark","getTextColor","_ref2","onSurfaceDisabled","onSecondaryContainer","text","getDefaultBackgroundColor","_ref3","surface","secondaryContainer","_theme$colors","getBackgroundColor","_ref4","customBackgroundColor","getSelectedBackgroundColor","_ref5","showSelectedOverlay","mix","lighten","darken","getIconColor","_ref6","getUnderlayColor","_ref7","selectedBackgroundColor","textColor","fade","getChipColors","_ref8","baseChipColorProps","borderColor","iconColor","underlayColor"],"sources":["helpers.tsx"],"sourcesContent":["import type { ColorValue } from 'react-native';\n\nimport color from 'color';\n\nimport { black, white } from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  isOutlined: boolean;\n  disabled?: boolean;\n};\n\nconst getBorderColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  backgroundColor,\n}: BaseProps & { backgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (isOutlined) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.29).rgb().string();\n    }\n\n    if (theme.dark) {\n      return color(white).alpha(0.29).rgb().string();\n    }\n\n    return color(black).alpha(0.29).rgb().string();\n  }\n\n  return backgroundColor;\n};\n\nconst getTextColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.87).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.87).rgb().string();\n};\n\nconst getDefaultBackgroundColor = ({\n  theme,\n  isOutlined,\n}: Omit<BaseProps, 'disabled' | 'selectedColor'>) => {\n  if (theme.isV3) {\n    if (isOutlined) {\n      return theme.colors.surface;\n    }\n\n    return theme.colors.secondaryContainer;\n  }\n\n  if (isOutlined) {\n    return theme.colors?.surface;\n  }\n\n  if (theme.dark) {\n    return '#383838';\n  }\n\n  return '#ebebeb';\n};\n\nconst getBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n}) => {\n  if (typeof customBackgroundColor === 'string') {\n    return customBackgroundColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (isOutlined) {\n        return 'transparent';\n      }\n      return color(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();\n    }\n  }\n\n  return getDefaultBackgroundColor({ theme, isOutlined });\n};\n\nconst getSelectedBackgroundColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  customBackgroundColor,\n  showSelectedOverlay,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  showSelectedOverlay?: boolean;\n}) => {\n  const backgroundColor = getBackgroundColor({\n    theme,\n    disabled,\n    isOutlined,\n    customBackgroundColor,\n  });\n\n  if (theme.isV3) {\n    if (isOutlined) {\n      if (showSelectedOverlay) {\n        return color(backgroundColor)\n          .mix(color(theme.colors.onSurfaceVariant), 0.12)\n          .rgb()\n          .string();\n      }\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSurfaceVariant), 0)\n        .rgb()\n        .string();\n    }\n\n    if (showSelectedOverlay) {\n      return color(backgroundColor)\n        .mix(color(theme.colors.onSecondaryContainer), 0.12)\n        .rgb()\n        .string();\n    }\n\n    return color(backgroundColor)\n      .mix(color(theme.colors.onSecondaryContainer), 0)\n      .rgb()\n      .string();\n  }\n\n  if (theme.dark) {\n    if (isOutlined) {\n      return color(backgroundColor).lighten(0.2).rgb().string();\n    }\n    return color(backgroundColor).lighten(0.4).rgb().string();\n  }\n\n  if (isOutlined) {\n    return color(backgroundColor).darken(0.08).rgb().string();\n  }\n\n  return color(backgroundColor).darken(0.2).rgb().string();\n};\n\nconst getIconColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n}: BaseProps & {\n  selectedColor?: string;\n}) => {\n  const isSelectedColor = selectedColor !== undefined;\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isSelectedColor) {\n      return selectedColor;\n    }\n\n    if (isOutlined) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSecondaryContainer;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).alpha(0.54).rgb().string();\n  }\n\n  return color(theme.colors.text).alpha(0.54).rgb().string();\n};\n\nconst getUnderlayColor = ({\n  theme,\n  isOutlined,\n  disabled,\n  selectedColor,\n  selectedBackgroundColor,\n}: BaseProps & { selectedBackgroundColor: string; selectedColor?: string }) => {\n  const isSelectedColor = selectedColor !== undefined;\n  const textColor = getTextColor({\n    theme,\n    disabled,\n    selectedColor,\n    isOutlined,\n  });\n\n  if (theme.isV3) {\n    if (isSelectedColor) {\n      return color(selectedColor).alpha(0.12).rgb().string();\n    }\n\n    return color(textColor).alpha(0.12).rgb().string();\n  }\n\n  if (isSelectedColor) {\n    return color(selectedColor).fade(0.5).rgb().string();\n  }\n\n  return selectedBackgroundColor;\n};\n\nexport const getChipColors = ({\n  isOutlined,\n  theme,\n  selectedColor,\n  showSelectedOverlay,\n  customBackgroundColor,\n  disabled,\n}: BaseProps & {\n  customBackgroundColor?: ColorValue;\n  disabled?: boolean;\n  showSelectedOverlay?: boolean;\n  selectedColor?: string;\n}) => {\n  const baseChipColorProps = { theme, isOutlined, disabled };\n\n  const backgroundColor = getBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n  });\n\n  const selectedBackgroundColor = getSelectedBackgroundColor({\n    ...baseChipColorProps,\n    customBackgroundColor,\n    showSelectedOverlay,\n  });\n\n  return {\n    borderColor: getBorderColor({\n      ...baseChipColorProps,\n      selectedColor,\n      backgroundColor,\n    }),\n    textColor: getTextColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    iconColor: getIconColor({\n      ...baseChipColorProps,\n      selectedColor,\n    }),\n    underlayColor: getUnderlayColor({\n      ...baseChipColorProps,\n      selectedColor,\n      selectedBackgroundColor,\n    }),\n    backgroundColor,\n    selectedBackgroundColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}