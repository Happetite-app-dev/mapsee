{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationCategoriesModule from \"./NotificationCategoriesModule.native\";\nexport default function setNotificationCategoryAsync(_x, _x2, _x3) {\n  return _setNotificationCategoryAsync.apply(this, arguments);\n}\n\nfunction _setNotificationCategoryAsync() {\n  _setNotificationCategoryAsync = _asyncToGenerator(function* (identifier, actions, options) {\n    if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n      throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n    }\n\n    return yield NotificationCategoriesModule.setNotificationCategoryAsync(identifier, actions, options);\n  });\n  return _setNotificationCategoryAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":";AAAA,SAASA,mBAAT,QAAoC,mBAApC;AAEA,OAAOC,4BAAP;AAGA,wBAA8BC,4BAA9B;EAAA;AAAA;;;oDAAe,WACbC,UADa,EAEbC,OAFa,EAGbC,OAHa,EAYZ;IAED,IAAI,CAACJ,4BAA4B,CAACC,4BAAlC,EAAgE;MAC9D,MAAM,IAAIF,mBAAJ,CAAwB,eAAxB,EAAyC,8BAAzC,CAAN;IACD;;IAED,aAAaC,4BAA4B,CAACC,4BAA7B,CACXC,UADW,EAEXC,OAFW,EAGXC,OAHW,CAAb;EAKD,C","names":["UnavailabilityError","NotificationCategoriesModule","setNotificationCategoryAsync","identifier","actions","options"],"sourceRoot":"","sources":["../src/setNotificationCategoryAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationCategoriesModule from './NotificationCategoriesModule.native';\nimport { NotificationCategory, NotificationAction } from './Notifications.types';\n\nexport default async function setNotificationCategoryAsync(\n  identifier: string,\n  actions: NotificationAction[],\n  options?: {\n    previewPlaceholder?: string;\n    intentIdentifiers?: string[];\n    categorySummaryFormat?: string;\n    customDismissAction?: boolean;\n    allowInCarPlay?: boolean;\n    showTitle?: boolean;\n    showSubtitle?: boolean;\n    allowAnnouncement?: boolean;\n  }\n): Promise<NotificationCategory> {\n  if (!NotificationCategoriesModule.setNotificationCategoryAsync) {\n    throw new UnavailabilityError('Notifications', 'setNotificationCategoryAsync');\n  }\n\n  return await NotificationCategoriesModule.setNotificationCategoryAsync(\n    identifier,\n    actions,\n    options\n  );\n}\n"]},"metadata":{},"sourceType":"module"}