{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _wrapNativeSuper from \"@babel/runtime/helpers/wrapNativeSuper\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { PermissionStatus } from 'expo-modules-core';\nimport { LocationAccuracy } from \"./Location.types\";\nimport { LocationEventEmitter } from \"./LocationEventEmitter\";\n\nvar GeocoderError = function (_Error) {\n  _inherits(GeocoderError, _Error);\n\n  var _super = _createSuper(GeocoderError);\n\n  function GeocoderError() {\n    var _this;\n\n    _classCallCheck(this, GeocoderError);\n\n    _this = _super.call(this, 'Geocoder service is not available for this device.');\n    _this.code = 'E_NO_GEOCODER';\n    return _this;\n  }\n\n  return _createClass(GeocoderError);\n}(_wrapNativeSuper(Error));\n\nfunction geolocationPositionToJSON(position) {\n  var coords = position.coords,\n      timestamp = position.timestamp;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed\n    },\n    timestamp: timestamp\n  };\n}\n\nfunction isLocationValid(location, options) {\n  var _location$coords$accu;\n\n  var maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  var requiredAccuracy = typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  var locationAccuracy = (_location$coords$accu = location.coords.accuracy) != null ? _location$coords$accu : Infinity;\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\nfunction getPermissionsAsync() {\n  return _getPermissionsAsync.apply(this, arguments);\n}\n\nfunction _getPermissionsAsync() {\n  _getPermissionsAsync = _asyncToGenerator(function* () {\n    return new Promise(function (resolve) {\n      var resolveWithStatus = function resolveWithStatus(status) {\n        return resolve({\n          status: status,\n          granted: status === PermissionStatus.GRANTED,\n          canAskAgain: true,\n          expires: 0\n        });\n      };\n\n      navigator.geolocation.getCurrentPosition(function () {\n        return resolveWithStatus(PermissionStatus.GRANTED);\n      }, function (_ref) {\n        var code = _ref.code;\n\n        if (code === 1) {\n          resolveWithStatus(PermissionStatus.DENIED);\n        } else {\n          resolveWithStatus(PermissionStatus.UNDETERMINED);\n        }\n      }, {\n        enableHighAccuracy: false,\n        maximumAge: Infinity\n      });\n    });\n  });\n  return _getPermissionsAsync.apply(this, arguments);\n}\n\nvar lastKnownPosition = null;\nexport default {\n  get name() {\n    return 'ExpoLocation';\n  },\n\n  getProviderStatusAsync: function () {\n    var _getProviderStatusAsync = _asyncToGenerator(function* () {\n      return {\n        locationServicesEnabled: 'geolocation' in navigator\n      };\n    });\n\n    function getProviderStatusAsync() {\n      return _getProviderStatusAsync.apply(this, arguments);\n    }\n\n    return getProviderStatusAsync;\n  }(),\n  getLastKnownPositionAsync: function () {\n    var _getLastKnownPositionAsync = _asyncToGenerator(function* () {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n        return lastKnownPosition;\n      }\n\n      return null;\n    });\n\n    function getLastKnownPositionAsync() {\n      return _getLastKnownPositionAsync.apply(this, arguments);\n    }\n\n    return getLastKnownPositionAsync;\n  }(),\n  getCurrentPositionAsync: function () {\n    var _getCurrentPositionAsync = _asyncToGenerator(function* (options) {\n      return new Promise(function (resolve, reject) {\n        var _options$accuracy;\n\n        var resolver = function resolver(position) {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          resolve(lastKnownPosition);\n        };\n\n        navigator.geolocation.getCurrentPosition(resolver, reject, _objectSpread({\n          maximumAge: Infinity,\n          enableHighAccuracy: ((_options$accuracy = options.accuracy) != null ? _options$accuracy : 0) > LocationAccuracy.Balanced\n        }, options));\n      });\n    });\n\n    function getCurrentPositionAsync(_x) {\n      return _getCurrentPositionAsync.apply(this, arguments);\n    }\n\n    return getCurrentPositionAsync;\n  }(),\n  removeWatchAsync: function () {\n    var _removeWatchAsync = _asyncToGenerator(function* (watchId) {\n      navigator.geolocation.clearWatch(watchId);\n    });\n\n    function removeWatchAsync(_x2) {\n      return _removeWatchAsync.apply(this, arguments);\n    }\n\n    return removeWatchAsync;\n  }(),\n  watchDeviceHeading: function () {\n    var _watchDeviceHeading = _asyncToGenerator(function* (headingId) {\n      console.warn('Location.watchDeviceHeading: is not supported on web');\n    });\n\n    function watchDeviceHeading(_x3) {\n      return _watchDeviceHeading.apply(this, arguments);\n    }\n\n    return watchDeviceHeading;\n  }(),\n  hasServicesEnabledAsync: function () {\n    var _hasServicesEnabledAsync = _asyncToGenerator(function* () {\n      return 'geolocation' in navigator;\n    });\n\n    function hasServicesEnabledAsync() {\n      return _hasServicesEnabledAsync.apply(this, arguments);\n    }\n\n    return hasServicesEnabledAsync;\n  }(),\n  geocodeAsync: function () {\n    var _geocodeAsync = _asyncToGenerator(function* () {\n      throw new GeocoderError();\n    });\n\n    function geocodeAsync() {\n      return _geocodeAsync.apply(this, arguments);\n    }\n\n    return geocodeAsync;\n  }(),\n  reverseGeocodeAsync: function () {\n    var _reverseGeocodeAsync = _asyncToGenerator(function* () {\n      throw new GeocoderError();\n    });\n\n    function reverseGeocodeAsync() {\n      return _reverseGeocodeAsync.apply(this, arguments);\n    }\n\n    return reverseGeocodeAsync;\n  }(),\n  watchPositionImplAsync: function () {\n    var _watchPositionImplAsync = _asyncToGenerator(function* (watchId, options) {\n      return new Promise(function (resolve) {\n        watchId = global.navigator.geolocation.watchPosition(function (position) {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId: watchId,\n            location: lastKnownPosition\n          });\n        }, undefined, options);\n        resolve(watchId);\n      });\n    });\n\n    function watchPositionImplAsync(_x4, _x5) {\n      return _watchPositionImplAsync.apply(this, arguments);\n    }\n\n    return watchPositionImplAsync;\n  }(),\n  getPermissionsAsync: getPermissionsAsync,\n  requestPermissionsAsync: function () {\n    var _requestPermissionsAsync = _asyncToGenerator(function* () {\n      return getPermissionsAsync();\n    });\n\n    function requestPermissionsAsync() {\n      return _requestPermissionsAsync.apply(this, arguments);\n    }\n\n    return requestPermissionsAsync;\n  }(),\n  requestForegroundPermissionsAsync: function () {\n    var _requestForegroundPermissionsAsync = _asyncToGenerator(function* () {\n      return getPermissionsAsync();\n    });\n\n    function requestForegroundPermissionsAsync() {\n      return _requestForegroundPermissionsAsync.apply(this, arguments);\n    }\n\n    return requestForegroundPermissionsAsync;\n  }(),\n  requestBackgroundPermissionsAsync: function () {\n    var _requestBackgroundPermissionsAsync = _asyncToGenerator(function* () {\n      return getPermissionsAsync();\n    });\n\n    function requestBackgroundPermissionsAsync() {\n      return _requestBackgroundPermissionsAsync.apply(this, arguments);\n    }\n\n    return requestBackgroundPermissionsAsync;\n  }(),\n  getForegroundPermissionsAsync: function () {\n    var _getForegroundPermissionsAsync = _asyncToGenerator(function* () {\n      return getPermissionsAsync();\n    });\n\n    function getForegroundPermissionsAsync() {\n      return _getForegroundPermissionsAsync.apply(this, arguments);\n    }\n\n    return getForegroundPermissionsAsync;\n  }(),\n  getBackgroundPermissionsAsync: function () {\n    var _getBackgroundPermissionsAsync = _asyncToGenerator(function* () {\n      return getPermissionsAsync();\n    });\n\n    function getBackgroundPermissionsAsync() {\n      return _getBackgroundPermissionsAsync.apply(this, arguments);\n    }\n\n    return getBackgroundPermissionsAsync;\n  }(),\n  startObserving: function startObserving() {},\n  stopObserving: function stopObserving() {}\n};","map":{"version":3,"mappings":"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","names":["PermissionStatus","LocationAccuracy","LocationEventEmitter","GeocoderError","code","Error","geolocationPositionToJSON","position","coords","timestamp","latitude","longitude","altitude","accuracy","altitudeAccuracy","heading","speed","isLocationValid","location","options","maxAge","Infinity","requiredAccuracy","locationAccuracy","Date","now","getPermissionsAsync","Promise","resolve","resolveWithStatus","status","granted","GRANTED","canAskAgain","expires","navigator","geolocation","getCurrentPosition","DENIED","UNDETERMINED","enableHighAccuracy","maximumAge","lastKnownPosition","name","getProviderStatusAsync","locationServicesEnabled","getLastKnownPositionAsync","getCurrentPositionAsync","reject","resolver","Balanced","removeWatchAsync","watchId","clearWatch","watchDeviceHeading","headingId","console","warn","hasServicesEnabledAsync","geocodeAsync","reverseGeocodeAsync","watchPositionImplAsync","global","watchPosition","emit","undefined","requestPermissionsAsync","requestForegroundPermissionsAsync","requestBackgroundPermissionsAsync","getForegroundPermissionsAsync","getBackgroundPermissionsAsync","startObserving","stopObserving"],"sourceRoot":"","sources":["../src/ExpoLocation.web.ts"],"sourcesContent":["import { PermissionResponse, PermissionStatus } from 'expo-modules-core';\n\nimport {\n  LocationLastKnownOptions,\n  LocationObject,\n  LocationOptions,\n  LocationAccuracy,\n} from './Location.types';\nimport { LocationEventEmitter } from './LocationEventEmitter';\n\nclass GeocoderError extends Error {\n  code: string;\n\n  constructor() {\n    super('Geocoder service is not available for this device.');\n    this.code = 'E_NO_GEOCODER';\n  }\n}\n\n/**\n * Converts `GeolocationPosition` to JavaScript object.\n */\nfunction geolocationPositionToJSON(position: LocationObject): LocationObject {\n  const { coords, timestamp } = position;\n  return {\n    coords: {\n      latitude: coords.latitude,\n      longitude: coords.longitude,\n      altitude: coords.altitude,\n      accuracy: coords.accuracy,\n      altitudeAccuracy: coords.altitudeAccuracy,\n      heading: coords.heading,\n      speed: coords.speed,\n    },\n    timestamp,\n  };\n}\n\n/**\n * Checks whether given location didn't exceed given `maxAge` and fits in the required accuracy.\n */\nfunction isLocationValid(location: LocationObject, options: LocationLastKnownOptions): boolean {\n  const maxAge = typeof options.maxAge === 'number' ? options.maxAge : Infinity;\n  const requiredAccuracy =\n    typeof options.requiredAccuracy === 'number' ? options.requiredAccuracy : Infinity;\n  const locationAccuracy = location.coords.accuracy ?? Infinity;\n\n  return Date.now() - location.timestamp <= maxAge && locationAccuracy <= requiredAccuracy;\n}\n\n/**\n * Gets the permission details. The implementation is not very good as it actually requests\n * for the current location, but there is no better way on web so far :(\n */\nasync function getPermissionsAsync(): Promise<PermissionResponse> {\n  return new Promise<PermissionResponse>((resolve) => {\n    const resolveWithStatus = (status) =>\n      resolve({\n        status,\n        granted: status === PermissionStatus.GRANTED,\n        canAskAgain: true,\n        expires: 0,\n      });\n\n    navigator.geolocation.getCurrentPosition(\n      () => resolveWithStatus(PermissionStatus.GRANTED),\n      ({ code }) => {\n        if (code === 1 /* PERMISSION_DENIED */) {\n          resolveWithStatus(PermissionStatus.DENIED);\n        } else {\n          resolveWithStatus(PermissionStatus.UNDETERMINED);\n        }\n      },\n      { enableHighAccuracy: false, maximumAge: Infinity }\n    );\n  });\n}\n\nlet lastKnownPosition: LocationObject | null = null;\n\nexport default {\n  get name(): string {\n    return 'ExpoLocation';\n  },\n  async getProviderStatusAsync(): Promise<{ locationServicesEnabled: boolean }> {\n    return {\n      locationServicesEnabled: 'geolocation' in navigator,\n    };\n  },\n  async getLastKnownPositionAsync(\n    options: LocationLastKnownOptions = {}\n  ): Promise<LocationObject | null> {\n    if (lastKnownPosition && isLocationValid(lastKnownPosition, options)) {\n      return lastKnownPosition;\n    }\n    return null;\n  },\n  async getCurrentPositionAsync(options: LocationOptions): Promise<LocationObject> {\n    return new Promise<LocationObject>((resolve, reject) => {\n      const resolver = (position) => {\n        lastKnownPosition = geolocationPositionToJSON(position);\n        resolve(lastKnownPosition);\n      };\n      navigator.geolocation.getCurrentPosition(resolver, reject, {\n        maximumAge: Infinity,\n        enableHighAccuracy: (options.accuracy ?? 0) > LocationAccuracy.Balanced,\n        ...options,\n      });\n    });\n  },\n  async removeWatchAsync(watchId): Promise<void> {\n    navigator.geolocation.clearWatch(watchId);\n  },\n  async watchDeviceHeading(headingId): Promise<void> {\n    console.warn('Location.watchDeviceHeading: is not supported on web');\n  },\n  async hasServicesEnabledAsync(): Promise<boolean> {\n    return 'geolocation' in navigator;\n  },\n  async geocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async reverseGeocodeAsync(): Promise<any[]> {\n    throw new GeocoderError();\n  },\n  async watchPositionImplAsync(watchId: string, options: LocationOptions): Promise<string> {\n    return new Promise<string>((resolve) => {\n      // @ts-ignore: the types here need to be fixed\n      watchId = global.navigator.geolocation.watchPosition(\n        (position) => {\n          lastKnownPosition = geolocationPositionToJSON(position);\n          LocationEventEmitter.emit('Expo.locationChanged', {\n            watchId,\n            location: lastKnownPosition,\n          });\n        },\n        undefined,\n        // @ts-ignore: the options object needs to be fixed\n        options\n      );\n      resolve(watchId);\n    });\n  },\n\n  getPermissionsAsync,\n  async requestPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async requestBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getForegroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n  async getBackgroundPermissionsAsync(): Promise<PermissionResponse> {\n    return getPermissionsAsync();\n  },\n\n  // no-op\n  startObserving() {},\n  stopObserving() {},\n};\n"]},"metadata":{},"sourceType":"module"}