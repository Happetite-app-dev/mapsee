{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nimport { State } from \"../../State\";\nimport { DEFAULT_TOUCH_SLOP } from \"../constants\";\nimport GestureHandler from \"./GestureHandler\";\nvar DEFAULT_MIN_POINTERS = 1;\nvar DEFAULT_MAX_POINTERS = 10;\nvar DEFAULT_MIN_DIST_SQ = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\nvar PanGestureHandler = function (_GestureHandler) {\n  _inherits(PanGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(PanGestureHandler);\n\n  function PanGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, PanGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"customActivationProperties\", ['activeOffsetXStart', 'activeOffsetXEnd', 'failOffsetXStart', 'failOffsetXEnd', 'activeOffsetYStart', 'activeOffsetYEnd', 'failOffsetYStart', 'failOffsetYEnd', 'minVelocityX', 'minVelocityY']);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocityY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"minDistSq\", DEFAULT_MIN_DIST_SQ);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetXStart\", -Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetXEnd\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetXStart\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetXEnd\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetYStart\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"activeOffsetYEnd\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetYStart\", Number.MIN_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"failOffsetYEnd\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocityX\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocityY\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minVelocitySq\", Number.MAX_SAFE_INTEGER);\n\n    _defineProperty(_assertThisInitialized(_this), \"minPointers\", 1);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxPointers\", 10);\n\n    _defineProperty(_assertThisInitialized(_this), \"startX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"startY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"offsetY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"lastY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"activateAfterLongPress\", 0);\n\n    return _this;\n  }\n\n  _createClass(PanGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      this.resetConfig();\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n\n      this.checkCustomActivationCriteria(this.customActivationProperties);\n      this.enabled = enabled;\n\n      if (this.config.minDist !== undefined) {\n        this.minDistSq = this.config.minDist * this.config.minDist;\n      } else if (this.hasCustomActivationCriteria) {\n        this.minDistSq = Number.MAX_SAFE_INTEGER;\n      }\n\n      if (this.config.minPointers !== undefined) {\n        this.minPointers = this.config.minPointers;\n      }\n\n      if (this.config.maxPointers !== undefined) {\n        this.maxPointers = this.config.maxPointers;\n      }\n\n      if (this.config.minVelocity !== undefined) {\n        this.minVelocityX = this.config.minVelocity;\n        this.minVelocityY = this.config.minVelocity;\n      }\n\n      if (this.config.minVelocityX !== undefined) {\n        this.minVelocityX = this.config.minVelocityX;\n      }\n\n      if (this.config.minVelocityY !== undefined) {\n        this.minVelocityY = this.config.minVelocityY;\n      }\n\n      if (this.config.shouldCancelWhenOutside) {\n        this.setShouldCancelWhenOutside(false);\n      }\n\n      if (this.config.activeOffsetXStart !== undefined) {\n        this.activeOffsetXStart = this.config.activeOffsetXStart;\n\n        if (this.config.activeOffsetXEnd === undefined) {\n          this.activeOffsetXEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetXEnd !== undefined) {\n        this.activeOffsetXEnd = this.config.activeOffsetXEnd;\n\n        if (this.config.activeOffsetXStart === undefined) {\n          this.activeOffsetXStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetXStart !== undefined) {\n        this.failOffsetXStart = this.config.failOffsetXStart;\n\n        if (this.config.failOffsetXEnd === undefined) {\n          this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetXEnd !== undefined) {\n        this.failOffsetXEnd = this.config.failOffsetXEnd;\n\n        if (this.config.failOffsetXStart === undefined) {\n          this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetYStart !== undefined) {\n        this.activeOffsetYStart = this.config.activeOffsetYStart;\n\n        if (this.config.activeOffsetYEnd === undefined) {\n          this.activeOffsetYEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.activeOffsetYEnd !== undefined) {\n        this.activeOffsetYEnd = this.config.activeOffsetYEnd;\n\n        if (this.config.activeOffsetYStart === undefined) {\n          this.activeOffsetYStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetYStart !== undefined) {\n        this.failOffsetYStart = this.config.failOffsetYStart;\n\n        if (this.config.failOffsetYEnd === undefined) {\n          this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n        }\n      }\n\n      if (this.config.failOffsetYEnd !== undefined) {\n        this.failOffsetYEnd = this.config.failOffsetYEnd;\n\n        if (this.config.failOffsetYStart === undefined) {\n          this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n        }\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"resetConfig\", this).call(this);\n\n      this.activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n      this.activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n      this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n      this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      this.activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n      this.activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n      this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n      this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      this.minVelocityX = Number.MAX_SAFE_INTEGER;\n      this.minVelocityY = Number.MAX_SAFE_INTEGER;\n      this.minVelocitySq = Number.MAX_SAFE_INTEGER;\n      this.minDistSq = DEFAULT_MIN_DIST_SQ;\n      this.minPointers = DEFAULT_MIN_POINTERS;\n      this.maxPointers = DEFAULT_MAX_POINTERS;\n      this.activateAfterLongPress = 0;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(event) {\n      if (!this.view) {\n        return {};\n      }\n\n      var ratio = PixelRatio.get();\n      return {\n        translationX: this.getTranslationX(),\n        translationY: this.getTranslationY(),\n        absoluteX: event.x,\n        absoluteY: event.y,\n        velocityX: this.velocityX * ratio * 10,\n        velocityY: this.velocityY * ratio * 10,\n        x: event.offsetX,\n        y: event.offsetY\n      };\n    }\n  }, {\n    key: \"getTranslationX\",\n    value: function getTranslationX() {\n      return this.lastX - this.startX + this.offsetX;\n    }\n  }, {\n    key: \"getTranslationY\",\n    value: function getTranslationY() {\n      return this.lastY - this.startY + this.offsetY;\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.tracker.addToTracker(event);\n\n      if (this.tracker.getTrackedPointersCount() > 1) {\n        this.onPointerAdd(event);\n        return;\n      }\n\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.tryBegin(event);\n      this.checkBegan(event);\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value: function onPointerAdd(event) {\n      this.tryBegin(event);\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n\n      if (this.tracker.getTrackedPointersCount() > this.maxPointers) {\n        if (this.currentState === State.ACTIVE) {\n          this.cancel(event);\n        } else {\n          this.fail(event);\n        }\n      } else {\n        this.checkBegan(event);\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n\n      if (this.tracker.getTrackedPointersCount() > 1) {\n        this.tracker.removeFromTracker(event.pointerId);\n        this.onPointerRemove(event);\n        return;\n      }\n\n      if (this.currentState === State.ACTIVE) {\n        this.lastX = this.tracker.getLastAvgX();\n        this.lastY = this.tracker.getLastAvgY();\n      }\n\n      this.tracker.removeFromTracker(event.pointerId);\n\n      if (this.currentState === State.ACTIVE) {\n        this.end(event);\n      } else {\n        this.resetProgress();\n        this.fail(event);\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value: function onPointerRemove(event) {\n      this.offsetX += this.lastX - this.startX;\n      this.offsetY += this.lastY - this.startY;\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n\n      if (!(this.currentState === State.ACTIVE && this.tracker.getTrackedPointersCount() < this.minPointers)) {\n        this.checkBegan(event);\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      this.checkBegan(event);\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerCancel\", this).call(this, event);\n\n      this.reset();\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      if (this.getShouldCancelWhenOutside()) {\n        return;\n      }\n\n      this.tracker.track(event);\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      this.checkBegan(event);\n\n      if (this.currentState === State.ACTIVE) {\n        _get(_getPrototypeOf(PanGestureHandler.prototype), \"onPointerOutOfBounds\", this).call(this, event);\n      }\n    }\n  }, {\n    key: \"shouldActivate\",\n    value: function shouldActivate() {\n      var dx = this.getTranslationX();\n\n      if (this.activeOffsetXStart !== Number.MAX_SAFE_INTEGER && dx < this.activeOffsetXStart) {\n        return true;\n      }\n\n      if (this.activeOffsetXEnd !== Number.MIN_SAFE_INTEGER && dx > this.activeOffsetXEnd) {\n        return true;\n      }\n\n      var dy = this.getTranslationY();\n\n      if (this.activeOffsetYStart !== Number.MAX_SAFE_INTEGER && dy < this.activeOffsetYStart) {\n        return true;\n      }\n\n      if (this.activeOffsetYEnd !== Number.MIN_SAFE_INTEGER && dy > this.activeOffsetYEnd) {\n        return true;\n      }\n\n      var distanceSq = dx * dx + dy * dy;\n\n      if (this.minDistSq !== Number.MAX_SAFE_INTEGER && distanceSq >= this.minDistSq) {\n        return true;\n      }\n\n      var vx = this.velocityX;\n\n      if (this.minVelocityX !== Number.MAX_SAFE_INTEGER && (this.minVelocityX < 0 && vx <= this.minVelocityX || this.minVelocityX >= 0 && this.minVelocityX <= vx)) {\n        return true;\n      }\n\n      var vy = this.velocityY;\n\n      if (this.minVelocityY !== Number.MAX_SAFE_INTEGER && (this.minVelocityY < 0 && vy <= this.minVelocityY || this.minVelocityY >= 0 && this.minVelocityY <= vy)) {\n        return true;\n      }\n\n      var velocitySq = vx * vx + vy * vy;\n      return this.minVelocitySq !== Number.MAX_SAFE_INTEGER && velocitySq >= this.minVelocitySq;\n    }\n  }, {\n    key: \"shouldFail\",\n    value: function shouldFail() {\n      var dx = this.getTranslationX();\n      var dy = this.getTranslationY();\n      var distanceSq = dx * dx + dy * dy;\n\n      if (this.activateAfterLongPress > 0 && distanceSq > DEFAULT_MIN_DIST_SQ) {\n        return true;\n      }\n\n      if (this.failOffsetXStart !== Number.MIN_SAFE_INTEGER && dx < this.failOffsetXStart) {\n        return true;\n      }\n\n      if (this.failOffsetXEnd !== Number.MAX_SAFE_INTEGER && dx > this.failOffsetXEnd) {\n        return true;\n      }\n\n      if (this.failOffsetYStart !== Number.MIN_SAFE_INTEGER && dy < this.failOffsetYStart) {\n        return true;\n      }\n\n      return this.failOffsetYEnd !== Number.MAX_SAFE_INTEGER && dy > this.failOffsetYEnd;\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin(event) {\n      if (this.currentState === State.UNDETERMINED && this.tracker.getTrackedPointersCount() >= this.minPointers) {\n        this.resetProgress();\n        this.offsetX = 0;\n        this.offsetY = 0;\n        this.velocityX = 0;\n        this.velocityY = 0;\n        this.begin(event);\n      } else {\n        this.velocityX = this.tracker.getVelocityX(event.pointerId);\n        this.velocityY = this.tracker.getVelocityY(event.pointerId);\n      }\n    }\n  }, {\n    key: \"checkBegan\",\n    value: function checkBegan(event) {\n      if (this.currentState === State.BEGAN) {\n        if (this.shouldFail()) {\n          this.fail(event);\n        } else if (this.shouldActivate()) {\n          this.activate(event);\n        }\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(event) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (this.currentState !== State.ACTIVE) {\n        this.resetProgress();\n      }\n\n      _get(_getPrototypeOf(PanGestureHandler.prototype), \"activate\", this).call(this, event, force);\n    }\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {\n      if (this.currentState === State.ACTIVE) {\n        return;\n      }\n\n      this.startX = this.lastX;\n      this.startY = this.lastY;\n    }\n  }]);\n\n  return PanGestureHandler;\n}(GestureHandler);\n\nexport { PanGestureHandler as default };","map":{"version":3,"mappings":"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","names":["State","DEFAULT_TOUCH_SLOP","GestureHandler","DEFAULT_MIN_POINTERS","DEFAULT_MAX_POINTERS","DEFAULT_MIN_DIST_SQ","PanGestureHandler","args","_defineProperty","Number","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","init","ref","propsRef","updateGestureConfig","enabled","props","resetConfig","checkCustomActivationCriteria","customActivationProperties","config","minDist","undefined","minDistSq","hasCustomActivationCriteria","minPointers","maxPointers","minVelocity","minVelocityX","minVelocityY","shouldCancelWhenOutside","setShouldCancelWhenOutside","activeOffsetXStart","activeOffsetXEnd","failOffsetXStart","failOffsetXEnd","activeOffsetYStart","activeOffsetYEnd","failOffsetYStart","failOffsetYEnd","minVelocitySq","activateAfterLongPress","transformNativeEvent","event","view","ratio","PixelRatio","get","translationX","getTranslationX","translationY","getTranslationY","absoluteX","x","absoluteY","y","velocityX","velocityY","offsetX","offsetY","lastX","startX","lastY","startY","onPointerDown","tracker","addToTracker","getTrackedPointersCount","onPointerAdd","getLastAvgX","getLastAvgY","tryBegin","checkBegan","currentState","ACTIVE","cancel","fail","onPointerUp","removeFromTracker","pointerId","onPointerRemove","end","resetProgress","onPointerMove","track","getVelocityX","getVelocityY","onPointerCancel","reset","onPointerOutOfBounds","getShouldCancelWhenOutside","shouldActivate","dx","dy","distanceSq","vx","vy","velocitySq","shouldFail","UNDETERMINED","begin","BEGAN","activate","force"],"sources":["PanGestureHandler.ts"],"sourcesContent":["import { PixelRatio } from 'react-native';\nimport { State } from '../../State';\nimport { DEFAULT_TOUCH_SLOP } from '../constants';\nimport { AdaptedPointerEvent } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MIN_POINTERS = 1;\nconst DEFAULT_MAX_POINTERS = 10;\nconst DEFAULT_MIN_DIST_SQ = DEFAULT_TOUCH_SLOP * DEFAULT_TOUCH_SLOP;\n\nexport default class PanGestureHandler extends GestureHandler {\n  private readonly customActivationProperties: string[] = [\n    'activeOffsetXStart',\n    'activeOffsetXEnd',\n    'failOffsetXStart',\n    'failOffsetXEnd',\n    'activeOffsetYStart',\n    'activeOffsetYEnd',\n    'failOffsetYStart',\n    'failOffsetYEnd',\n    'minVelocityX',\n    'minVelocityY',\n  ];\n\n  public velocityX = 0;\n  public velocityY = 0;\n\n  private minDistSq = DEFAULT_MIN_DIST_SQ;\n\n  private activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n  private activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n  private failOffsetXStart = Number.MIN_SAFE_INTEGER;\n  private failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n\n  private activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n  private activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n  private failOffsetYStart = Number.MIN_SAFE_INTEGER;\n  private failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n\n  private minVelocityX = Number.MAX_SAFE_INTEGER;\n  private minVelocityY = Number.MAX_SAFE_INTEGER;\n  private minVelocitySq = Number.MAX_SAFE_INTEGER;\n\n  private minPointers = 1;\n  private maxPointers = 10;\n\n  private startX = 0;\n  private startY = 0;\n  private offsetX = 0;\n  private offsetY = 0;\n  private lastX = 0;\n  private lastY = 0;\n\n  // TODO: Implement logic required for activateAfterLongPress\n  private activateAfterLongPress = 0;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }): void {\n    this.resetConfig();\n\n    super.updateGestureConfig({ enabled: enabled, ...props });\n    this.checkCustomActivationCriteria(this.customActivationProperties);\n\n    this.enabled = enabled;\n\n    if (this.config.minDist !== undefined) {\n      this.minDistSq = this.config.minDist * this.config.minDist;\n    } else if (this.hasCustomActivationCriteria) {\n      this.minDistSq = Number.MAX_SAFE_INTEGER;\n    }\n\n    if (this.config.minPointers !== undefined) {\n      this.minPointers = this.config.minPointers;\n    }\n\n    if (this.config.maxPointers !== undefined) {\n      this.maxPointers = this.config.maxPointers;\n    }\n\n    if (this.config.minVelocity !== undefined) {\n      this.minVelocityX = this.config.minVelocity;\n      this.minVelocityY = this.config.minVelocity;\n    }\n\n    if (this.config.minVelocityX !== undefined) {\n      this.minVelocityX = this.config.minVelocityX;\n    }\n\n    if (this.config.minVelocityY !== undefined) {\n      this.minVelocityY = this.config.minVelocityY;\n    }\n\n    if (this.config.shouldCancelWhenOutside) {\n      this.setShouldCancelWhenOutside(false);\n    }\n\n    if (this.config.activeOffsetXStart !== undefined) {\n      this.activeOffsetXStart = this.config.activeOffsetXStart;\n\n      if (this.config.activeOffsetXEnd === undefined) {\n        this.activeOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetXEnd !== undefined) {\n      this.activeOffsetXEnd = this.config.activeOffsetXEnd;\n\n      if (this.config.activeOffsetXStart === undefined) {\n        this.activeOffsetXStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetXStart !== undefined) {\n      this.failOffsetXStart = this.config.failOffsetXStart;\n\n      if (this.config.failOffsetXEnd === undefined) {\n        this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetXEnd !== undefined) {\n      this.failOffsetXEnd = this.config.failOffsetXEnd;\n\n      if (this.config.failOffsetXStart === undefined) {\n        this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetYStart !== undefined) {\n      this.activeOffsetYStart = this.config.activeOffsetYStart;\n\n      if (this.config.activeOffsetYEnd === undefined) {\n        this.activeOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.activeOffsetYEnd !== undefined) {\n      this.activeOffsetYEnd = this.config.activeOffsetYEnd;\n\n      if (this.config.activeOffsetYStart === undefined) {\n        this.activeOffsetYStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetYStart !== undefined) {\n      this.failOffsetYStart = this.config.failOffsetYStart;\n\n      if (this.config.failOffsetYEnd === undefined) {\n        this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n      }\n    }\n\n    if (this.config.failOffsetYEnd !== undefined) {\n      this.failOffsetYEnd = this.config.failOffsetYEnd;\n\n      if (this.config.failOffsetYStart === undefined) {\n        this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n      }\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n\n    this.activeOffsetXStart = -Number.MAX_SAFE_INTEGER;\n    this.activeOffsetXEnd = Number.MIN_SAFE_INTEGER;\n    this.failOffsetXStart = Number.MIN_SAFE_INTEGER;\n    this.failOffsetXEnd = Number.MAX_SAFE_INTEGER;\n\n    this.activeOffsetYStart = Number.MAX_SAFE_INTEGER;\n    this.activeOffsetYEnd = Number.MIN_SAFE_INTEGER;\n    this.failOffsetYStart = Number.MIN_SAFE_INTEGER;\n    this.failOffsetYEnd = Number.MAX_SAFE_INTEGER;\n\n    this.minVelocityX = Number.MAX_SAFE_INTEGER;\n    this.minVelocityY = Number.MAX_SAFE_INTEGER;\n    this.minVelocitySq = Number.MAX_SAFE_INTEGER;\n\n    this.minDistSq = DEFAULT_MIN_DIST_SQ;\n\n    this.minPointers = DEFAULT_MIN_POINTERS;\n    this.maxPointers = DEFAULT_MAX_POINTERS;\n\n    this.activateAfterLongPress = 0;\n  }\n\n  protected transformNativeEvent(event: AdaptedPointerEvent) {\n    if (!this.view) {\n      return {};\n    }\n\n    const ratio = PixelRatio.get();\n\n    return {\n      translationX: this.getTranslationX(),\n      translationY: this.getTranslationY(),\n      absoluteX: event.x,\n      absoluteY: event.y,\n      velocityX: this.velocityX * ratio * 10,\n      velocityY: this.velocityY * ratio * 10,\n      x: event.offsetX,\n      y: event.offsetY,\n    };\n  }\n\n  private getTranslationX(): number {\n    return this.lastX - this.startX + this.offsetX;\n  }\n  private getTranslationY(): number {\n    return this.lastY - this.startY + this.offsetY;\n  }\n\n  //EventsHandling\n  protected onPointerDown(event: AdaptedPointerEvent): void {\n    super.onPointerDown(event);\n    this.tracker.addToTracker(event);\n\n    if (this.tracker.getTrackedPointersCount() > 1) {\n      this.onPointerAdd(event);\n      return;\n    }\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.tryBegin(event);\n    this.checkBegan(event);\n  }\n  protected onPointerAdd(event: AdaptedPointerEvent): void {\n    this.tryBegin(event);\n\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    if (this.tracker.getTrackedPointersCount() > this.maxPointers) {\n      if (this.currentState === State.ACTIVE) {\n        this.cancel(event);\n      } else {\n        this.fail(event);\n      }\n    } else {\n      this.checkBegan(event);\n    }\n  }\n\n  protected onPointerUp(event: AdaptedPointerEvent): void {\n    super.onPointerUp(event);\n\n    if (this.tracker.getTrackedPointersCount() > 1) {\n      this.tracker.removeFromTracker(event.pointerId);\n\n      this.onPointerRemove(event);\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.lastX = this.tracker.getLastAvgX();\n      this.lastY = this.tracker.getLastAvgY();\n    }\n\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end(event);\n    } else {\n      this.resetProgress();\n      this.fail(event);\n    }\n  }\n  protected onPointerRemove(event: AdaptedPointerEvent): void {\n    this.offsetX += this.lastX - this.startX;\n    this.offsetY += this.lastY - this.startY;\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n\n    if (\n      !(\n        this.currentState === State.ACTIVE &&\n        this.tracker.getTrackedPointersCount() < this.minPointers\n      )\n    ) {\n      this.checkBegan(event);\n    }\n  }\n\n  protected onPointerMove(event: AdaptedPointerEvent): void {\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.velocityX = this.tracker.getVelocityX(event.pointerId);\n    this.velocityY = this.tracker.getVelocityY(event.pointerId);\n\n    this.checkBegan(event);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerCancel(event: AdaptedPointerEvent): void {\n    super.onPointerCancel(event);\n\n    this.reset();\n  }\n  protected onPointerOutOfBounds(event: AdaptedPointerEvent): void {\n    if (this.getShouldCancelWhenOutside()) {\n      return;\n    }\n\n    this.tracker.track(event);\n\n    this.lastX = this.tracker.getLastAvgX();\n    this.lastY = this.tracker.getLastAvgY();\n    this.velocityX = this.tracker.getVelocityX(event.pointerId);\n    this.velocityY = this.tracker.getVelocityY(event.pointerId);\n\n    this.checkBegan(event);\n\n    if (this.currentState === State.ACTIVE) {\n      super.onPointerOutOfBounds(event);\n    }\n  }\n\n  private shouldActivate(): boolean {\n    const dx: number = this.getTranslationX();\n\n    if (\n      this.activeOffsetXStart !== Number.MAX_SAFE_INTEGER &&\n      dx < this.activeOffsetXStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.activeOffsetXEnd !== Number.MIN_SAFE_INTEGER &&\n      dx > this.activeOffsetXEnd\n    ) {\n      return true;\n    }\n\n    const dy: number = this.getTranslationY();\n\n    if (\n      this.activeOffsetYStart !== Number.MAX_SAFE_INTEGER &&\n      dy < this.activeOffsetYStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.activeOffsetYEnd !== Number.MIN_SAFE_INTEGER &&\n      dy > this.activeOffsetYEnd\n    ) {\n      return true;\n    }\n\n    const distanceSq: number = dx * dx + dy * dy;\n\n    if (\n      this.minDistSq !== Number.MAX_SAFE_INTEGER &&\n      distanceSq >= this.minDistSq\n    ) {\n      return true;\n    }\n\n    const vx: number = this.velocityX;\n\n    if (\n      this.minVelocityX !== Number.MAX_SAFE_INTEGER &&\n      ((this.minVelocityX < 0 && vx <= this.minVelocityX) ||\n        (this.minVelocityX >= 0 && this.minVelocityX <= vx))\n    ) {\n      return true;\n    }\n\n    const vy: number = this.velocityY;\n    if (\n      this.minVelocityY !== Number.MAX_SAFE_INTEGER &&\n      ((this.minVelocityY < 0 && vy <= this.minVelocityY) ||\n        (this.minVelocityY >= 0 && this.minVelocityY <= vy))\n    ) {\n      return true;\n    }\n\n    const velocitySq: number = vx * vx + vy * vy;\n\n    return (\n      this.minVelocitySq !== Number.MAX_SAFE_INTEGER &&\n      velocitySq >= this.minVelocitySq\n    );\n  }\n\n  private shouldFail(): boolean {\n    const dx: number = this.getTranslationX();\n    const dy: number = this.getTranslationY();\n    const distanceSq = dx * dx + dy * dy;\n\n    if (this.activateAfterLongPress > 0 && distanceSq > DEFAULT_MIN_DIST_SQ) {\n      return true;\n    }\n\n    if (\n      this.failOffsetXStart !== Number.MIN_SAFE_INTEGER &&\n      dx < this.failOffsetXStart\n    ) {\n      return true;\n    }\n\n    if (\n      this.failOffsetXEnd !== Number.MAX_SAFE_INTEGER &&\n      dx > this.failOffsetXEnd\n    ) {\n      return true;\n    }\n\n    if (\n      this.failOffsetYStart !== Number.MIN_SAFE_INTEGER &&\n      dy < this.failOffsetYStart\n    ) {\n      return true;\n    }\n\n    return (\n      this.failOffsetYEnd !== Number.MAX_SAFE_INTEGER &&\n      dy > this.failOffsetYEnd\n    );\n  }\n\n  private tryBegin(event: AdaptedPointerEvent): void {\n    if (\n      this.currentState === State.UNDETERMINED &&\n      this.tracker.getTrackedPointersCount() >= this.minPointers\n    ) {\n      this.resetProgress();\n      this.offsetX = 0;\n      this.offsetY = 0;\n      this.velocityX = 0;\n      this.velocityY = 0;\n\n      this.begin(event);\n\n      //Long press\n    } else {\n      this.velocityX = this.tracker.getVelocityX(event.pointerId);\n      this.velocityY = this.tracker.getVelocityY(event.pointerId);\n    }\n  }\n\n  private checkBegan(event: AdaptedPointerEvent): void {\n    if (this.currentState === State.BEGAN) {\n      if (this.shouldFail()) {\n        this.fail(event);\n      } else if (this.shouldActivate()) {\n        this.activate(event);\n      }\n    }\n  }\n\n  protected activate(event: AdaptedPointerEvent, force = false): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(event, force);\n  }\n\n  protected resetProgress(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n\n    this.startX = this.lastX;\n    this.startY = this.lastY;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}