{"ast":null,"code":"import { EventEmitter, Platform } from 'expo-modules-core';\nimport PushTokenManager from \"./PushTokenManager\";\nvar tokenEmitter = new EventEmitter(PushTokenManager);\nvar newTokenEventName = 'onDevicePushToken';\nexport function addPushTokenListener(listener) {\n  var wrappingListener = function wrappingListener(_ref) {\n    var devicePushToken = _ref.devicePushToken;\n    return listener({\n      data: devicePushToken,\n      type: Platform.OS\n    });\n  };\n\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\nexport function removePushTokenSubscription(subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}","map":{"version":3,"mappings":"AAAA,SAASA,YAAT,EAAqCC,QAArC,QAAqD,mBAArD;AAEA,OAAOC,gBAAP;AAMA,IAAMC,YAAY,GAAG,IAAIH,YAAJ,CAAiBE,gBAAjB,CAArB;AACA,IAAME,iBAAiB,GAAG,mBAA1B;AAEA,OAAM,SAAUC,oBAAV,CAA+BC,QAA/B,EAA0D;EAC9D,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;IAAA,IAAGC,eAAH,QAAGA,eAAH;IAAA,OAEvBF,QAAQ,CAAC;MAAEG,IAAI,EAAED,eAAR;MAAyBE,IAAI,EAAET,QAAQ,CAACU;IAAxC,CAAD,CAFe;EAAA,CAAzB;;EAGA,OAAOR,YAAY,CAACS,WAAb,CAAyBR,iBAAzB,EAA4CG,gBAA5C,CAAP;AACD;AAED,OAAM,SAAUM,2BAAV,CAAsCC,YAAtC,EAAgE;EACpEX,YAAY,CAACY,kBAAb,CAAgCD,YAAhC;AACD","names":["EventEmitter","Platform","PushTokenManager","tokenEmitter","newTokenEventName","addPushTokenListener","listener","wrappingListener","devicePushToken","data","type","OS","addListener","removePushTokenSubscription","subscription","removeSubscription"],"sourceRoot":"","sources":["../src/TokenEmitter.ts"],"sourcesContent":["import { EventEmitter, Subscription, Platform } from 'expo-modules-core';\n\nimport PushTokenManager from './PushTokenManager';\nimport { DevicePushToken } from './Tokens.types';\n\nexport type PushTokenListener = (token: DevicePushToken) => void;\n\n// Web uses SyntheticEventEmitter\nconst tokenEmitter = new EventEmitter(PushTokenManager);\nconst newTokenEventName = 'onDevicePushToken';\n\nexport function addPushTokenListener(listener: PushTokenListener): Subscription {\n  const wrappingListener = ({ devicePushToken }) =>\n    // @ts-ignore: TS can't decide what Platform.OS is.\n    listener({ data: devicePushToken, type: Platform.OS });\n  return tokenEmitter.addListener(newTokenEventName, wrappingListener);\n}\n\nexport function removePushTokenSubscription(subscription: Subscription) {\n  tokenEmitter.removeSubscription(subscription);\n}\n"]},"metadata":{},"sourceType":"module"}