{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport * as React from 'react';\nimport AccessibilityInfo from \"react-native-web/dist/exports/AccessibilityInfo\";\nimport Appearance from \"react-native-web/dist/exports/Appearance\";\nimport MaterialCommunityIcon from \"../components/MaterialCommunityIcon\";\nimport PortalHost from \"../components/Portal/PortalHost\";\nimport { addEventListener } from \"../utils/addEventListener\";\nimport SafeAreaProviderCompat from \"./SafeAreaProviderCompat\";\nimport { Provider as SettingsProvider } from \"./settings\";\nimport { defaultThemesByVersion, ThemeProvider } from \"./theming\";\n\nvar Provider = function Provider(props) {\n  var isOnlyVersionInTheme = props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n  var colorSchemeName = (!props.theme || isOnlyVersionInTheme) && (Appearance === null || Appearance === void 0 ? void 0 : Appearance.getColorScheme()) || 'light';\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      reduceMotionEnabled = _React$useState2[0],\n      setReduceMotionEnabled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(colorSchemeName),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      colorScheme = _React$useState4[0],\n      setColorScheme = _React$useState4[1];\n\n  var handleAppearanceChange = function handleAppearanceChange(preferences) {\n    var colorScheme = preferences.colorScheme;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(function () {\n    var subscription;\n\n    if (!props.theme) {\n      subscription = addEventListener(AccessibilityInfo, 'reduceMotionChanged', setReduceMotionEnabled);\n    }\n\n    return function () {\n      if (!props.theme) {\n        var _subscription;\n\n        (_subscription = subscription) === null || _subscription === void 0 ? void 0 : _subscription.remove();\n      }\n    };\n  }, [props.theme]);\n  React.useEffect(function () {\n    var appearanceSubscription;\n\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance === null || Appearance === void 0 ? void 0 : Appearance.addChangeListener(handleAppearanceChange);\n    }\n\n    return function () {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          Appearance === null || Appearance === void 0 ? void 0 : Appearance.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  var getTheme = function getTheme() {\n    var _props$theme;\n\n    var themeVersion = ((_props$theme = props.theme) === null || _props$theme === void 0 ? void 0 : _props$theme.version) || 3;\n    var scheme = colorScheme || 'light';\n    var defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    var extendedThemeBase = _objectSpread(_objectSpread(_objectSpread({}, defaultThemeBase), props.theme), {}, {\n      version: themeVersion,\n      animation: {\n        scale: reduceMotionEnabled ? 0 : 1\n      }\n    });\n\n    return _objectSpread(_objectSpread({}, extendedThemeBase), {}, {\n      isV3: extendedThemeBase.version === 3\n    });\n  };\n\n  var children = props.children,\n      settings = props.settings;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(PortalHost, null, React.createElement(SettingsProvider, {\n    value: settings || {\n      icon: MaterialCommunityIcon\n    }\n  }, React.createElement(ThemeProvider, {\n    theme: getTheme()\n  }, children))));\n};\n\nexport default Provider;","map":{"version":3,"mappings":"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","names":["React","MaterialCommunityIcon","PortalHost","addEventListener","SafeAreaProviderCompat","Provider","SettingsProvider","defaultThemesByVersion","ThemeProvider","props","isOnlyVersionInTheme","theme","Object","keys","length","version","colorSchemeName","Appearance","getColorScheme","useState","reduceMotionEnabled","setReduceMotionEnabled","colorScheme","setColorScheme","handleAppearanceChange","preferences","useEffect","subscription","AccessibilityInfo","_subscription","remove","appearanceSubscription","addChangeListener","removeChangeListener","getTheme","themeVersion","_props$theme","scheme","defaultThemeBase","extendedThemeBase","animation","scale","isV3","children","settings","value","icon"],"sources":["Provider.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  AccessibilityInfo,\n  Appearance,\n  ColorSchemeName,\n  NativeEventSubscription,\n} from 'react-native';\n\nimport MaterialCommunityIcon from '../components/MaterialCommunityIcon';\nimport PortalHost from '../components/Portal/PortalHost';\nimport type { ThemeProp } from '../types';\nimport { addEventListener } from '../utils/addEventListener';\nimport SafeAreaProviderCompat from './SafeAreaProviderCompat';\nimport { Provider as SettingsProvider, Settings } from './settings';\nimport { defaultThemesByVersion, ThemeProvider } from './theming';\n\nexport type Props = {\n  children: React.ReactNode;\n  theme?: ThemeProp;\n  settings?: Settings;\n};\n\nconst Provider = (props: Props) => {\n  const isOnlyVersionInTheme =\n    props.theme && Object.keys(props.theme).length === 1 && props.theme.version;\n\n  const colorSchemeName =\n    ((!props.theme || isOnlyVersionInTheme) && Appearance?.getColorScheme()) ||\n    'light';\n\n  const [reduceMotionEnabled, setReduceMotionEnabled] =\n    React.useState<boolean>(false);\n  const [colorScheme, setColorScheme] =\n    React.useState<ColorSchemeName>(colorSchemeName);\n\n  const handleAppearanceChange = (\n    preferences: Appearance.AppearancePreferences\n  ) => {\n    const { colorScheme } = preferences;\n    setColorScheme(colorScheme);\n  };\n\n  React.useEffect(() => {\n    let subscription: NativeEventSubscription | undefined;\n\n    if (!props.theme) {\n      subscription = addEventListener(\n        AccessibilityInfo,\n        'reduceMotionChanged',\n        setReduceMotionEnabled\n      );\n    }\n    return () => {\n      if (!props.theme) {\n        subscription?.remove();\n      }\n    };\n  }, [props.theme]);\n\n  React.useEffect(() => {\n    let appearanceSubscription: NativeEventSubscription | undefined;\n    if (!props.theme || isOnlyVersionInTheme) {\n      appearanceSubscription = Appearance?.addChangeListener(\n        handleAppearanceChange\n      ) as NativeEventSubscription | undefined;\n    }\n    return () => {\n      if (!props.theme || isOnlyVersionInTheme) {\n        if (appearanceSubscription) {\n          appearanceSubscription.remove();\n        } else {\n          // @ts-expect-error: We keep deprecated listener remove method for backwards compat with old RN versions\n          Appearance?.removeChangeListener(handleAppearanceChange);\n        }\n      }\n    };\n  }, [props.theme, isOnlyVersionInTheme]);\n\n  const getTheme = () => {\n    const themeVersion = props.theme?.version || 3;\n    const scheme = colorScheme || 'light';\n    const defaultThemeBase = defaultThemesByVersion[themeVersion][scheme];\n\n    const extendedThemeBase = {\n      ...defaultThemeBase,\n      ...props.theme,\n      version: themeVersion,\n      animation: {\n        scale: reduceMotionEnabled ? 0 : 1,\n      },\n    };\n\n    return {\n      ...extendedThemeBase,\n      isV3: extendedThemeBase.version === 3,\n    };\n  };\n\n  const { children, settings } = props;\n\n  return (\n    <SafeAreaProviderCompat>\n      <PortalHost>\n        <SettingsProvider value={settings || { icon: MaterialCommunityIcon }}>\n          {/* @ts-expect-error check @callstack/react-theme-provider's children prop */}\n          <ThemeProvider theme={getTheme()}>{children}</ThemeProvider>\n        </SettingsProvider>\n      </PortalHost>\n    </SafeAreaProviderCompat>\n  );\n};\n\nexport default Provider;\n"]},"metadata":{},"sourceType":"module"}