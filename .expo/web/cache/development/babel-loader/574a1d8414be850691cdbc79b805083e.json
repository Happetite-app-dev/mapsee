{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { ref, onValue, set, push } from \"firebase/database\";\nimport { database } from \"../../firebase\";\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport AppContext from \"../AppContext\";\nimport SendPushNotification from \"../../modules/SendPushNotification\";\nimport DefaultFolderBottomSheet from \"./defaultFolderBottomSheet\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar db = database;\n\nvar addNewFolder = function addNewFolder(_ref) {\n  var myUID = _ref.myUID,\n      myID = _ref.myID,\n      myFirstName = _ref.myFirstName,\n      myLastName = _ref.myLastName,\n      setFolderIDNameList = _ref.setFolderIDNameList,\n      setFolderID = _ref.setFolderID,\n      setFolderName = _ref.setFolderName,\n      folderName = _ref.folderName,\n      folderColor = _ref.folderColor,\n      folderUserIDs = _ref.folderUserIDs;\n  var reference1 = ref(db, \"/folders\");\n  var newFolderID = push(reference1, {\n    initFolderName: folderName,\n    initFolderColor: folderColor\n  }).key;\n  folderUserIDs.map(function (folderUserID) {\n    if (folderUserID == myUID) {\n      var reference2 = ref(db, \"/folders/\" + newFolderID + \"/folderName/\" + folderUserID);\n      set(reference2, folderName);\n      var reference3 = ref(db, \"/folders/\" + newFolderID + \"/folderColor/\" + folderUserID);\n      set(reference3, folderColor);\n      var reference4 = ref(db, \"/folders/\" + newFolderID + \"/userIDs/\" + folderUserID);\n      set(reference4, true);\n      var reference5 = ref(db, \"users/\" + folderUserID + \"/folderIDs/\" + newFolderID);\n      set(reference5, true);\n      var referenceDate = ref(db, \"/folders/\" + newFolderID + \"/updateDate\");\n      var now = new Date();\n      set(referenceDate, now.toString());\n    } else {\n      var timeNow = new Date();\n      var reference = ref(db, \"/notices/\" + folderUserID);\n      push(reference, {\n        type: \"recept_folderInvite_request\",\n        requesterUID: myUID,\n        requesterID: myID,\n        requesterFirstName: myFirstName,\n        requesterLastName: myLastName,\n        time: timeNow.getTime(),\n        folderID: newFolderID,\n        folderName: folderName,\n        folderColor: folderColor\n      });\n      SendPushNotification({\n        receiverUID: folderUserID,\n        title_: \"새폴더초대타이틀\",\n        body_: \"새폴더초대바디\"\n      });\n    }\n  });\n  setFolderIDNameList(function (prev) {\n    return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, newFolderID, {\n      folderID: newFolderID,\n      folderName: folderName\n    }));\n  });\n  setFolderID(newFolderID);\n  setFolderName(folderName);\n};\n\nvar AddFolderBottomSheet = function AddFolderBottomSheet(_ref2) {\n  var stackNavigation = _ref2.stackNavigation,\n      setFolderName = _ref2.setFolderName,\n      setFolderID = _ref2.setFolderID,\n      setFolderIDNameList = _ref2.setFolderIDNameList,\n      setShow = _ref2.setShow;\n  var myContext = useContext(AppContext);\n  var myUID = myContext.myUID;\n  var myID = myContext.myID;\n  var myFirstName = myContext.myFirstName;\n  var myLastName = myContext.myLastName;\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      newFolderName = _useState2[0],\n      _setNewFolderName = _useState2[1];\n\n  var _useState3 = useState(\"#EB7A7C\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newFolderColor = _useState4[0],\n      _setNewFolderColor = _useState4[1];\n\n  var _useState5 = useState([myUID]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      newFolderUserIDs = _useState6[0],\n      setNewFolderUserIDs = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      newFolderUserNameIDs = _useState8[0],\n      setNewFolderUserNameIDs = _useState8[1];\n\n  var onChangeNewFolderUserIDs = function onChangeNewFolderUserIDs(newFolderUserIDs_) {\n    setNewFolderUserIDs(newFolderUserIDs_);\n  };\n\n  useEffect(function () {\n    setNewFolderUserNameIDs([]);\n    newFolderUserIDs.map(function (userID) {\n      onValue(ref(db, \"/users/\" + userID), function (snapshot) {\n        setNewFolderUserNameIDs(function (prev) {\n          return [].concat(_toConsumableArray(prev), [{\n            userID: userID,\n            name: snapshot.child(\"lastName\").val() + snapshot.child(\"firstName\").val()\n          }]);\n        });\n      });\n    });\n  }, [newFolderUserIDs]);\n\n  var onPressFunction = function onPressFunction() {\n    addNewFolder({\n      myUID: myUID,\n      myID: myID,\n      myFirstName: myFirstName,\n      myLastName: myLastName,\n      setFolderIDNameList: setFolderIDNameList,\n      setFolderID: setFolderID,\n      setFolderName: setFolderName,\n      folderName: newFolderName,\n      folderColor: newFolderColor,\n      folderUserIDs: newFolderUserIDs\n    });\n    setShow(false);\n  };\n\n  return _jsx(View, {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: _jsx(DefaultFolderBottomSheet, {\n      IsNewRecord: true,\n      newFolderName: newFolderName,\n      setNewFolderName: function setNewFolderName(name) {\n        _setNewFolderName(name);\n      },\n      newFolderColor: newFolderColor,\n      setNewFolderColor: function setNewFolderColor(color) {\n        return _setNewFolderColor(function () {\n          return color;\n        });\n      },\n      onPressFunction: onPressFunction,\n      stackNavigation: stackNavigation,\n      newFolderUserIDs: newFolderUserIDs,\n      onChangeNewFolderUserIDs: onChangeNewFolderUserIDs,\n      newFolderUserNameIDs: newFolderUserNameIDs,\n      folderUserIDs: undefined\n    })\n  });\n};\n\nexport default AddFolderBottomSheet;","map":{"version":3,"names":["ref","onValue","set","push","database","React","useEffect","useRef","useState","useContext","AppContext","SendPushNotification","DefaultFolderBottomSheet","db","addNewFolder","myUID","myID","myFirstName","myLastName","setFolderIDNameList","setFolderID","setFolderName","folderName","folderColor","folderUserIDs","reference1","newFolderID","initFolderName","initFolderColor","key","map","folderUserID","reference2","reference3","reference4","reference5","referenceDate","now","Date","toString","timeNow","reference","type","requesterUID","requesterID","requesterFirstName","requesterLastName","time","getTime","folderID","receiverUID","title_","body_","prev","AddFolderBottomSheet","stackNavigation","setShow","myContext","newFolderName","setNewFolderName","newFolderColor","setNewFolderColor","newFolderUserIDs","setNewFolderUserIDs","newFolderUserNameIDs","setNewFolderUserNameIDs","onChangeNewFolderUserIDs","newFolderUserIDs_","userID","snapshot","name","child","val","onPressFunction","width","height","color","undefined"],"sources":["/Users/jeongin/mapsee_2/components/FolderBottomSheet/AddFolderBottomSheet.js"],"sourcesContent":["import { ref, onValue, set, push } from \"firebase/database\";\nimport { database } from \"../../firebase\";\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport AppContext from \"../AppContext\";\nimport SendPushNotification from \"../../modules/SendPushNotification\";\nimport DefaultFolderBottomSheet from \"./defaultFolderBottomSheet\";\n\nconst db = database;\n\nconst addNewFolder = ({\n  myUID,\n  myID,\n  myFirstName,\n  myLastName,\n  setFolderIDNameList,\n  setFolderID,\n  setFolderName,\n  folderName,\n  folderColor,\n  folderUserIDs,\n}) => {\n  //친구초대한 사람한테 push알림 보내는 함수\n  const reference1 = ref(db, \"/folders\"); //folders에 push\n  const newFolderID = push(reference1, {\n    initFolderName: folderName,\n    initFolderColor: folderColor,\n  }).key;\n  folderUserIDs.map((folderUserID) => {\n    if (folderUserID == myUID) {\n      const reference2 = ref(\n        db,\n        `/folders/${newFolderID}/folderName/${folderUserID}`\n      ); //folderName 개인화\n      set(reference2, folderName);\n      const reference3 = ref(\n        db,\n        `/folders/${newFolderID}/folderColor/${folderUserID}`\n      ); //folderColor 개인화\n      set(reference3, folderColor);\n      const reference4 = ref(\n        db,\n        `/folders/${newFolderID}/userIDs/${folderUserID}`\n      ); //folders/newfolderID/userIDs에 userID:true를 넣기\n      set(reference4, true);\n      const reference5 = ref(\n        db,\n        `users/${folderUserID}/folderIDs/${newFolderID}`\n      ); //user에 folderID를 넣고\n      set(reference5, true);\n\n      const referenceDate = ref(db, `/folders/${newFolderID}/updateDate`);\n      const now = new Date();\n      set(referenceDate, now.toString());\n    } else {\n      const timeNow = new Date();\n      const reference = ref(db, \"/notices/\" + folderUserID);\n      push(reference, {\n        type: \"recept_folderInvite_request\",\n        requesterUID: myUID,\n        requesterID: myID,\n        requesterFirstName: myFirstName,\n        requesterLastName: myLastName,\n        time: timeNow.getTime(),\n        //여기서 부턴 \"recept_folderInvite_request\" type 알림만의 정보\n        folderID: newFolderID,\n        folderName,\n        folderColor,\n      });\n      SendPushNotification({\n        receiverUID: folderUserID,\n        title_: \"새폴더초대타이틀\",\n        body_: \"새폴더초대바디\",\n      });\n    }\n  });\n  setFolderIDNameList((prev) => ({\n    ...prev,\n    [newFolderID]: { folderID: newFolderID, folderName },\n  }));\n  setFolderID(newFolderID);\n  setFolderName(folderName);\n};\nconst AddFolderBottomSheet = ({\n  stackNavigation,\n  setFolderName,\n  setFolderID,\n  setFolderIDNameList,\n  setShow,\n}) => {\n  const myContext = useContext(AppContext);\n  const myUID = myContext.myUID;\n  const myID = myContext.myID;\n  const myFirstName = myContext.myFirstName;\n  const myLastName = myContext.myLastName;\n\n  const [newFolderName, setNewFolderName] = useState(\"\");\n  const [newFolderColor, setNewFolderColor] = useState(\"#EB7A7C\");\n  const [newFolderUserIDs, setNewFolderUserIDs] = useState([myUID]);\n  const [newFolderUserNameIDs, setNewFolderUserNameIDs] = useState([]);\n  const onChangeNewFolderUserIDs = (newFolderUserIDs_) => {\n    setNewFolderUserIDs(newFolderUserIDs_);\n  };\n  useEffect(() => {\n    setNewFolderUserNameIDs([]);\n    newFolderUserIDs.map((userID) => {\n      onValue(ref(db, \"/users/\" + userID), (snapshot) => {\n        setNewFolderUserNameIDs((prev) => [\n          ...prev,\n          {\n            userID,\n            name:\n              snapshot.child(\"lastName\").val() +\n              snapshot.child(\"firstName\").val(),\n          },\n        ]);\n      });\n    });\n  }, [newFolderUserIDs]);\n  const onPressFunction = () => {\n    addNewFolder({\n      myUID,\n      myID,\n      myFirstName,\n      myLastName,\n      setFolderIDNameList,\n      setFolderID,\n      setFolderName,\n      folderName: newFolderName,\n      folderColor: newFolderColor,\n      folderUserIDs: newFolderUserIDs,\n    });\n    setShow(false);\n  };\n\n  return (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n      <DefaultFolderBottomSheet\n        IsNewRecord\n        newFolderName={newFolderName}\n        setNewFolderName={(name) => {\n          setNewFolderName(name);\n        }}\n        newFolderColor={newFolderColor}\n        setNewFolderColor={(color) => setNewFolderColor(() => color)}\n        onPressFunction={onPressFunction}\n        stackNavigation={stackNavigation}\n        newFolderUserIDs={newFolderUserIDs}\n        onChangeNewFolderUserIDs={onChangeNewFolderUserIDs}\n        newFolderUserNameIDs={newFolderUserNameIDs}\n        folderUserIDs={undefined}\n      />\n    </View>\n  );\n};\n\nexport default AddFolderBottomSheet;\n\n/*onpress*() => {\n          addNewFolder({\n            myUID,\n            myID,\n            myFirstName,\n            myLastName,\n            setFolderIDNameList,\n            setFolderID,\n            setFolderName,\n            folderName: newFolderName,\n            folderColor: newFolderColor,\n            folderUserIDs: newFolderUserIDs,\n          });\n          setShow(false);\n        } */\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}