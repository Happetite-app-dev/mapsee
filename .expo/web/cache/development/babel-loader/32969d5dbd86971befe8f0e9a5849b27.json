{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { onValue, ref } from \"@firebase/database\";\nimport { database } from \"../firebase\";\nvar db = database;\nexport var fetchUserObject = function fetchUserObject(_ref) {\n  var userObject = _ref.userObject,\n      setUserObject = _ref.setUserObject,\n      userID = _ref.userID;\n\n  if (!userObject[userID]) {\n    onValue(ref(db, \"/users/\" + userID), function (snapshot) {\n      if (snapshot.val()) {\n        setUserObject(function (prev) {\n          return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, userID, {\n            id: snapshot.child(\"id\"),\n            lastName: snapshot.child(\"lastName\"),\n            firstName: snapshot.child(\"firstName\")\n          }));\n        });\n      }\n    });\n  }\n\n  return userObject[userID];\n};\nexport var fetchFolderObject = function fetchFolderObject(_ref2) {\n  var folderObject = _ref2.folderObject,\n      setFolderObject = _ref2.setFolderObject,\n      folderID = _ref2.folderID,\n      userID = _ref2.userID;\n\n  if (!folderObject[folderID]) {\n    onValue(ref(db, \"/folders/\" + folderID + \"/userIDs/\"), function (snapshot) {\n      var folderUserIDs = snapshot.val() ? Object.keys(snapshot.val()) : [];\n      onValue(ref(db, \"/folders/\" + folderID + \"/userIDs/\" + userID), function (snapshot1) {\n        if (!snapshot1.val()) {\n          setFolderObject(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, folderID, {\n              folderName: \"\",\n              folderColor: \"\",\n              folderUserIDs: folderUserIDs\n            }));\n          });\n        } else {\n          onValue(ref(db, \"/folders/\" + folderID + \"/folderName/\" + userID), function (snapshot1) {\n            var folderName = snapshot1.val();\n            onValue(ref(db, \"/folders/\" + folderID + \"/folderColor/\" + userID), function (snapshot2) {\n              var folderColor = snapshot2.val();\n              setFolderObject(function (prev) {\n                return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, folderID, {\n                  folderName: folderName,\n                  folderColor: folderColor,\n                  folderUserIDs: folderUserIDs\n                }));\n              });\n            });\n          });\n        }\n      });\n    });\n  }\n\n  return folderObject[folderID];\n};\nexport var fetchInitFolderObject = function fetchInitFolderObject(_ref3) {\n  var folderObject = _ref3.folderObject,\n      setFolderObject = _ref3.setFolderObject,\n      folderID = _ref3.folderID;\n\n  if (!folderObject[folderID]) {\n    onValue(ref(db, \"/folders/\" + folderID + \"/userIDs/\"), function (snapshot) {\n      var folderUserIDs = snapshot.val() ? Object.keys(snapshot.val()) : [];\n      onValue(ref(db, \"/folders/\" + folderID + \"/initFolderName\"), function (snapshot2) {\n        var folderName = snapshot2.val() ? snapshot2.val() : \"\";\n        onValue(ref(db, \"/folders/\" + folderID + \"/initFolderColor\"), function (snapshot3) {\n          var folderColor = snapshot3.val() ? snapshot3.val() : \"\";\n          setFolderObject(function (prev) {\n            return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, folderID, {\n              folderName: folderName,\n              folderColor: folderColor,\n              folderUserIDs: folderUserIDs\n            }));\n          });\n        });\n      });\n    });\n  }\n\n  return folderObject[folderID];\n};","map":{"version":3,"names":["onValue","ref","database","db","fetchUserObject","userObject","setUserObject","userID","snapshot","val","prev","id","child","lastName","firstName","fetchFolderObject","folderObject","setFolderObject","folderID","folderUserIDs","Object","keys","snapshot1","folderName","folderColor","snapshot2","fetchInitFolderObject","snapshot3"],"sources":["/Users/jeongin/mapsee_2/modules/FetchDatabase.js"],"sourcesContent":["// uid주면 나머지 정보 뱉어내는 것\n// myUID,\n// myID,\n// myFirstName,\n// myLastName,\n\nimport { onValue, ref } from \"@firebase/database\";\n\nimport { database } from \"../firebase\";\nconst db = database;\n// 친구인 사람들은 모두 한 번에 uid 정리\n// 아닌 사람들은\n\n// uid object를 만든다.\n// uid object 만들어주는 모듈, uid주면 나머지 데리고 오는 모듈 하나\nexport const fetchUserObject = ({ userObject, setUserObject, userID }) => {\n  if (!userObject[userID]) {\n    onValue(ref(db, `/users/${userID}`), (snapshot) => {\n      if (snapshot.val()) {\n        setUserObject((prev) => ({\n          ...prev,\n          [userID]: {\n            id: snapshot.child(\"id\"),\n            lastName: snapshot.child(\"lastName\"),\n            firstName: snapshot.child(\"firstName\"),\n          },\n        }));\n      }\n    });\n  }\n  return userObject[userID];\n};\n\nexport const fetchFolderObject = ({\n  folderObject,\n  setFolderObject,\n  folderID,\n  userID,\n}) => {\n  if (!folderObject[folderID]) {\n    onValue(ref(db, `/folders/${folderID}/userIDs/`), (snapshot) => {\n      const folderUserIDs = snapshot.val() ? Object.keys(snapshot.val()) : [];\n      onValue(\n        ref(db, `/folders/${folderID}/userIDs/${userID}`),\n        (snapshot1) => {\n          if (!snapshot1.val()) {\n            setFolderObject((prev) => ({\n              ...prev,\n              [folderID]: {\n                folderName: \"\",\n                folderColor: \"\",\n                folderUserIDs,\n              },\n            }));\n          } else {\n            onValue(\n              ref(db, `/folders/${folderID}/folderName/${userID}`),\n              (snapshot1) => {\n                const folderName = snapshot1.val();\n                onValue(\n                  ref(db, `/folders/${folderID}/folderColor/${userID}`),\n                  (snapshot2) => {\n                    const folderColor = snapshot2.val();\n                    setFolderObject((prev) => ({\n                      ...prev,\n                      [folderID]: {\n                        folderName,\n                        folderColor,\n                        folderUserIDs,\n                      },\n                    }));\n                  }\n                );\n              }\n            );\n          }\n        }\n      );\n    });\n  }\n  return folderObject[folderID];\n};\n\n//folderInviteCard에서만 사용\nexport const fetchInitFolderObject = ({\n  folderObject,\n  setFolderObject,\n  folderID,\n}) => {\n  if (!folderObject[folderID]) {\n    onValue(ref(db, `/folders/${folderID}/userIDs/`), (snapshot) => {\n      const folderUserIDs = snapshot.val() ? Object.keys(snapshot.val()) : [];\n      onValue(ref(db, `/folders/${folderID}/initFolderName`), (snapshot2) => {\n        const folderName = snapshot2.val() ? snapshot2.val() : \"\";\n        onValue(\n          ref(db, `/folders/${folderID}/initFolderColor`),\n          (snapshot3) => {\n            const folderColor = snapshot3.val() ? snapshot3.val() : \"\";\n            setFolderObject((prev) => ({\n              ...prev,\n              [folderID]: {\n                folderName,\n                folderColor,\n                folderUserIDs,\n              },\n            }));\n          }\n        );\n      });\n    });\n  }\n  return folderObject[folderID];\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}