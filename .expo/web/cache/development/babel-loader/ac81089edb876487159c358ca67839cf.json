{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"animating\", \"color\", \"hidesWhenStopped\", \"size\", \"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nvar DURATION = 2400;\n\nvar ActivityIndicator = function ActivityIndicator(_ref) {\n  var _theme$colors;\n\n  var _ref$animating = _ref.animating,\n      animating = _ref$animating === void 0 ? true : _ref$animating,\n      indicatorColor = _ref.color,\n      _ref$hidesWhenStopped = _ref.hidesWhenStopped,\n      hidesWhenStopped = _ref$hidesWhenStopped === void 0 ? true : _ref$hidesWhenStopped,\n      _ref$size = _ref.size,\n      indicatorSize = _ref$size === void 0 ? 'small' : _ref$size,\n      style = _ref.style,\n      theme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var _React$useRef = React.useRef(new Animated.Value(0)),\n      timer = _React$useRef.current;\n\n  var _React$useRef2 = React.useRef(new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)),\n      fade = _React$useRef2.current;\n\n  var rotation = React.useRef(undefined);\n  var scale = theme.animation.scale;\n  var startRotation = React.useCallback(function () {\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true\n    }).start();\n\n    if (rotation.current) {\n      timer.setValue(0);\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  var stopRotation = function stopRotation() {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(function () {\n    if (rotation.current === undefined) {\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n  var color = indicatorColor || ((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.primary);\n  var size = typeof indicatorSize === 'string' ? indicatorSize === 'small' ? 24 : 48 : indicatorSize ? indicatorSize : 24;\n  var frames = 60 * DURATION / 1000;\n  var easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  var containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden'\n  };\n  return React.createElement(View, _extends({\n    style: [styles.container, style]\n  }, rest, {\n    accessible: true,\n    accessibilityRole: \"progressbar\",\n    accessibilityState: {\n      busy: animating\n    }\n  }), React.createElement(Animated.View, {\n    style: [{\n      width: size,\n      height: size,\n      opacity: fade\n    }],\n    collapsable: false\n  }, [0, 1].map(function (index) {\n    var inputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      return frameIndex / (frames - 1);\n    });\n    var outputRange = Array.from(new Array(frames), function (_, frameIndex) {\n      var progress = 2 * frameIndex / (frames - 1);\n      var rotation = index ? +(360 - 15) : -(180 - 15);\n\n      if (progress > 1.0) {\n        progress = 2.0 - progress;\n      }\n\n      var direction = index ? -1 : +1;\n      return direction * (180 - 30) * easing(progress) + rotation + \"deg\";\n    });\n    var layerStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        rotate: timer.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0 + 30 + 15 + \"deg\", 2 * 360 + 30 + 15 + \"deg\"]\n        })\n      }]\n    };\n    var viewportStyle = {\n      width: size,\n      height: size,\n      transform: [{\n        translateY: index ? -size / 2 : 0\n      }, {\n        rotate: timer.interpolate({\n          inputRange: inputRange,\n          outputRange: outputRange\n        })\n      }]\n    };\n    var offsetStyle = index ? {\n      top: size / 2\n    } : null;\n    var lineStyle = {\n      width: size,\n      height: size,\n      borderColor: color,\n      borderWidth: size / 10,\n      borderRadius: size / 2\n    };\n    return React.createElement(Animated.View, {\n      key: index,\n      style: [styles.layer]\n    }, React.createElement(Animated.View, {\n      style: layerStyle\n    }, React.createElement(Animated.View, {\n      style: [containerStyle, offsetStyle],\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: viewportStyle\n    }, React.createElement(Animated.View, {\n      style: containerStyle,\n      collapsable: false\n    }, React.createElement(Animated.View, {\n      style: lineStyle\n    }))))));\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  layer: _objectSpread(_objectSpread({}, StyleSheet.absoluteFillObject), {}, {\n    justifyContent: 'center',\n    alignItems: 'center'\n  })\n});\nexport default withInternalTheme(ActivityIndicator);","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","DURATION","ActivityIndicator","_ref","animating","indicatorColor","color","hidesWhenStopped","size","indicatorSize","style","theme","rest","useRef","Animated","Value","timer","current","fade","rotation","undefined","scale","animation","startRotation","useCallback","timing","duration","toValue","isInteraction","useNativeDriver","start","setValue","loop","stopRotation","stop","useEffect","easing","Easing","linear","Platform","OS","colors","_theme$colors","primary","frames","bezier","containerStyle","width","height","overflow","View","_extends","styles","container","accessible","accessibilityRole","accessibilityState","busy","opacity","collapsable","map","index","inputRange","Array","from","_","frameIndex","outputRange","progress","direction","layerStyle","transform","rotate","interpolate","viewportStyle","translateY","offsetStyle","top","lineStyle","borderColor","borderWidth","borderRadius","key","layer","StyleSheet","create","justifyContent","alignItems","absoluteFillObject"],"sources":["ActivityIndicator.tsx"],"sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  Easing,\n  Platform,\n  StyleProp,\n  StyleSheet,\n  View,\n  ViewStyle,\n} from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Whether to show the indicator or hide it.\n   */\n  animating?: boolean;\n  /**\n   * The color of the spinner.\n   */\n  color?: string;\n  /**\n   * Size of the indicator.\n   */\n  size?: 'small' | 'large' | number;\n  /**\n   * Whether the indicator should hide when not animating.\n   */\n  hidesWhenStopped?: boolean;\n  style?: StyleProp<ViewStyle>;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst DURATION = 2400;\n\n/**\n * Activity indicator is used to present progress of some activity in the app.\n * It can be used as a drop-in for the ActivityIndicator shipped with React Native.\n *\n * <div class=\"screenshots\">\n *   <img src=\"screenshots/activity-indicator.gif\" style=\"width: 100px;\" />\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ActivityIndicator, MD2Colors } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <ActivityIndicator animating={true} color={MD2Colors.red800} />\n * );\n *\n * export default MyComponent;\n * ```\n */\nconst ActivityIndicator = ({\n  animating = true,\n  color: indicatorColor,\n  hidesWhenStopped = true,\n  size: indicatorSize = 'small',\n  style,\n  theme,\n  ...rest\n}: Props) => {\n  const { current: timer } = React.useRef<Animated.Value>(\n    new Animated.Value(0)\n  );\n  const { current: fade } = React.useRef<Animated.Value>(\n    new Animated.Value(!animating && hidesWhenStopped ? 0 : 1)\n  );\n\n  const rotation = React.useRef<Animated.CompositeAnimation | undefined>(\n    undefined\n  );\n\n  const {\n    animation: { scale },\n  } = theme;\n\n  const startRotation = React.useCallback(() => {\n    // Show indicator\n    Animated.timing(fade, {\n      duration: 200 * scale,\n      toValue: 1,\n      isInteraction: false,\n      useNativeDriver: true,\n    }).start();\n\n    // Circular animation in loop\n    if (rotation.current) {\n      timer.setValue(0);\n      // $FlowFixMe\n      Animated.loop(rotation.current).start();\n    }\n  }, [scale, fade, timer]);\n\n  const stopRotation = () => {\n    if (rotation.current) {\n      rotation.current.stop();\n    }\n  };\n\n  React.useEffect(() => {\n    if (rotation.current === undefined) {\n      // Circular animation in loop\n      rotation.current = Animated.timing(timer, {\n        duration: DURATION,\n        easing: Easing.linear,\n        // Animated.loop does not work if useNativeDriver is true on web\n        useNativeDriver: Platform.OS !== 'web',\n        toValue: 1,\n        isInteraction: false,\n      });\n    }\n\n    if (animating) {\n      startRotation();\n    } else if (hidesWhenStopped) {\n      // Hide indicator first and then stop rotation\n      Animated.timing(fade, {\n        duration: 200 * scale,\n        toValue: 0,\n        useNativeDriver: true,\n        isInteraction: false,\n      }).start(stopRotation);\n    } else {\n      stopRotation();\n    }\n  }, [animating, fade, hidesWhenStopped, startRotation, scale, timer]);\n\n  const color = indicatorColor || theme.colors?.primary;\n  const size =\n    typeof indicatorSize === 'string'\n      ? indicatorSize === 'small'\n        ? 24\n        : 48\n      : indicatorSize\n      ? indicatorSize\n      : 24;\n\n  const frames = (60 * DURATION) / 1000;\n  const easing = Easing.bezier(0.4, 0.0, 0.7, 1.0);\n  const containerStyle = {\n    width: size,\n    height: size / 2,\n    overflow: 'hidden' as const,\n  };\n\n  return (\n    <View\n      style={[styles.container, style]}\n      {...rest}\n      accessible\n      accessibilityRole=\"progressbar\"\n      accessibilityState={{ busy: animating }}\n    >\n      <Animated.View\n        style={[{ width: size, height: size, opacity: fade }]}\n        collapsable={false}\n      >\n        {[0, 1].map((index) => {\n          // Thanks to https://github.com/n4kz/react-native-indicators for the great work\n          const inputRange = Array.from(\n            new Array(frames),\n            (_, frameIndex) => frameIndex / (frames - 1)\n          );\n          const outputRange = Array.from(new Array(frames), (_, frameIndex) => {\n            let progress = (2 * frameIndex) / (frames - 1);\n            const rotation = index ? +(360 - 15) : -(180 - 15);\n\n            if (progress > 1.0) {\n              progress = 2.0 - progress;\n            }\n\n            const direction = index ? -1 : +1;\n\n            return `${direction * (180 - 30) * easing(progress) + rotation}deg`;\n          });\n\n          const layerStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                rotate: timer.interpolate({\n                  inputRange: [0, 1],\n                  outputRange: [`${0 + 30 + 15}deg`, `${2 * 360 + 30 + 15}deg`],\n                }),\n              },\n            ],\n          };\n\n          const viewportStyle = {\n            width: size,\n            height: size,\n            transform: [\n              {\n                translateY: index ? -size / 2 : 0,\n              },\n              {\n                rotate: timer.interpolate({ inputRange, outputRange }),\n              },\n            ],\n          };\n\n          const offsetStyle = index ? { top: size / 2 } : null;\n\n          const lineStyle = {\n            width: size,\n            height: size,\n            borderColor: color,\n            borderWidth: size / 10,\n            borderRadius: size / 2,\n          };\n\n          return (\n            <Animated.View key={index} style={[styles.layer]}>\n              <Animated.View style={layerStyle}>\n                <Animated.View\n                  style={[containerStyle, offsetStyle]}\n                  collapsable={false}\n                >\n                  <Animated.View style={viewportStyle}>\n                    <Animated.View style={containerStyle} collapsable={false}>\n                      <Animated.View style={lineStyle} />\n                    </Animated.View>\n                  </Animated.View>\n                </Animated.View>\n              </Animated.View>\n            </Animated.View>\n          );\n        })}\n      </Animated.View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n\n  layer: {\n    ...StyleSheet.absoluteFillObject,\n\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n});\n\nexport default withInternalTheme(ActivityIndicator);\n"]},"metadata":{},"sourceType":"module"}