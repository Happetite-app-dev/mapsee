{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { ViewPropTypes } from \"react-native-web/dist/index\";\nimport PropTypes from 'prop-types';\nimport styles from \"./Pagination.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar PaginationDot = function (_PureComponent) {\n  _inherits(PaginationDot, _PureComponent);\n\n  var _super = _createSuper(PaginationDot);\n\n  function PaginationDot(props) {\n    var _this;\n\n    _classCallCheck(this, PaginationDot);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      animColor: new Animated.Value(0),\n      animOpacity: new Animated.Value(0),\n      animTransform: new Animated.Value(0)\n    };\n    return _this;\n  }\n\n  _createClass(PaginationDot, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (this.props.active) {\n        this._animate(1);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      if (prevProps.active !== this.props.active) {\n        this._animate(this.props.active ? 1 : 0);\n      }\n    }\n  }, {\n    key: \"_animate\",\n    value: function _animate() {\n      var toValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      var _this$state = this.state,\n          animColor = _this$state.animColor,\n          animOpacity = _this$state.animOpacity,\n          animTransform = _this$state.animTransform;\n      var _this$props = this.props,\n          animatedDuration = _this$props.animatedDuration,\n          animatedFriction = _this$props.animatedFriction,\n          animatedTension = _this$props.animatedTension;\n      var commonProperties = {\n        toValue: toValue,\n        duration: animatedDuration,\n        isInteraction: false,\n        useNativeDriver: !this._shouldAnimateColor\n      };\n      var animations = [Animated.timing(animOpacity, _objectSpread({\n        easing: Easing.linear\n      }, commonProperties)), Animated.spring(animTransform, _objectSpread({\n        friction: animatedFriction,\n        tension: animatedTension\n      }, commonProperties))];\n\n      if (this._shouldAnimateColor) {\n        animations.push(Animated.timing(animColor, _objectSpread({\n          easing: Easing.linear\n        }, commonProperties)));\n      }\n\n      Animated.parallel(animations).start();\n    }\n  }, {\n    key: \"_shouldAnimateColor\",\n    get: function get() {\n      var _this$props2 = this.props,\n          color = _this$props2.color,\n          inactiveColor = _this$props2.inactiveColor;\n      return color && inactiveColor;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          animColor = _this$state2.animColor,\n          animOpacity = _this$state2.animOpacity,\n          animTransform = _this$state2.animTransform;\n      var _this$props3 = this.props,\n          active = _this$props3.active,\n          activeOpacity = _this$props3.activeOpacity,\n          carouselRef = _this$props3.carouselRef,\n          color = _this$props3.color,\n          containerStyle = _this$props3.containerStyle,\n          inactiveColor = _this$props3.inactiveColor,\n          inactiveStyle = _this$props3.inactiveStyle,\n          inactiveOpacity = _this$props3.inactiveOpacity,\n          inactiveScale = _this$props3.inactiveScale,\n          index = _this$props3.index,\n          style = _this$props3.style,\n          tappable = _this$props3.tappable,\n          delayPressInDot = _this$props3.delayPressInDot;\n      var animatedStyle = {\n        opacity: animOpacity.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveOpacity, 1]\n        }),\n        transform: [{\n          scale: animTransform.interpolate({\n            inputRange: [0, 1],\n            outputRange: [inactiveScale, 1]\n          })\n        }]\n      };\n      var animatedColor = this._shouldAnimateColor ? {\n        backgroundColor: animColor.interpolate({\n          inputRange: [0, 1],\n          outputRange: [inactiveColor, color]\n        })\n      } : {};\n      var dotContainerStyle = [styles.sliderPaginationDotContainer, containerStyle || {}];\n      var dotStyle = [styles.sliderPaginationDot, style || {}, !active && inactiveStyle || {}, animatedStyle, animatedColor];\n      var onPress = tappable ? function () {\n        try {\n          var currentRef = carouselRef.current || carouselRef;\n\n          currentRef._snapToItem(currentRef._getPositionIndex(index));\n        } catch (error) {\n          console.warn('react-native-snap-carousel | Pagination: ' + '`carouselRef` has to be a Carousel ref.\\n' + error);\n        }\n      } : undefined;\n      return _jsx(TouchableOpacity, {\n        accessible: false,\n        style: dotContainerStyle,\n        activeOpacity: tappable ? activeOpacity : 1,\n        onPress: onPress,\n        delayPressIn: delayPressInDot,\n        children: _jsx(Animated.View, {\n          style: dotStyle\n        })\n      });\n    }\n  }]);\n\n  return PaginationDot;\n}(PureComponent);\n\nPaginationDot.propTypes = {\n  inactiveOpacity: PropTypes.number.isRequired,\n  inactiveScale: PropTypes.number.isRequired,\n  active: PropTypes.bool,\n  activeOpacity: PropTypes.number,\n  carouselRef: PropTypes.object,\n  color: PropTypes.string,\n  containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  inactiveColor: PropTypes.string,\n  inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  index: PropTypes.number,\n  style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  tappable: PropTypes.bool\n};\nexport { PaginationDot as default };","map":{"version":3,"names":["React","PureComponent","ViewPropTypes","PropTypes","styles","PaginationDot","props","state","animColor","Animated","Value","animOpacity","animTransform","active","_animate","prevProps","toValue","animatedDuration","animatedFriction","animatedTension","commonProperties","duration","isInteraction","useNativeDriver","_shouldAnimateColor","animations","timing","easing","Easing","linear","spring","friction","tension","push","parallel","start","color","inactiveColor","activeOpacity","carouselRef","containerStyle","inactiveStyle","inactiveOpacity","inactiveScale","index","style","tappable","delayPressInDot","animatedStyle","opacity","interpolate","inputRange","outputRange","transform","scale","animatedColor","backgroundColor","dotContainerStyle","sliderPaginationDotContainer","dotStyle","sliderPaginationDot","onPress","currentRef","current","_snapToItem","_getPositionIndex","error","console","warn","undefined","propTypes","number","isRequired","bool","object","string","View"],"sources":["/Users/jeongin/mapsee_2/node_modules/react-native-snap-carousel/src/pagination/PaginationDot.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport { View, Animated, Easing, TouchableOpacity, ViewPropTypes } from 'react-native';\nimport PropTypes from 'prop-types';\nimport styles from './Pagination.style';\n\nexport default class PaginationDot extends PureComponent {\n\n    static propTypes = {\n        inactiveOpacity: PropTypes.number.isRequired,\n        inactiveScale: PropTypes.number.isRequired,\n        active: PropTypes.bool,\n        activeOpacity: PropTypes.number,\n        carouselRef: PropTypes.object,\n        color: PropTypes.string,\n        containerStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        inactiveColor: PropTypes.string,\n        inactiveStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        index: PropTypes.number,\n        style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n        tappable: PropTypes.bool\n    };\n\n    constructor (props) {\n        super(props);\n        this.state = {\n            animColor: new Animated.Value(0),\n            animOpacity: new Animated.Value(0),\n            animTransform: new Animated.Value(0)\n        };\n    }\n\n    componentDidMount () {\n        if (this.props.active) {\n            this._animate(1);\n        }\n    }\n\n    componentDidUpdate (prevProps) {\n        if (prevProps.active !== this.props.active) {\n            this._animate(this.props.active ? 1 : 0);\n        }\n    }\n\n    _animate (toValue = 0) {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const { animatedDuration, animatedFriction, animatedTension } = this.props\n\n        const commonProperties = {\n            toValue,\n            duration: animatedDuration,\n            isInteraction: false,\n            useNativeDriver: !this._shouldAnimateColor\n        };\n\n        let animations = [\n            Animated.timing(animOpacity, {\n                easing: Easing.linear,\n                ...commonProperties\n            }),\n            Animated.spring(animTransform, {\n                friction: animatedFriction,\n                tension: animatedTension,\n                ...commonProperties\n            })\n        ];\n\n        if (this._shouldAnimateColor) {\n            animations.push(Animated.timing(animColor, {\n                easing: Easing.linear,\n                ...commonProperties\n            }));\n        }\n\n        Animated.parallel(animations).start();\n    }\n\n    get _shouldAnimateColor () {\n        const { color, inactiveColor } = this.props;\n        return color && inactiveColor;\n    }\n\n    render () {\n        const { animColor, animOpacity, animTransform } = this.state;\n        const {\n            active,\n            activeOpacity,\n            carouselRef,\n            color,\n            containerStyle,\n            inactiveColor,\n            inactiveStyle,\n            inactiveOpacity,\n            inactiveScale,\n            index,\n            style,\n            tappable,\n            delayPressInDot\n        } = this.props;\n\n        const animatedStyle = {\n            opacity: animOpacity.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveOpacity, 1]\n            }),\n            transform: [{\n                scale: animTransform.interpolate({\n                    inputRange: [0, 1],\n                    outputRange: [inactiveScale, 1]\n                })\n            }]\n        };\n        const animatedColor = this._shouldAnimateColor ? {\n            backgroundColor: animColor.interpolate({\n                inputRange: [0, 1],\n                outputRange: [inactiveColor, color]\n            })\n        } : {};\n\n        const dotContainerStyle = [\n            styles.sliderPaginationDotContainer,\n            containerStyle || {}\n        ];\n\n        const dotStyle = [\n            styles.sliderPaginationDot,\n            style || {},\n            (!active && inactiveStyle) || {},\n            animatedStyle,\n            animatedColor\n        ];\n\n        const onPress = tappable ? () => {\n            try {\n                const currentRef = carouselRef.current || carouselRef;\n                currentRef._snapToItem(currentRef._getPositionIndex(index));\n            } catch (error) {\n                console.warn(\n                    'react-native-snap-carousel | Pagination: ' +\n                    '`carouselRef` has to be a Carousel ref.\\n' + error\n                );\n            }\n        } : undefined;\n\n        return (\n            <TouchableOpacity\n              accessible={false}\n              style={dotContainerStyle}\n              activeOpacity={tappable ? activeOpacity : 1}\n              onPress={onPress}\n              delayPressIn={delayPressInDot}\n            >\n                <Animated.View style={dotStyle} />\n            </TouchableOpacity>\n        );\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}