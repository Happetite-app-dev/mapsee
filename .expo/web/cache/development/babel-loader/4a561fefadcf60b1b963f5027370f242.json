{"ast":null,"code":"import findNodeHandle from \"react-native-web/dist/exports/findNodeHandle\";\nimport { shouldBeUseWeb } from \"./PlatformChecker\";\nexport function getTag(view) {\n  return findNodeHandle(view);\n}\nvar isNativeIndefined = shouldBeUseWeb();\nexport var measure = function () {\n  var _f = function _f(animatedRef) {\n    if (!_WORKLET || isNativeIndefined) {\n      console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');\n      return {\n        x: NaN,\n        y: NaN,\n        width: NaN,\n        height: NaN,\n        pageX: NaN,\n        pageY: NaN\n      };\n    }\n\n    var viewTag = animatedRef();\n\n    var result = _measure(viewTag);\n\n    if (result.x === -1234567) {\n      throw new Error(\"The view with tag \" + viewTag + \" could not be measured\");\n    }\n\n    return result;\n  };\n\n  _f._closure = {\n    isNativeIndefined: isNativeIndefined,\n    NaN: NaN\n  };\n  _f.asString = \"function measure(animatedRef){const{isNativeIndefined,NaN}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');return{x:NaN,y:NaN,width:NaN,height:NaN,pageX:NaN,pageY:NaN};}const viewTag=animatedRef();const result=_measure(viewTag);if(result.x===-1234567){throw new Error(\\\"The view with tag \\\"+viewTag+\\\" could not be measured\\\");}return result;}}\";\n  _f.__workletHash = 16871416275568;\n  _f.__location = \"/Users/jeongin/mapsee_2/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js (7:7)\";\n  return _f;\n}();\nexport var scrollTo = function () {\n  var _f = function _f(animatedRef, x, y, animated) {\n    if (!_WORKLET || isNativeIndefined) {\n      return;\n    }\n\n    var viewTag = animatedRef();\n\n    _scrollTo(viewTag, x, y, animated);\n  };\n\n  _f._closure = {\n    isNativeIndefined: isNativeIndefined\n  };\n  _f.asString = \"function scrollTo(animatedRef,x,y,animated){const{isNativeIndefined}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){return;}const viewTag=animatedRef();_scrollTo(viewTag,x,y,animated);}}\";\n  _f.__workletHash = 15726952508258;\n  _f.__location = \"/Users/jeongin/mapsee_2/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js (27:7)\";\n  return _f;\n}();\nexport var setGestureState = function () {\n  var _f = function _f(handlerTag, newState) {\n    if (!_WORKLET || isNativeIndefined) {\n      console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n      return;\n    }\n\n    _setGestureState(handlerTag, newState);\n  };\n\n  _f._closure = {\n    isNativeIndefined: isNativeIndefined\n  };\n  _f.asString = \"function setGestureState(handlerTag,newState){const{isNativeIndefined}=jsThis._closure;{if(!_WORKLET||isNativeIndefined){console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');return;}_setGestureState(handlerTag,newState);}}\";\n  _f.__workletHash = 3665262151737;\n  _f.__location = \"/Users/jeongin/mapsee_2/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js (35:7)\";\n  return _f;\n}();","map":{"version":3,"names":["shouldBeUseWeb","getTag","view","findNodeHandle","isNativeIndefined","measure","animatedRef","_WORKLET","console","warn","x","NaN","y","width","height","pageX","pageY","viewTag","result","_measure","Error","scrollTo","animated","_scrollTo","setGestureState","handlerTag","newState","_setGestureState"],"sources":["/Users/jeongin/mapsee_2/node_modules/react-native-reanimated/lib/reanimated2/NativeMethods.js"],"sourcesContent":["import { findNodeHandle } from 'react-native';\nimport { shouldBeUseWeb } from './PlatformChecker';\nexport function getTag(view) {\n    return findNodeHandle(view);\n}\nconst isNativeIndefined = shouldBeUseWeb();\nexport function measure(animatedRef) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        console.warn('[reanimated.measure] method cannot be used for web or Chrome Debugger');\n        return {\n            x: NaN,\n            y: NaN,\n            width: NaN,\n            height: NaN,\n            pageX: NaN,\n            pageY: NaN,\n        };\n    }\n    const viewTag = animatedRef();\n    const result = _measure(viewTag);\n    if (result.x === -1234567) {\n        throw new Error(`The view with tag ${viewTag} could not be measured`);\n    }\n    return result;\n}\nexport function scrollTo(animatedRef, x, y, animated) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        return;\n    }\n    const viewTag = animatedRef();\n    _scrollTo(viewTag, x, y, animated);\n}\nexport function setGestureState(handlerTag, newState) {\n    'worklet';\n    if (!_WORKLET || isNativeIndefined) {\n        console.warn('[Reanimated] You can not use setGestureState in non-worklet function.');\n        return;\n    }\n    _setGestureState(handlerTag, newState);\n}\n"],"mappings":";AACA,SAASA,cAAT;AACA,OAAO,SAASC,MAAT,CAAgBC,IAAhB,EAAsB;EACzB,OAAOC,cAAc,CAACD,IAAD,CAArB;AACH;AACD,IAAME,iBAAiB,GAAGJ,cAAc,EAAxC;AACA,WAAgBK,OAAhB;EAAA,qBAAwBC,WAAxB,EAAqC;IAEjC,IAAI,CAACC,QAAD,IAAaH,iBAAjB,EAAoC;MAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb;MACA,OAAO;QACHC,CAAC,EAAEC,GADA;QAEHC,CAAC,EAAED,GAFA;QAGHE,KAAK,EAAEF,GAHJ;QAIHG,MAAM,EAAEH,GAJL;QAKHI,KAAK,EAAEJ,GALJ;QAMHK,KAAK,EAAEL;MANJ,CAAP;IAQH;;IACD,IAAMM,OAAO,GAAGX,WAAW,EAA3B;;IACA,IAAMY,MAAM,GAAGC,QAAQ,CAACF,OAAD,CAAvB;;IACA,IAAIC,MAAM,CAACR,CAAP,KAAa,CAAC,OAAlB,EAA2B;MACvB,MAAM,IAAIU,KAAJ,wBAA+BH,OAA/B,4BAAN;IACH;;IACD,OAAOC,MAAP;EACH,CAnBD;;EAAA;IAAA,mBAJmBd,iBAInB;IAAA,KAIaO;EAJb;EAAA;EAAA;EAAA;EAAA;AAAA;AAoBA,WAAgBU,QAAhB;EAAA,qBAAyBf,WAAzB,EAAsCI,CAAtC,EAAyCE,CAAzC,EAA4CU,QAA5C,EAAsD;IAElD,IAAI,CAACf,QAAD,IAAaH,iBAAjB,EAAoC;MAChC;IACH;;IACD,IAAMa,OAAO,GAAGX,WAAW,EAA3B;;IACAiB,SAAS,CAACN,OAAD,EAAUP,CAAV,EAAaE,CAAb,EAAgBU,QAAhB,CAAT;EACH,CAPD;;EAAA;IAAA,mBAxBmBlB;EAwBnB;EAAA;EAAA;EAAA;EAAA;AAAA;AAQA,WAAgBoB,eAAhB;EAAA,qBAAgCC,UAAhC,EAA4CC,QAA5C,EAAsD;IAElD,IAAI,CAACnB,QAAD,IAAaH,iBAAjB,EAAoC;MAChCI,OAAO,CAACC,IAAR,CAAa,uEAAb;MACA;IACH;;IACDkB,gBAAgB,CAACF,UAAD,EAAaC,QAAb,CAAhB;EACH,CAPD;;EAAA;IAAA,mBAhCmBtB;EAgCnB;EAAA;EAAA;EAAA;EAAA;AAAA"},"metadata":{},"sourceType":"module"}