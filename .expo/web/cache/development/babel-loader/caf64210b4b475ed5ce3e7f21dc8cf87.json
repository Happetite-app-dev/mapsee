{"ast":null,"code":"import Platform from \"react-native-web/dist/exports/Platform\";\nimport setColor from 'color';\nimport { grey400, grey800, grey50, grey700, white, black } from \"../../styles/themes/v2/colors\";\n\nvar getCheckedColor = function getCheckedColor(_ref) {\n  var theme = _ref.theme,\n      color = _ref.color;\n\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nvar getThumbTintColor = function getThumbTintColor(_ref2) {\n  var theme = _ref2.theme,\n      disabled = _ref2.disabled,\n      value = _ref2.value,\n      checkedColor = _ref2.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n\n  return grey50;\n};\n\nvar getOnTintColor = function getOnTintColor(_ref3) {\n  var theme = _ref3.theme,\n      disabled = _ref3.disabled,\n      value = _ref3.value,\n      checkedColor = _ref3.checkedColor;\n  var isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n\n  return 'rgb(178, 175, 177)';\n};\n\nexport var getSwitchColor = function getSwitchColor(_ref4) {\n  var theme = _ref4.theme,\n      disabled = _ref4.disabled,\n      value = _ref4.value,\n      color = _ref4.color;\n  var checkedColor = getCheckedColor({\n    theme: theme,\n    color: color\n  });\n  return {\n    onTintColor: getOnTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    thumbTintColor: getThumbTintColor({\n      theme: theme,\n      disabled: disabled,\n      value: value,\n      checkedColor: checkedColor\n    }),\n    checkedColor: checkedColor\n  };\n};","map":{"version":3,"mappings":"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","names":["setColor","grey400","grey800","grey50","grey700","white","black","getCheckedColor","theme","_ref","color","isV3","colors","primary","accent","getThumbTintColor","_ref2","disabled","value","checkedColor","isIOS","Platform","OS","undefined","dark","getOnTintColor","_ref3","alpha","rgb","string","getSwitchColor","_ref4","onTintColor","thumbTintColor"],"sources":["utils.ts"],"sourcesContent":["import { Platform } from 'react-native';\n\nimport setColor from 'color';\n\nimport {\n  grey400,\n  grey800,\n  grey50,\n  grey700,\n  white,\n  black,\n} from '../../styles/themes/v2/colors';\nimport type { InternalTheme } from '../../types';\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n  value?: boolean;\n};\n\nconst getCheckedColor = ({\n  theme,\n  color,\n}: {\n  theme: InternalTheme;\n  color?: string;\n}) => {\n  if (color) {\n    return color;\n  }\n\n  if (theme.isV3) {\n    return theme.colors.primary;\n  }\n\n  return theme.colors.accent;\n};\n\nconst getThumbTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return undefined;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      return grey800;\n    }\n    return grey400;\n  }\n\n  if (value) {\n    return checkedColor;\n  }\n\n  if (theme.dark) {\n    return grey400;\n  }\n  return grey50;\n};\n\nconst getOnTintColor = ({\n  theme,\n  disabled,\n  value,\n  checkedColor,\n}: BaseProps & { checkedColor: string }) => {\n  const isIOS = Platform.OS === 'ios';\n\n  if (isIOS) {\n    return checkedColor;\n  }\n\n  if (disabled) {\n    if (theme.dark) {\n      if (theme.isV3) {\n        return setColor(white).alpha(0.06).rgb().string();\n      }\n      return setColor(white).alpha(0.1).rgb().string();\n    }\n    return setColor(black).alpha(0.12).rgb().string();\n  }\n\n  if (value) {\n    return setColor(checkedColor).alpha(0.5).rgb().string();\n  }\n\n  if (theme.dark) {\n    return grey700;\n  }\n  return 'rgb(178, 175, 177)';\n};\n\nexport const getSwitchColor = ({\n  theme,\n  disabled,\n  value,\n  color,\n}: BaseProps & { color?: string }) => {\n  const checkedColor = getCheckedColor({ theme, color });\n\n  return {\n    onTintColor: getOnTintColor({ theme, disabled, value, checkedColor }),\n    thumbTintColor: getThumbTintColor({ theme, disabled, value, checkedColor }),\n    checkedColor,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}