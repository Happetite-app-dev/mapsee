{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../core/theming\";\nimport Text from \"../Typography/Text\";\n\nvar ListSubheader = function ListSubheader(_ref) {\n  var style = _ref.style,\n      overrideTheme = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useInternalTheme(overrideTheme);\n  var textColor = theme.isV3 ? theme.colors.onSurfaceVariant : color(theme.colors.text).alpha(0.54).rgb().string();\n  var font = theme.isV3 ? theme.fonts.bodyMedium : theme.fonts.medium;\n  return React.createElement(Text, _extends({\n    variant: \"bodyMedium\",\n    numberOfLines: 1\n  }, rest, {\n    style: [styles.container, _objectSpread({\n      color: textColor\n    }, font), style]\n  }));\n};\n\nListSubheader.displayName = 'List.Subheader';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13\n  }\n});\nexport default ListSubheader;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,gBAAT;AACA,OAAOC,IAAP;;AA0BA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAAqD;EAAA,IAAlDC,KAAkD,GAALC,IAAK,CAAlDD,KAAkD;EAAA,IAApCE,aAAoC,GAALD,IAAK,CAA3CE,KAA2C;EAAA,IAAlBC,IAAkB,4BAALH,IAAK;;EACzE,IAAME,KAAK,GAAGN,gBAAgB,CAACK,aAAD,CAA9B;EAEA,IAAMG,SAAS,GAAGF,KAAK,CAACG,IAANH,GACdA,KAAK,CAACI,MAANJ,CAAaK,gBADCL,GAEdP,KAAK,CAACO,KAAK,CAACI,MAANJ,CAAaM,IAAd,CAALb,CAAyBc,KAAzBd,CAA+B,IAA/BA,EAAqCe,GAArCf,GAA2CgB,MAA3ChB,EAFJ;EAIA,IAAMiB,IAAI,GAAGV,KAAK,CAACG,IAANH,GAAaA,KAAK,CAACW,KAANX,CAAYY,UAAzBZ,GAAsCA,KAAK,CAACW,KAANX,CAAYa,MAA/D;EAEA,OACErB,oBAACG,IAAD,EAAKmB;IACHC,OAAO,EAAC,YADL;IAEHC,aAAa,EAAE;EAFZ,GAGCf,IAHD,EAGK;IACRJ,KAAK,EAAE,CACLoB,MAAM,CAACC,SADF;MAGHzB,KAAK,EAAES;IAHJ,GAIAQ,IAJA,GAMLb,KANK;EADC,CAHL,CAAL,CADF;AAeD,CAxBD;;AA0BAD,aAAa,CAACuB,WAAdvB,GAA4B,gBAA5BA;AAEA,IAAMqB,MAAM,GAAGG,UAAU,CAACC,MAAXD,CAAkB;EAC/BF,SAAS,EAAE;IACTI,iBAAiB,EAAE,EADV;IAETC,eAAe,EAAE;EAFR;AADoB,CAAlBH,CAAf;AAOA,eAAexB,aAAf","names":["React","color","useInternalTheme","Text","ListSubheader","style","_ref","overrideTheme","theme","rest","textColor","isV3","colors","onSurfaceVariant","text","alpha","rgb","string","font","fonts","bodyMedium","medium","_extends","variant","numberOfLines","styles","container","displayName","StyleSheet","create","paddingHorizontal","paddingVertical"],"sources":["ListSubheader.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { InternalTheme } from 'src/types';\n\nimport { useInternalTheme } from '../../core/theming';\nimport Text from '../Typography/Text';\n\nexport type Props = React.ComponentProps<typeof Text> & {\n  /**\n   * @optional\n   */\n  theme?: InternalTheme;\n  /**\n   * Style that is passed to Text element.\n   */\n  style?: StyleProp<TextStyle>;\n};\n\n/**\n * A component used to display a header in lists.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { List } from 'react-native-paper';\n *\n * const MyComponent = () => <List.Subheader>My List Title</List.Subheader>;\n *\n * export default MyComponent;\n * ```\n */\nconst ListSubheader = ({ style, theme: overrideTheme, ...rest }: Props) => {\n  const theme = useInternalTheme(overrideTheme);\n\n  const textColor = theme.isV3\n    ? theme.colors.onSurfaceVariant\n    : color(theme.colors.text).alpha(0.54).rgb().string();\n\n  const font = theme.isV3 ? theme.fonts.bodyMedium : theme.fonts.medium;\n\n  return (\n    <Text\n      variant=\"bodyMedium\"\n      numberOfLines={1}\n      {...rest}\n      style={[\n        styles.container,\n        {\n          color: textColor,\n          ...font,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nListSubheader.displayName = 'List.Subheader';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 16,\n    paddingVertical: 13,\n  },\n});\n\nexport default ListSubheader;\n"]},"metadata":{},"sourceType":"module"}