{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nimport { getHeaderTitle, Header, SafeAreaProviderCompat, Screen } from '@react-navigation/elements';\nimport * as React from 'react';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\nimport BottomTabBarHeightCallbackContext from \"../utils/BottomTabBarHeightCallbackContext\";\nimport BottomTabBarHeightContext from \"../utils/BottomTabBarHeightContext\";\nimport BottomTabBar, { getTabBarHeight } from \"./BottomTabBar\";\nimport { MaybeScreen, MaybeScreenContainer } from \"./ScreenFallback\";\nexport default function BottomTabView(props) {\n  var _props$tabBar = props.tabBar,\n      tabBar = _props$tabBar === void 0 ? function (props) {\n    return React.createElement(BottomTabBar, props);\n  } : _props$tabBar,\n      state = props.state,\n      navigation = props.navigation,\n      descriptors = props.descriptors,\n      safeAreaInsets = props.safeAreaInsets,\n      _props$detachInactive = props.detachInactiveScreens,\n      detachInactiveScreens = _props$detachInactive === void 0 ? Platform.OS === 'web' || Platform.OS === 'android' || Platform.OS === 'ios' : _props$detachInactive,\n      sceneContainerStyle = props.sceneContainerStyle;\n  var focusedRouteKey = state.routes[state.index].key;\n\n  var _React$useState = React.useState([focusedRouteKey]),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      loaded = _React$useState2[0],\n      setLoaded = _React$useState2[1];\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([].concat(_toConsumableArray(loaded), [focusedRouteKey]));\n  }\n\n  var dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n\n  var _React$useState3 = React.useState(function () {\n    return getTabBarHeight({\n      state: state,\n      descriptors: descriptors,\n      dimensions: dimensions,\n      layout: {\n        width: dimensions.width,\n        height: 0\n      },\n      insets: _objectSpread(_objectSpread({}, SafeAreaProviderCompat.initialMetrics.insets), props.safeAreaInsets),\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle\n    });\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      tabBarHeight = _React$useState4[0],\n      setTabBarHeight = _React$useState4[1];\n\n  var renderTabBar = function renderTabBar() {\n    return React.createElement(SafeAreaInsetsContext.Consumer, null, function (insets) {\n      var _ref, _safeAreaInsets$top, _ref2, _safeAreaInsets$right, _ref3, _safeAreaInsets$botto, _ref4, _safeAreaInsets$left;\n\n      return tabBar({\n        state: state,\n        descriptors: descriptors,\n        navigation: navigation,\n        insets: {\n          top: (_ref = (_safeAreaInsets$top = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.top) !== null && _safeAreaInsets$top !== void 0 ? _safeAreaInsets$top : insets === null || insets === void 0 ? void 0 : insets.top) !== null && _ref !== void 0 ? _ref : 0,\n          right: (_ref2 = (_safeAreaInsets$right = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.right) !== null && _safeAreaInsets$right !== void 0 ? _safeAreaInsets$right : insets === null || insets === void 0 ? void 0 : insets.right) !== null && _ref2 !== void 0 ? _ref2 : 0,\n          bottom: (_ref3 = (_safeAreaInsets$botto = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.bottom) !== null && _safeAreaInsets$botto !== void 0 ? _safeAreaInsets$botto : insets === null || insets === void 0 ? void 0 : insets.bottom) !== null && _ref3 !== void 0 ? _ref3 : 0,\n          left: (_ref4 = (_safeAreaInsets$left = safeAreaInsets === null || safeAreaInsets === void 0 ? void 0 : safeAreaInsets.left) !== null && _safeAreaInsets$left !== void 0 ? _safeAreaInsets$left : insets === null || insets === void 0 ? void 0 : insets.left) !== null && _ref4 !== void 0 ? _ref4 : 0\n        }\n      });\n    });\n  };\n\n  var routes = state.routes;\n  return React.createElement(SafeAreaProviderCompat, null, React.createElement(MaybeScreenContainer, {\n    enabled: detachInactiveScreens,\n    hasTwoStates: true,\n    style: styles.container\n  }, routes.map(function (route, index) {\n    var descriptor = descriptors[route.key];\n    var _descriptor$options = descriptor.options,\n        _descriptor$options$l = _descriptor$options.lazy,\n        lazy = _descriptor$options$l === void 0 ? true : _descriptor$options$l,\n        unmountOnBlur = _descriptor$options.unmountOnBlur;\n    var isFocused = state.index === index;\n\n    if (unmountOnBlur && !isFocused) {\n      return null;\n    }\n\n    if (lazy && !loaded.includes(route.key) && !isFocused) {\n      return null;\n    }\n\n    var _descriptor$options$h = descriptor.options.header,\n        header = _descriptor$options$h === void 0 ? function (_ref5) {\n      var layout = _ref5.layout,\n          options = _ref5.options;\n      return React.createElement(Header, _extends({}, options, {\n        layout: layout,\n        title: getHeaderTitle(options, route.name)\n      }));\n    } : _descriptor$options$h;\n    return React.createElement(MaybeScreen, {\n      key: route.key,\n      style: [StyleSheet.absoluteFill, {\n        zIndex: isFocused ? 0 : -1\n      }],\n      visible: isFocused,\n      enabled: detachInactiveScreens\n    }, React.createElement(BottomTabBarHeightContext.Provider, {\n      value: tabBarHeight\n    }, React.createElement(Screen, {\n      focused: isFocused,\n      route: descriptor.route,\n      navigation: descriptor.navigation,\n      headerShown: descriptor.options.headerShown,\n      headerTransparent: descriptor.options.headerTransparent,\n      headerStatusBarHeight: descriptor.options.headerStatusBarHeight,\n      header: header({\n        layout: dimensions,\n        route: descriptor.route,\n        navigation: descriptor.navigation,\n        options: descriptor.options\n      }),\n      style: sceneContainerStyle\n    }, descriptor.render())));\n  })), React.createElement(BottomTabBarHeightCallbackContext.Provider, {\n    value: setTabBarHeight\n  }, renderTabBar()));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden'\n  }\n});","map":{"version":3,"mappings":"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","names":["getHeaderTitle","Header","SafeAreaProviderCompat","Screen","React","SafeAreaInsetsContext","BottomTabBarHeightCallbackContext","BottomTabBarHeightContext","BottomTabBar","getTabBarHeight","MaybeScreen","MaybeScreenContainer","BottomTabView","props","tabBar","state","navigation","descriptors","safeAreaInsets","detachInactiveScreens","Platform","OS","sceneContainerStyle","focusedRouteKey","routes","index","key","useState","loaded","setLoaded","includes","dimensions","initialMetrics","frame","layout","width","height","insets","style","options","tabBarStyle","tabBarHeight","setTabBarHeight","renderTabBar","Consumer","top","right","bottom","left","enabled","hasTwoStates","styles","container","map","route","descriptor","lazy","unmountOnBlur","isFocused","header","title","name","StyleSheet","absoluteFill","zIndex","visible","Provider","value","focused","headerShown","headerTransparent","headerStatusBarHeight","render","create","flex","overflow"],"sources":["BottomTabView.tsx"],"sourcesContent":["import {\n  getHeaderTitle,\n  Header,\n  SafeAreaProviderCompat,\n  Screen,\n} from '@react-navigation/elements';\nimport type {\n  ParamListBase,\n  TabNavigationState,\n} from '@react-navigation/native';\nimport * as React from 'react';\nimport { Platform, StyleSheet } from 'react-native';\nimport { SafeAreaInsetsContext } from 'react-native-safe-area-context';\n\nimport type {\n  BottomTabBarProps,\n  BottomTabDescriptorMap,\n  BottomTabHeaderProps,\n  BottomTabNavigationConfig,\n  BottomTabNavigationHelpers,\n  BottomTabNavigationProp,\n} from '../types';\nimport BottomTabBarHeightCallbackContext from '../utils/BottomTabBarHeightCallbackContext';\nimport BottomTabBarHeightContext from '../utils/BottomTabBarHeightContext';\nimport BottomTabBar, { getTabBarHeight } from './BottomTabBar';\nimport { MaybeScreen, MaybeScreenContainer } from './ScreenFallback';\n\ntype Props = BottomTabNavigationConfig & {\n  state: TabNavigationState<ParamListBase>;\n  navigation: BottomTabNavigationHelpers;\n  descriptors: BottomTabDescriptorMap;\n};\n\nexport default function BottomTabView(props: Props) {\n  const {\n    tabBar = (props: BottomTabBarProps) => <BottomTabBar {...props} />,\n    state,\n    navigation,\n    descriptors,\n    safeAreaInsets,\n    detachInactiveScreens = Platform.OS === 'web' ||\n      Platform.OS === 'android' ||\n      Platform.OS === 'ios',\n    sceneContainerStyle,\n  } = props;\n\n  const focusedRouteKey = state.routes[state.index].key;\n  const [loaded, setLoaded] = React.useState([focusedRouteKey]);\n\n  if (!loaded.includes(focusedRouteKey)) {\n    setLoaded([...loaded, focusedRouteKey]);\n  }\n\n  const dimensions = SafeAreaProviderCompat.initialMetrics.frame;\n  const [tabBarHeight, setTabBarHeight] = React.useState(() =>\n    getTabBarHeight({\n      state,\n      descriptors,\n      dimensions,\n      layout: { width: dimensions.width, height: 0 },\n      insets: {\n        ...SafeAreaProviderCompat.initialMetrics.insets,\n        ...props.safeAreaInsets,\n      },\n      style: descriptors[state.routes[state.index].key].options.tabBarStyle,\n    })\n  );\n\n  const renderTabBar = () => {\n    return (\n      <SafeAreaInsetsContext.Consumer>\n        {(insets) =>\n          tabBar({\n            state: state,\n            descriptors: descriptors,\n            navigation: navigation,\n            insets: {\n              top: safeAreaInsets?.top ?? insets?.top ?? 0,\n              right: safeAreaInsets?.right ?? insets?.right ?? 0,\n              bottom: safeAreaInsets?.bottom ?? insets?.bottom ?? 0,\n              left: safeAreaInsets?.left ?? insets?.left ?? 0,\n            },\n          })\n        }\n      </SafeAreaInsetsContext.Consumer>\n    );\n  };\n\n  const { routes } = state;\n\n  return (\n    <SafeAreaProviderCompat>\n      <MaybeScreenContainer\n        enabled={detachInactiveScreens}\n        hasTwoStates\n        style={styles.container}\n      >\n        {routes.map((route, index) => {\n          const descriptor = descriptors[route.key];\n          const { lazy = true, unmountOnBlur } = descriptor.options;\n          const isFocused = state.index === index;\n\n          if (unmountOnBlur && !isFocused) {\n            return null;\n          }\n\n          if (lazy && !loaded.includes(route.key) && !isFocused) {\n            // Don't render a lazy screen if we've never navigated to it\n            return null;\n          }\n\n          const {\n            header = ({ layout, options }: BottomTabHeaderProps) => (\n              <Header\n                {...options}\n                layout={layout}\n                title={getHeaderTitle(options, route.name)}\n              />\n            ),\n          } = descriptor.options;\n\n          return (\n            <MaybeScreen\n              key={route.key}\n              style={[StyleSheet.absoluteFill, { zIndex: isFocused ? 0 : -1 }]}\n              visible={isFocused}\n              enabled={detachInactiveScreens}\n            >\n              <BottomTabBarHeightContext.Provider value={tabBarHeight}>\n                <Screen\n                  focused={isFocused}\n                  route={descriptor.route}\n                  navigation={descriptor.navigation}\n                  headerShown={descriptor.options.headerShown}\n                  headerTransparent={descriptor.options.headerTransparent}\n                  headerStatusBarHeight={\n                    descriptor.options.headerStatusBarHeight\n                  }\n                  header={header({\n                    layout: dimensions,\n                    route: descriptor.route,\n                    navigation:\n                      descriptor.navigation as BottomTabNavigationProp<ParamListBase>,\n                    options: descriptor.options,\n                  })}\n                  style={sceneContainerStyle}\n                >\n                  {descriptor.render()}\n                </Screen>\n              </BottomTabBarHeightContext.Provider>\n            </MaybeScreen>\n          );\n        })}\n      </MaybeScreenContainer>\n      <BottomTabBarHeightCallbackContext.Provider value={setTabBarHeight}>\n        {renderTabBar()}\n      </BottomTabBarHeightCallbackContext.Provider>\n    </SafeAreaProviderCompat>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}