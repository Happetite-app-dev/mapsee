{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { UnavailabilityError } from 'expo-modules-core';\nimport NotificationScheduler from \"./NotificationScheduler\";\nexport default function cancelScheduledNotificationAsync(_x) {\n  return _cancelScheduledNotificationAsync.apply(this, arguments);\n}\n\nfunction _cancelScheduledNotificationAsync() {\n  _cancelScheduledNotificationAsync = _asyncToGenerator(function* (identifier) {\n    if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n      throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n    }\n\n    return yield NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n  });\n  return _cancelScheduledNotificationAsync.apply(this, arguments);\n}","map":{"version":3,"mappings":";AAAA,SAASA,mBAAT,QAAoC,mBAApC;AAEA,OAAOC,qBAAP;AAEA,wBAA8BC,gCAA9B;EAAA;AAAA;;;wDAAe,WAAgDC,UAAhD,EAAkE;IAC/E,IAAI,CAACF,qBAAqB,CAACC,gCAA3B,EAA6D;MAC3D,MAAM,IAAIF,mBAAJ,CAAwB,eAAxB,EAAyC,kCAAzC,CAAN;IACD;;IAED,aAAaC,qBAAqB,CAACC,gCAAtB,CAAuDC,UAAvD,CAAb;EACD,C","names":["UnavailabilityError","NotificationScheduler","cancelScheduledNotificationAsync","identifier"],"sourceRoot":"","sources":["../src/cancelScheduledNotificationAsync.ts"],"sourcesContent":["import { UnavailabilityError } from 'expo-modules-core';\n\nimport NotificationScheduler from './NotificationScheduler';\n\nexport default async function cancelScheduledNotificationAsync(identifier: string): Promise<void> {\n  if (!NotificationScheduler.cancelScheduledNotificationAsync) {\n    throw new UnavailabilityError('Notifications', 'cancelScheduledNotificationAsync');\n  }\n\n  return await NotificationScheduler.cancelScheduledNotificationAsync(identifier);\n}\n"]},"metadata":{},"sourceType":"module"}