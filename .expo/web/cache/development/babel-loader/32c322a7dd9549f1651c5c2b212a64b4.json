{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"alpha\", \"family\", \"style\", \"theme\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport I18nManager from \"react-native-web/dist/exports/I18nManager\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport color from 'color';\nimport { useInternalTheme } from \"../../../core/theming\";\nimport Text from \"./Text\";\n\nvar StyledText = function StyledText(_ref) {\n  var _theme$colors, _theme$fonts;\n\n  var _ref$alpha = _ref.alpha,\n      alpha = _ref$alpha === void 0 ? 1 : _ref$alpha,\n      family = _ref.family,\n      style = _ref.style,\n      themeOverrides = _ref.theme,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var theme = useInternalTheme(themeOverrides);\n  var textColor = color(theme.isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.text).alpha(alpha).rgb().string();\n  var writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n  return React.createElement(Text, _extends({}, rest, {\n    style: [styles.text, _objectSpread(_objectSpread({\n      color: textColor\n    }, !theme.isV3 && ((_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts[family])), {}, {\n      writingDirection: writingDirection\n    }), style]\n  }));\n};\n\nvar styles = StyleSheet.create({\n  text: {\n    textAlign: 'left'\n  }\n});\nexport default StyledText;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,SAASC,gBAAT;AACA,OAAOC,IAAP;;AASA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAMN;EAAA;;EAAA,iBAALC,IAAK,CALXC,KAKW;EAAA,IALXA,KAKW,2BALH,CAKG;EAAA,IAJXC,MAIW,GAALF,IAAK,CAJXE,MAIW;EAAA,IAHXC,KAGW,GAALH,IAAK,CAHXG,KAGW;EAAA,IAFJC,cAEI,GAALJ,IAAK,CAFXK,KAEW;EAAA,IADRC,IACQ,4BAALN,IAAK;;EACX,IAAMK,KAAK,GAAGR,gBAAgB,CAACO,cAAD,CAA9B;EAEA,IAAMG,SAAS,GAAGX,KAAK,CACrBS,KAAK,CAACG,IAANH,GAAaA,KAAK,CAACI,MAANJ,CAAaK,SAA1BL,GAAmC,iBAAGA,KAAK,CAACI,MAAT,MAAe,IAAf,IAAeE,wBAAf,GAAe,MAAf,GAAGA,cAAcC,IAD/B,CAALhB,CAGfK,KAHeL,CAGTK,KAHSL,EAIfiB,GAJejB,GAKfkB,MALelB,EAAlB;EAMA,IAAMmB,gBAAgB,GAAGC,WAAW,CAACC,YAAZD,GAA2BE,KAA3BF,GAAmC,KAAnCA,GAA2C,KAApE;EAEA,OACErB,oBAACG,IAAD,EAAKqB,aACCb,IADD,EACK;IACRH,KAAK,EAAE,CACLiB,MAAM,CAACR,IADF;MAGHhB,KAAK,EAAEW;IAHJ,GAIC,CAACF,KAAK,CAACG,IAAP,KAAW,gBAAIH,KAAK,CAACgB,KAAV,MAAe,IAAf,IAAeC,uBAAf,GAAe,MAAf,GAAIA,aAAcpB,MAAd,CAAf,CAJD;MAKHa;IALG,IAOLZ,KAPK;EADC,CADL,CAAL,CADF;AAcD,CA/BD;;AAiCA,IAAMiB,MAAM,GAAGG,UAAU,CAACC,MAAXD,CAAkB;EAC/BX,IAAI,EAAE;IACJa,SAAS,EAAE;EADP;AADyB,CAAlBF,CAAf;AAMA,eAAexB,UAAf","names":["React","color","useInternalTheme","Text","StyledText","_ref","alpha","family","style","themeOverrides","theme","rest","textColor","isV3","colors","onSurface","_theme$colors","text","rgb","string","writingDirection","I18nManager","getConstants","isRTL","_extends","styles","fonts","_theme$fonts","StyleSheet","create","textAlign"],"sources":["StyledText.tsx"],"sourcesContent":["import * as React from 'react';\nimport { I18nManager, StyleProp, StyleSheet, TextStyle } from 'react-native';\n\nimport color from 'color';\nimport type { ThemeProp } from 'src/types';\n\nimport { useInternalTheme } from '../../../core/theming';\nimport Text from './Text';\n\ntype Props = React.ComponentProps<typeof Text> & {\n  alpha?: number;\n  family: 'regular' | 'medium' | 'light' | 'thin';\n  style?: StyleProp<TextStyle>;\n  theme?: ThemeProp;\n};\n\nconst StyledText = ({\n  alpha = 1,\n  family,\n  style,\n  theme: themeOverrides,\n  ...rest\n}: Props) => {\n  const theme = useInternalTheme(themeOverrides);\n\n  const textColor = color(\n    theme.isV3 ? theme.colors.onSurface : theme.colors?.text\n  )\n    .alpha(alpha)\n    .rgb()\n    .string();\n  const writingDirection = I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';\n\n  return (\n    <Text\n      {...rest}\n      style={[\n        styles.text,\n        {\n          color: textColor,\n          ...(!theme.isV3 && theme.fonts?.[family]),\n          writingDirection,\n        },\n        style,\n      ]}\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  text: {\n    textAlign: 'left',\n  },\n});\n\nexport default StyledText;\n"]},"metadata":{},"sourceType":"module"}