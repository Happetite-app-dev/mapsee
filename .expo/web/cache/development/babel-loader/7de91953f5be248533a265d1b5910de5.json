{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/get\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _excluded = [\"enabled\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { State } from \"../../State\";\nimport { EventTypes } from \"../interfaces\";\nimport GestureHandler from \"./GestureHandler\";\nimport RotationGestureDetector from \"../detectors/RotationGestureDetector\";\nvar ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\n\nvar RotationGestureHandler = function (_GestureHandler) {\n  _inherits(RotationGestureHandler, _GestureHandler);\n\n  var _super = _createSuper(RotationGestureHandler);\n\n  function RotationGestureHandler() {\n    var _this;\n\n    _classCallCheck(this, RotationGestureHandler);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"rotation\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"velocity\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedAnchorX\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"cachedAnchorY\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationGestureListener\", {\n      onRotationBegin: function onRotationBegin(_detector) {\n        return true;\n      },\n      onRotation: function onRotation(detector, event) {\n        var previousRotation = _this.rotation;\n        _this.rotation += detector.getRotation();\n        var delta = detector.getTimeDelta();\n\n        if (delta > 0) {\n          _this.velocity = (_this.rotation - previousRotation) / delta;\n        }\n\n        if (Math.abs(_this.rotation) >= ROTATION_RECOGNITION_THRESHOLD && _this.currentState === State.BEGAN) {\n          _this.activate(event);\n        }\n\n        return true;\n      },\n      onRotationEnd: function onRotationEnd(_detector, event) {\n        _this.end(event);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"rotationGestureDetector\", new RotationGestureDetector(_this.rotationGestureListener));\n\n    return _this;\n  }\n\n  _createClass(RotationGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n\n      this.setShouldCancelWhenOutside(false);\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n          enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n          props = _objectWithoutProperties(_ref, _excluded);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"updateGestureConfig\", this).call(this, _objectSpread({\n        enabled: enabled\n      }, props));\n\n      this.enabled = enabled;\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent(_event) {\n      return {\n        rotation: this.rotation ? this.rotation : 0,\n        anchorX: this.getAnchorX(),\n        anchorY: this.getAnchorY(),\n        velocity: this.velocity ? this.velocity : 0\n      };\n    }\n  }, {\n    key: \"getAnchorX\",\n    value: function getAnchorX() {\n      var anchorX = this.rotationGestureDetector.getAnchorX();\n      return anchorX ? anchorX : this.cachedAnchorX;\n    }\n  }, {\n    key: \"getAnchorY\",\n    value: function getAnchorY() {\n      var anchorY = this.rotationGestureDetector.getAnchorY();\n      return anchorY ? anchorY : this.cachedAnchorY;\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n\n      this.tracker.addToTracker(event);\n\n      if (this.tracker.getTrackedPointersCount() <= 1) {\n        return;\n      }\n\n      this.tryBegin(event);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      if (this.tracker.getTrackedPointersCount() < 2 || !this.rotationGestureDetector) {\n        return;\n      }\n\n      if (this.getAnchorX()) {\n        this.cachedAnchorX = this.getAnchorX();\n      }\n\n      if (this.getAnchorY()) {\n        this.cachedAnchorY = this.getAnchorY();\n      }\n\n      this.tracker.track(event);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      if (!this.rotationGestureDetector) {\n        this.tracker.resetTracker();\n        return;\n      }\n\n      if (this.tracker.getTrackedPointersCount() > 1) {\n        this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n        this.tracker.removeFromTracker(event.pointerId);\n      } else {\n        this.tracker.removeFromTracker(event.pointerId);\n        this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n        if (this.currentState !== State.ACTIVE) {\n          return;\n        }\n      }\n\n      if (event.eventType !== EventTypes.UP) {\n        return;\n      }\n\n      if (this.currentState === State.ACTIVE) {\n        this.end(event);\n      } else {\n        this.fail(event);\n      }\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      this.end(event);\n      this.reset();\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin(event) {\n      if (this.currentState !== State.UNDETERMINED) {\n        return;\n      }\n\n      this.resetProgress();\n      this.begin(event);\n    }\n  }, {\n    key: \"activate\",\n    value: function activate(event, _force) {\n      if (this.currentState !== State.ACTIVE) {\n        this.resetProgress();\n      }\n\n      _get(_getPrototypeOf(RotationGestureHandler.prototype), \"activate\", this).call(this, event);\n    }\n  }, {\n    key: \"onReset\",\n    value: function onReset() {\n      if (this.currentState === State.ACTIVE) {\n        return;\n      }\n\n      this.rotation = 0;\n      this.velocity = 0;\n    }\n  }]);\n\n  return RotationGestureHandler;\n}(GestureHandler);\n\nexport { RotationGestureHandler as default };","map":{"version":3,"mappings":"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","names":["State","EventTypes","GestureHandler","RotationGestureDetector","ROTATION_RECOGNITION_THRESHOLD","Math","PI","RotationGestureHandler","args","_defineProperty","onRotationBegin","_detector","onRotation","detector","event","previousRotation","rotation","getRotation","delta","getTimeDelta","velocity","abs","currentState","BEGAN","activate","onRotationEnd","end","rotationGestureListener","init","ref","propsRef","setShouldCancelWhenOutside","updateGestureConfig","enabled","props","transformNativeEvent","_event","anchorX","getAnchorX","anchorY","getAnchorY","rotationGestureDetector","cachedAnchorX","cachedAnchorY","onPointerDown","tracker","addToTracker","getTrackedPointersCount","tryBegin","onTouchEvent","onPointerMove","track","onPointerUp","resetTracker","removeFromTracker","pointerId","ACTIVE","eventType","UP","fail","onPointerCancel","reset","UNDETERMINED","resetProgress","begin","_force","onReset"],"sources":["RotationGestureHandler.ts"],"sourcesContent":["import { State } from '../../State';\nimport { AdaptedPointerEvent, EventTypes } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\nimport RotationGestureDetector, {\n  RotationGestureListener,\n} from '../detectors/RotationGestureDetector';\n\nconst ROTATION_RECOGNITION_THRESHOLD = Math.PI / 36;\n\nexport default class RotationGestureHandler extends GestureHandler {\n  private rotation = 0;\n  private velocity = 0;\n\n  private cachedAnchorX = 0;\n  private cachedAnchorY = 0;\n\n  private rotationGestureListener: RotationGestureListener = {\n    onRotationBegin: (_detector: RotationGestureDetector): boolean => true,\n    onRotation: (\n      detector: RotationGestureDetector,\n      event: AdaptedPointerEvent\n    ): boolean => {\n      const previousRotation: number = this.rotation;\n      this.rotation += detector.getRotation();\n\n      const delta = detector.getTimeDelta();\n\n      if (delta > 0) {\n        this.velocity = (this.rotation - previousRotation) / delta;\n      }\n\n      if (\n        Math.abs(this.rotation) >= ROTATION_RECOGNITION_THRESHOLD &&\n        this.currentState === State.BEGAN\n      ) {\n        this.activate(event);\n      }\n\n      return true;\n    },\n    onRotationEnd: (\n      _detector: RotationGestureDetector,\n      event: AdaptedPointerEvent\n    ): void => {\n      this.end(event);\n    },\n  };\n\n  private rotationGestureDetector: RotationGestureDetector = new RotationGestureDetector(\n    this.rotationGestureListener\n  );\n\n  public init(ref: number, propsRef: React.RefObject<unknown>): void {\n    super.init(ref, propsRef);\n\n    this.setShouldCancelWhenOutside(false);\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    this.enabled = enabled;\n  }\n\n  protected transformNativeEvent(_event: AdaptedPointerEvent) {\n    return {\n      rotation: this.rotation ? this.rotation : 0,\n      anchorX: this.getAnchorX(),\n      anchorY: this.getAnchorY(),\n      velocity: this.velocity ? this.velocity : 0,\n    };\n  }\n\n  public getAnchorX(): number {\n    const anchorX = this.rotationGestureDetector.getAnchorX();\n\n    return anchorX ? anchorX : this.cachedAnchorX;\n  }\n\n  public getAnchorY(): number {\n    const anchorY = this.rotationGestureDetector.getAnchorY();\n\n    return anchorY ? anchorY : this.cachedAnchorY;\n  }\n\n  protected onPointerDown(event: AdaptedPointerEvent): void {\n    super.onPointerDown(event);\n\n    this.tracker.addToTracker(event);\n\n    if (this.tracker.getTrackedPointersCount() <= 1) {\n      return;\n    }\n\n    this.tryBegin(event);\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n  }\n\n  protected onPointerMove(event: AdaptedPointerEvent): void {\n    if (\n      this.tracker.getTrackedPointersCount() < 2 ||\n      !this.rotationGestureDetector\n    ) {\n      return;\n    }\n\n    if (this.getAnchorX()) {\n      this.cachedAnchorX = this.getAnchorX();\n    }\n    if (this.getAnchorY()) {\n      this.cachedAnchorY = this.getAnchorY();\n    }\n\n    this.tracker.track(event);\n\n    this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n\n    super.onPointerMove(event);\n  }\n\n  protected onPointerUp(event: AdaptedPointerEvent): void {\n    if (!this.rotationGestureDetector) {\n      this.tracker.resetTracker();\n      return;\n    }\n\n    if (this.tracker.getTrackedPointersCount() > 1) {\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n      this.tracker.removeFromTracker(event.pointerId);\n    } else {\n      this.tracker.removeFromTracker(event.pointerId);\n      this.rotationGestureDetector.onTouchEvent(event, this.tracker);\n      if (this.currentState !== State.ACTIVE) {\n        return;\n      }\n    }\n\n    if (event.eventType !== EventTypes.UP) {\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.end(event);\n    } else {\n      this.fail(event);\n    }\n  }\n\n  protected onPointerCancel(event: AdaptedPointerEvent): void {\n    this.end(event);\n    this.reset();\n  }\n\n  protected tryBegin(event: AdaptedPointerEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.resetProgress();\n\n    this.begin(event);\n  }\n\n  protected activate(event: AdaptedPointerEvent, _force?: boolean): void {\n    if (this.currentState !== State.ACTIVE) {\n      this.resetProgress();\n    }\n\n    super.activate(event);\n  }\n\n  protected onReset(): void {\n    if (this.currentState === State.ACTIVE) {\n      return;\n    }\n\n    this.rotation = 0;\n    this.velocity = 0;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}