{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { set, ref, onValue, push } from \"firebase/database\";\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { database } from \"../../firebase\";\nvar db = database;\nimport AppContext from \"../AppContext\";\nimport AddFolderBottomSheet from \"./AddFolderBottomSheet\";\nimport BottomButton from \"../BottomButton\";\nimport SnackBar from \"../SnackBar\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar toggleAnimation = function toggleAnimation(_ref) {\n  var show = _ref.show,\n      showAnimation = _ref.showAnimation,\n      setAnimationValue = _ref.setAnimationValue;\n  var val = show ? 0 : -1000;\n  Animated.timing(showAnimation, {\n    useNativeDriver: false,\n    toValue: val,\n    duration: 350\n  }).start();\n  setAnimationValue(val);\n};\n\nvar FolderBottomSheet = function FolderBottomSheet(_ref2) {\n  var stackNavigation = _ref2.stackNavigation,\n      show = _ref2.show,\n      _setShow = _ref2.setShow,\n      _setFolderName = _ref2.setFolderName,\n      _setFolderID = _ref2.setFolderID;\n  var myContext = useContext(AppContext);\n  var myUID = myContext.myUID;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      folderIDNameList = _useState2[0],\n      _setFolderIDNameList = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isSelectingFolder = _useState4[0],\n      setIsSelectingFolder = _useState4[1];\n\n  var _useState5 = useState(-1000),\n      _useState6 = _slicedToArray(_useState5, 2),\n      animationValue = _useState6[0],\n      setAnimationValue = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      visible = _useState8[0],\n      setVisible = _useState8[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  var showAnimation = useRef(new Animated.Value(animationValue)).current;\n  useEffect(function () {\n    toggleAnimation({\n      show: show,\n      showAnimation: showAnimation,\n      setAnimationValue: setAnimationValue\n    });\n    setIsSelectingFolder(true);\n  }, [show]);\n  useEffect(function () {\n    onValue(ref(db, \"/users/\" + myUID + \"/folderIDs\"), function (snapshot) {\n      if (snapshot.val() != null) {\n        var folderIDList = Object.keys(snapshot.val());\n\n        _setFolderIDNameList({});\n\n        folderIDList.map(function (folderID) {\n          onValue(ref(db, \"/folders/\" + folderID + \"/folderName/\" + myUID), function (snapshot2) {\n            _setFolderIDNameList(function (prev) {\n              return _objectSpread(_objectSpread({}, prev), {}, _defineProperty({}, folderID, {\n                folderID: folderID,\n                folderName: snapshot2.val()\n              }));\n            });\n          });\n        });\n      }\n    });\n  }, []);\n  return _jsxs(Animated.View, {\n    style: {\n      width: \"100%\",\n      backgroundColor: \"#fff\",\n      borderTopLeftRadius: 30,\n      borderTopRightRadius: 30,\n      padding: 0,\n      position: \"absolute\",\n      zIndex: 3,\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      height: 630,\n      shadowOffset: {\n        width: 0,\n        height: 12\n      },\n      alignSelf: \"center\",\n      shadowOpacity: 0.58,\n      shadowRadius: 16.0,\n      bottom: showAnimation,\n      elevation: 24\n    },\n    children: [isSelectingFolder ? _jsxs(View, {\n      style: {\n        width: \"100%\",\n        height: \"100%\"\n      },\n      children: [_jsx(ScrollView, {\n        showsHorizontalScrollIndicator: false,\n        style: {\n          width: \"100%\",\n          top: 20\n        },\n        children: Object.values(folderIDNameList).map(function (_ref3) {\n          var folderID = _ref3.folderID,\n              folderName = _ref3.folderName;\n          if (folderName != null) return _jsx(View, {\n            style: {\n              alignItems: \"center\",\n              paddingBottom: 10\n            },\n            children: _jsx(TouchableOpacity, {\n              onPress: function onPress() {\n                _setFolderName(folderName);\n\n                _setFolderID(folderID);\n\n                _setShow(false);\n              },\n              style: {\n                width: 350,\n                borderWidth: 1,\n                borderRadius: 8\n              },\n              children: _jsx(View, {\n                style: {\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  height: 40,\n                  marginBottom: 0,\n                  top: 0\n                },\n                children: _jsx(Text, {\n                  style: {\n                    fontSize: 16,\n                    fontWeight: \"bold\"\n                  },\n                  children: folderName\n                })\n              })\n            })\n          }, folderID);\n        })\n      }), _jsx(BottomButton, {\n        onPressFunction: function onPressFunction() {\n          if (Object.values(folderIDNameList).length >= 16) onToggleSnackBar();else setIsSelectingFolder(false);\n        },\n        text: \"\\uC0C8\\uD3F4\\uB354 \\uCD94\\uAC00\",\n        style: {\n          bottom: 40\n        }\n      })]\n    }) : _jsx(AddFolderBottomSheet, {\n      stackNavigation: stackNavigation,\n      setFolderName: function setFolderName(f) {\n        return _setFolderName(f);\n      },\n      setFolderID: function setFolderID(f) {\n        return _setFolderID(f);\n      },\n      setFolderIDNameList: function setFolderIDNameList(f) {\n        return _setFolderIDNameList(f);\n      },\n      setShow: function setShow(s) {\n        return _setShow(s);\n      }\n    }), _jsx(SnackBar, {\n      visible: visible,\n      onDismissSnackBar: onDismissSnackBar,\n      text: \"\\uCD5C\\uB300 16\\uAC1C\\uAE4C\\uC9C0 \\uD3F4\\uB354\\uB97C \\uB9CC\\uB4E4 \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4.\"\n    })]\n  });\n};\n\nexport default FolderBottomSheet;","map":{"version":3,"names":["set","ref","onValue","push","React","useEffect","useRef","useState","useContext","ScrollView","database","db","AppContext","AddFolderBottomSheet","BottomButton","SnackBar","toggleAnimation","show","showAnimation","setAnimationValue","val","Animated","timing","useNativeDriver","toValue","duration","start","FolderBottomSheet","stackNavigation","setShow","setFolderName","setFolderID","myContext","myUID","folderIDNameList","setFolderIDNameList","isSelectingFolder","setIsSelectingFolder","animationValue","visible","setVisible","onToggleSnackBar","onDismissSnackBar","Value","current","snapshot","folderIDList","Object","keys","map","folderID","snapshot2","prev","folderName","width","backgroundColor","borderTopLeftRadius","borderTopRightRadius","padding","position","zIndex","alignItems","justifyContent","height","shadowOffset","alignSelf","shadowOpacity","shadowRadius","bottom","elevation","top","values","paddingBottom","borderWidth","borderRadius","marginBottom","fontSize","fontWeight","length","f","s"],"sources":["/Users/jeongin/mapsee_2/components/FolderBottomSheet/FolderBottomSheet.js"],"sourcesContent":["import { set, ref, onValue, push } from \"firebase/database\";\nimport React, { useEffect, useRef, useState, useContext } from \"react\";\nimport { Animated, Text, View, TouchableOpacity, Button } from \"react-native\";\nimport { ScrollView } from \"react-native-gesture-handler\";\nimport { database } from \"../../firebase\";\nconst db = database;\n\nimport AppContext from \"../AppContext\";\nimport AddFolderBottomSheet from \"./AddFolderBottomSheet\";\nimport BottomButton from \"../BottomButton\";\nimport SnackBar from \"../SnackBar\";\nconst toggleAnimation = ({ show, showAnimation, setAnimationValue }) => {\n  const val = show ? 0 : -1000;\n  Animated.timing(showAnimation, {\n    useNativeDriver: false,\n    toValue: val,\n    duration: 350,\n  }).start();\n  setAnimationValue(val);\n};\nconst FolderBottomSheet = ({\n  stackNavigation,\n  show,\n  setShow,\n  setFolderName,\n  setFolderID,\n}) => {\n  const myContext = useContext(AppContext);\n  const myUID = myContext.myUID;\n\n  const [folderIDNameList, setFolderIDNameList] = useState({}); //{folderID: folderName}가 쌓여있음\n  const [isSelectingFolder, setIsSelectingFolder] = useState(true); //folderlist 창과 폴더 추가창 중 무엇을 띄울지에 대한 bool\n  const [animationValue, setAnimationValue] = useState(-1000);\n  const [visible, setVisible] = useState(false); // Snackbar\n  const onToggleSnackBar = () => setVisible(!visible); // SnackbarButton -> 나중에는 없애기\n  const onDismissSnackBar = () => setVisible(false); // Snackbar\n\n  const showAnimation = useRef(new Animated.Value(animationValue)).current;\n  useEffect(() => {\n    toggleAnimation({ show, showAnimation, setAnimationValue });\n    setIsSelectingFolder(true);\n  }, [show]);\n  useEffect(() => {\n    onValue(ref(db, \"/users/\" + myUID + \"/folderIDs\"), (snapshot) => {\n      if (snapshot.val() != null) {\n        const folderIDList = Object.keys(snapshot.val());\n        setFolderIDNameList({});\n        folderIDList.map((folderID) => {\n          onValue(\n            ref(db, \"/folders/\" + folderID + \"/folderName/\" + myUID),\n            (snapshot2) => {\n              setFolderIDNameList((prev) => ({\n                ...prev,\n                [folderID]: { folderID, folderName: snapshot2.val() },\n              }));\n            }\n          );\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Animated.View\n      style={{\n        width: \"100%\",\n        backgroundColor: \"#fff\",\n        borderTopLeftRadius: 30,\n        borderTopRightRadius: 30,\n        padding: 0,\n        position: \"absolute\",\n        zIndex: 3,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        height: 630,\n        shadowOffset: {\n          width: 0,\n          height: 12,\n        },\n        alignSelf: \"center\",\n        shadowOpacity: 0.58,\n        shadowRadius: 16.0,\n        bottom: showAnimation,\n        elevation: 24,\n      }}\n    >\n      {isSelectingFolder ? (\n        <View style={{ width: \"100%\", height: \"100%\" }}>\n          <ScrollView\n            showsHorizontalScrollIndicator={false}\n            style={{ width: \"100%\", top: 20 }}\n          >\n            {Object.values(folderIDNameList).map(({ folderID, folderName }) => {\n              if (folderName != null)\n                return (\n                  <View\n                    style={{ alignItems: \"center\", paddingBottom: 10 }}\n                    key={folderID}\n                  >\n                    <TouchableOpacity\n                      onPress={() => {\n                        setFolderName(folderName);\n                        setFolderID(folderID);\n                        setShow(false);\n                      }}\n                      style={{\n                        width: 350,\n                        borderWidth: 1,\n                        borderRadius: 8,\n                      }}\n                    >\n                      <View\n                        style={{\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          height: 40,\n                          marginBottom: 0,\n                          top: 0,\n                        }}\n                      >\n                        <Text style={{ fontSize: 16, fontWeight: \"bold\" }}>\n                          {folderName}\n                        </Text>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                );\n            })}\n          </ScrollView>\n          <BottomButton\n            onPressFunction={() => {\n              if (Object.values(folderIDNameList).length >= 16)\n                onToggleSnackBar();\n              else setIsSelectingFolder(false);\n            }}\n            text=\"새폴더 추가\"\n            style={{ bottom: 40 }}\n          />\n        </View>\n      ) : (\n        <AddFolderBottomSheet\n          stackNavigation={stackNavigation}\n          setFolderName={(f) => setFolderName(f)}\n          setFolderID={(f) => setFolderID(f)}\n          setFolderIDNameList={(f) => setFolderIDNameList(f)}\n          setShow={(s) => setShow(s)}\n        />\n      )}\n      <SnackBar\n        visible={visible}\n        onDismissSnackBar={onDismissSnackBar}\n        text=\"최대 16개까지 폴더를 만들 수 있습니다.\"\n      />\n    </Animated.View>\n  );\n};\n\nexport default FolderBottomSheet;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}