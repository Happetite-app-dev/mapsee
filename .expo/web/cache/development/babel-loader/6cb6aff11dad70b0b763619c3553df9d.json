{"ast":null,"code":"import _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar _excluded = [\"onFocus\", \"onBlur\", \"onChangeText\", \"clearButtonMode\", \"InputComp\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, { forwardRef, useMemo, useEffect, useImperativeHandle, useRef, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar defaultStyles = {\n  container: {\n    flex: 1\n  },\n  textInputContainer: {\n    flexDirection: 'row'\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row'\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20\n  },\n  description: {},\n  separator: {\n    height: 0.5,\n    backgroundColor: '#c8c7cc'\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5\n  },\n  powered: {}\n};\nexport var GooglePlacesAutocomplete = forwardRef(function (props, ref) {\n  var _results = [];\n  var _requests = [];\n\n  var hasNavigator = function hasNavigator() {\n    var _navigator;\n\n    if ((_navigator = navigator) != null && _navigator.geolocation) {\n      return true;\n    } else {\n      console.warn('If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR');\n      return false;\n    }\n  };\n\n  var buildRowsFromResults = function buildRowsFromResults(results) {\n    var res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = _toConsumableArray(props.predefinedPlaces.filter(function (place) {\n        return place == null ? void 0 : place.description.length;\n      }));\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true\n        });\n      }\n    }\n\n    res = res.map(function (place) {\n      return _objectSpread(_objectSpread({}, place), {}, {\n        isPredefinedPlace: true\n      });\n    });\n    return [].concat(_toConsumableArray(res), _toConsumableArray(results));\n  };\n\n  var getRequestUrl = function getRequestUrl(requestUrl) {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api'\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  var getRequestHeaders = function getRequestHeaders(requestUrl) {\n    return (requestUrl == null ? void 0 : requestUrl.headers) || {};\n  };\n\n  var setRequestHeaders = function setRequestHeaders(request, headers) {\n    Object.keys(headers).map(function (headerKey) {\n      return request.setRequestHeader(headerKey, headers[headerKey]);\n    });\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateText = _useState2[0],\n      setStateText = _useState2[1];\n\n  var _useState3 = useState(buildRowsFromResults([])),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dataSource = _useState4[0],\n      setDataSource = _useState4[1];\n\n  var _useState5 = useState(props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed),\n      _useState6 = _slicedToArray(_useState5, 2),\n      listViewDisplayed = _useState6[0],\n      setListViewDisplayed = _useState6[1];\n\n  var _useState7 = useState(getRequestUrl(props.requestUrl)),\n      _useState8 = _slicedToArray(_useState7, 1),\n      url = _useState8[0];\n\n  var inputRef = useRef();\n  useEffect(function () {\n    _handleChangeText(stateText);\n\n    return function () {\n      _abortRequests();\n    };\n  }, []);\n  useEffect(function () {\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n  useImperativeHandle(ref, function () {\n    return {\n      setAddressText: function setAddressText(address) {\n        setStateText(address);\n      },\n      getAddressText: function getAddressText() {\n        return stateText;\n      },\n      blur: function blur() {\n        return inputRef.current.blur();\n      },\n      focus: function focus() {\n        return inputRef.current.focus();\n      },\n      isFocused: function isFocused() {\n        return inputRef.current.isFocused();\n      },\n      clear: function clear() {\n        return inputRef.current.clear();\n      },\n      getCurrentLocation: getCurrentLocation\n    };\n  });\n\n  var requestShouldUseWithCredentials = function requestShouldUseWithCredentials() {\n    return url === 'https://maps.googleapis.com/maps/api';\n  };\n\n  var _abortRequests = function _abortRequests() {\n    _requests.map(function (i) {\n      return i.abort();\n    });\n\n    _requests = [];\n  };\n\n  var supportedPlatform = function supportedPlatform() {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn('This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.');\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  var getCurrentLocation = function getCurrentLocation() {\n    var options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000\n      };\n    }\n\n    var getCurrentPosition = navigator.geolocation.getCurrentPosition || navigator.geolocation.default.getCurrentPosition;\n    getCurrentPosition && getCurrentPosition(function (position) {\n      if (props.nearbyPlacesAPI === 'None') {\n        var currentLocation = {\n          description: props.currentLocationLabel,\n          geometry: {\n            location: {\n              lat: position.coords.latitude,\n              lng: position.coords.longitude\n            }\n          }\n        };\n\n        _disableRowLoaders();\n\n        props.onPress(currentLocation, currentLocation);\n      } else {\n        _requestNearby(position.coords.latitude, position.coords.longitude);\n      }\n    }, function (error) {\n      _disableRowLoaders();\n\n      console.error(error.message);\n    }, options);\n  };\n\n  var _onPress = function _onPress(rowData) {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      _enableRowLoader(rowData);\n\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            var details = responseJSON.result;\n\n            _disableRowLoaders();\n\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn('google places autocomplete: ' + responseJSON.status);\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn('google places autocomplete: request could not be completed or has been aborted');\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open('GET', url + \"/place/details/json?\" + Qs.stringify(_objectSpread({\n        key: props.query.key,\n        placeid: rowData.place_id,\n        language: props.query.language\n      }, props.GooglePlacesDetailsQuery)));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n\n      delete rowData.isLoading;\n\n      var predefinedPlace = _getPredefinedPlace(rowData);\n\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  var _enableRowLoader = function _enableRowLoader(rowData) {\n    var rows = buildRowsFromResults(_results);\n\n    for (var i = 0; i < rows.length; i++) {\n      if (rows[i].place_id === rowData.place_id || rows[i].isCurrentLocation === true && rowData.isCurrentLocation === true) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  var _disableRowLoaders = function _disableRowLoaders() {\n    for (var i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n  };\n\n  var _getPredefinedPlace = function _getPredefinedPlace(rowData) {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (var i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  var _filterResultsByTypes = function _filterResultsByTypes(unfilteredResults, types) {\n    if (types.length === 0) return unfilteredResults;\n    var results = [];\n\n    for (var i = 0; i < unfilteredResults.length; i++) {\n      var found = false;\n\n      for (var j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n\n    return results;\n  };\n\n  var _requestNearby = function _requestNearby(latitude, longitude) {\n    _abortRequests();\n\n    if (latitude !== undefined && longitude !== undefined && latitude !== null && longitude !== null) {\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            var results = [];\n\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(responseJSON.results, props.filterReverseGeocodingByTypes);\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n          }\n\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n\n      var requestUrl = '';\n\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        requestUrl = url + \"/geocode/json?\" + Qs.stringify(_objectSpread({\n          latlng: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GoogleReverseGeocodingQuery));\n      } else {\n        requestUrl = url + \"/place/nearbysearch/json?\" + Qs.stringify(_objectSpread({\n          location: latitude + ',' + longitude,\n          key: props.query.key\n        }, props.GooglePlacesSearchQuery));\n      }\n\n      request.open('GET', requestUrl);\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  var _request = function _request(text) {\n    _abortRequests();\n\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      var request = new XMLHttpRequest();\n\n      _requests.push(request);\n\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n\n      request.onreadystatechange = function () {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          var responseJSON = JSON.parse(request.responseText);\n\n          if (typeof responseJSON.predictions !== 'undefined') {\n            var results = props.nearbyPlacesAPI === 'GoogleReverseGeocoding' ? _filterResultsByTypes(responseJSON.predictions, props.filterReverseGeocodingByTypes) : responseJSON.predictions;\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n          }\n\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail) console.warn('google places autocomplete: ' + responseJSON.error_message);else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {}\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open('GET', url + \"/place/autocomplete/json?input=\" + encodeURIComponent(text) + '&' + Qs.stringify(props.query));\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  var debounceData = useMemo(function () {\n    return debounce(_request, props.debounce);\n  }, [props.query]);\n\n  var _onChangeText = function _onChangeText(text) {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  var _handleChangeText = function _handleChangeText(text) {\n    var _props$textInputProps;\n\n    _onChangeText(text);\n\n    props.getSearchWord(text);\n    var onChangeText = props == null ? void 0 : (_props$textInputProps = props.textInputProps) == null ? void 0 : _props$textInputProps.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  var _getRowLoader = function _getRowLoader() {\n    return _jsx(ActivityIndicator, {\n      animating: true,\n      size: \"small\"\n    });\n  };\n\n  var _renderRowData = function _renderRowData(rowData, index) {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return _jsx(Text, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.description, props.styles.description, rowData.isPredefinedPlace ? props.styles.predefinedPlacesDescription : {}],\n      numberOfLines: props.numberOfLines,\n      children: _renderDescription(rowData)\n    });\n  };\n\n  var _renderDescription = function _renderDescription(rowData) {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  var _renderLoader = function _renderLoader(rowData) {\n    if (rowData.isLoading === true) {\n      return _jsx(View, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.loader, props.styles.loader],\n        children: _getRowLoader()\n      });\n    }\n\n    return null;\n  };\n\n  var _renderRow = function _renderRow() {\n    var rowData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var index = arguments.length > 1 ? arguments[1] : undefined;\n    return _jsx(ScrollView, {\n      contentContainerStyle: props.isRowScrollable ? {\n        minWidth: '100%'\n      } : {\n        width: '100%'\n      },\n      scrollEnabled: props.isRowScrollable,\n      keyboardShouldPersistTaps: props.keyboardShouldPersistTaps,\n      horizontal: true,\n      showsHorizontalScrollIndicator: false,\n      showsVerticalScrollIndicator: false,\n      children: _jsx(TouchableHighlight, {\n        style: props.isRowScrollable ? {\n          minWidth: '100%'\n        } : {\n          width: '100%'\n        },\n        onPress: function onPress() {\n          return _onPress(rowData);\n        },\n        underlayColor: props.listUnderlayColor || '#c8c7cc',\n        children: _jsxs(View, {\n          style: [props.suppressDefaultStyles ? {} : defaultStyles.row, props.styles.row, rowData.isPredefinedPlace ? props.styles.specialItemRow : {}],\n          children: [_renderLoader(rowData), _renderRowData(rowData, index)]\n        })\n      })\n    });\n  };\n\n  var _renderSeparator = function _renderSeparator(sectionID, rowID) {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.separator, props.styles.separator]\n    }, sectionID + \"-\" + rowID);\n  };\n\n  var isNewFocusInAutocompleteResultList = function isNewFocusInAutocompleteResultList(_ref) {\n    var relatedTarget = _ref.relatedTarget,\n        currentTarget = _ref.currentTarget;\n    if (!relatedTarget) return false;\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  var _onBlur = function _onBlur(e) {\n    var _inputRef$current;\n\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n\n    inputRef == null ? void 0 : (_inputRef$current = inputRef.current) == null ? void 0 : _inputRef$current.blur();\n  };\n\n  var _onFocus = function _onFocus() {\n    return setListViewDisplayed(true);\n  };\n\n  var _renderPoweredLogo = function _renderPoweredLogo() {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return _jsx(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.row, defaultStyles.poweredContainer, props.styles.poweredContainer],\n      children: _jsx(Image, {\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.powered, props.styles.powered],\n        resizeMode: \"contain\",\n        source: require(\"./images/powered_by_google_on_white.png\")\n      })\n    });\n  };\n\n  var _shouldShowPoweredLogo = function _shouldShowPoweredLogo() {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (var i = 0; i < dataSource.length; i++) {\n      var row = dataSource[i];\n\n      if (!row.hasOwnProperty('isCurrentLocation') && !row.hasOwnProperty('isPredefinedPlace')) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  var _renderLeftButton = function _renderLeftButton() {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  var _renderRightButton = function _renderRightButton() {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  var _getFlatList = function _getFlatList() {\n    var keyGenerator = function keyGenerator() {\n      return Math.random().toString(36).substr(2, 10);\n    };\n\n    if (supportedPlatform() && (stateText !== '' || props.predefinedPlaces.length > 0 || props.currentLocation === true) && listViewDisplayed === true) {\n      return _jsx(FlatList, _objectSpread({\n        nativeID: \"result-list-id\",\n        scrollEnabled: !props.disableScroll,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.listView, props.styles.listView],\n        data: dataSource,\n        keyExtractor: keyGenerator,\n        extraData: [dataSource, props],\n        ItemSeparatorComponent: _renderSeparator,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item,\n              index = _ref2.index;\n          return _renderRow(item, index);\n        },\n        ListEmptyComponent: stateText.length > props.minLength && props.listEmptyComponent,\n        ListHeaderComponent: props.renderHeaderComponent && props.renderHeaderComponent(stateText),\n        ListFooterComponent: _renderPoweredLogo\n      }, props));\n    }\n\n    return null;\n  };\n\n  var _props$textInputProps2 = props.textInputProps,\n      onFocus = _props$textInputProps2.onFocus,\n      onBlur = _props$textInputProps2.onBlur,\n      onChangeText = _props$textInputProps2.onChangeText,\n      clearButtonMode = _props$textInputProps2.clearButtonMode,\n      InputComp = _props$textInputProps2.InputComp,\n      userProps = _objectWithoutProperties(_props$textInputProps2, _excluded);\n\n  var TextInputComp = InputComp || TextInput;\n  return _jsxs(View, {\n    style: [props.suppressDefaultStyles ? {} : defaultStyles.container, props.styles.container],\n    pointerEvents: \"box-none\",\n    children: [!props.textInputHide && _jsxs(View, {\n      style: [props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer, props.styles.textInputContainer],\n      children: [_renderLeftButton(), _jsx(TextInputComp, _objectSpread({\n        ref: inputRef,\n        style: [props.suppressDefaultStyles ? {} : defaultStyles.textInput, props.styles.textInput],\n        value: stateText,\n        placeholder: props.placeholder,\n        onFocus: onFocus ? function () {\n          _onFocus();\n\n          onFocus();\n        } : _onFocus,\n        onBlur: onBlur ? function (e) {\n          _onBlur(e);\n\n          onBlur();\n        } : _onBlur,\n        clearButtonMode: clearButtonMode || 'while-editing',\n        onChangeText: _handleChangeText,\n        onSubmitEditing: function onSubmitEditing(e) {\n          console.log('submit');\n          props.getResultArray(dataSource);\n        }\n      }, userProps)), _renderRightButton()]\n    }), props.inbetweenCompo, _getFlatList(), props.children]\n  });\n});\nGooglePlacesAutocomplete.propTypes = {\n  getResultArray: PropTypes.func,\n  getSearchWord: PropTypes.func,\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  listViewDisplayed: PropTypes.oneOfType([PropTypes.bool, PropTypes.oneOf(['auto'])]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string)\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number\n};\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant'\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: function onFail() {},\n  onNotFound: function onNotFound() {},\n  onPress: function onPress() {},\n  onTimeout: function onTimeout() {\n    return console.warn('google places autocomplete: request timeout');\n  },\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode'\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000\n};\nexport default {\n  GooglePlacesAutocomplete: GooglePlacesAutocomplete\n};","map":{"version":3,"names":["debounce","PropTypes","Qs","React","forwardRef","useMemo","useEffect","useImperativeHandle","useRef","useState","defaultStyles","container","flex","textInputContainer","flexDirection","textInput","backgroundColor","height","borderRadius","paddingVertical","paddingHorizontal","fontSize","marginBottom","listView","row","padding","minHeight","loader","justifyContent","description","separator","poweredContainer","alignItems","borderBottomRightRadius","borderBottomLeftRadius","borderColor","borderTopWidth","powered","GooglePlacesAutocomplete","props","ref","_results","_requests","hasNavigator","navigator","geolocation","console","warn","buildRowsFromResults","results","res","length","predefinedPlacesAlwaysVisible","predefinedPlaces","filter","place","currentLocation","unshift","currentLocationLabel","isCurrentLocation","map","isPredefinedPlace","getRequestUrl","requestUrl","useOnPlatform","url","Platform","select","web","default","getRequestHeaders","headers","setRequestHeaders","request","Object","keys","headerKey","setRequestHeader","stateText","setStateText","dataSource","setDataSource","listViewDisplayed","setListViewDisplayed","inputRef","_handleChangeText","_abortRequests","setAddressText","address","getAddressText","blur","current","focus","isFocused","clear","getCurrentLocation","requestShouldUseWithCredentials","i","abort","supportedPlatform","OS","options","enableHighAccuracy","timeout","maximumAge","enableHighAccuracyLocation","getCurrentPosition","position","nearbyPlacesAPI","geometry","location","lat","coords","latitude","lng","longitude","_disableRowLoaders","onPress","_requestNearby","error","message","_onPress","rowData","fetchDetails","isLoading","Keyboard","dismiss","_enableRowLoader","XMLHttpRequest","push","ontimeout","onTimeout","onreadystatechange","readyState","status","responseJSON","JSON","parse","responseText","details","result","_onBlur","_renderDescription","autoFillOnNotFound","onNotFound","onFail","open","stringify","key","query","placeid","place_id","language","GooglePlacesDetailsQuery","withCredentials","send","predefinedPlace","_getPredefinedPlace","rows","_filterResultsByTypes","unfilteredResults","types","found","j","indexOf","undefined","filterReverseGeocodingByTypes","error_message","latlng","GoogleReverseGeocodingQuery","GooglePlacesSearchQuery","_request","text","minLength","predictions","preProcess","encodeURIComponent","debounceData","_onChangeText","getSearchWord","onChangeText","textInputProps","_getRowLoader","_renderRowData","index","renderRow","suppressDefaultStyles","styles","predefinedPlacesDescription","numberOfLines","renderDescription","formatted_address","name","_renderLoader","_renderRow","isRowScrollable","minWidth","width","keyboardShouldPersistTaps","listUnderlayColor","specialItemRow","_renderSeparator","sectionID","rowID","isNewFocusInAutocompleteResultList","relatedTarget","currentTarget","node","parentNode","id","e","keepResultsAfterBlur","_onFocus","_renderPoweredLogo","_shouldShowPoweredLogo","require","enablePoweredByContainer","hasOwnProperty","_renderLeftButton","renderLeftButton","_renderRightButton","renderRightButton","_getFlatList","keyGenerator","Math","random","toString","substr","disableScroll","item","listEmptyComponent","renderHeaderComponent","onFocus","onBlur","clearButtonMode","InputComp","userProps","TextInputComp","TextInput","textInputHide","placeholder","log","getResultArray","inbetweenCompo","children","propTypes","func","bool","string","number","array","object","oneOf","oneOfType","shape","objectOf","defaultProps","rankby","type"],"sources":["/Users/jeongin/mapsee_2/node_modules/react-native-google-places-autocomplete/GooglePlacesAutocomplete.js"],"sourcesContent":["/* eslint-disable react-native/no-inline-styles */\nimport debounce from 'lodash.debounce';\nimport PropTypes from 'prop-types';\nimport Qs from 'qs';\nimport React, {\n  forwardRef,\n  useMemo,\n  useEffect,\n  useImperativeHandle,\n  useRef,\n  useState,\n} from 'react';\nimport {\n  ActivityIndicator,\n  FlatList,\n  Image,\n  Keyboard,\n  Platform,\n  ScrollView,\n  Text,\n  TextInput,\n  TouchableHighlight,\n  View,\n} from 'react-native';\n\nconst defaultStyles = {\n  container: {\n    flex: 1,\n  },\n  textInputContainer: {\n    flexDirection: 'row',\n  },\n  textInput: {\n    backgroundColor: '#FFFFFF',\n    height: 44,\n    borderRadius: 5,\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    fontSize: 15,\n    flex: 1,\n    marginBottom: 5,\n  },\n  listView: {},\n  row: {\n    backgroundColor: '#FFFFFF',\n    padding: 13,\n    minHeight: 44,\n    flexDirection: 'row',\n  },\n  loader: {\n    flexDirection: 'row',\n    justifyContent: 'flex-end',\n    height: 20,\n  },\n  description: {},\n  separator: {\n    height: 0.5,\n    backgroundColor: '#c8c7cc',\n  },\n  poweredContainer: {\n    justifyContent: 'flex-end',\n    alignItems: 'center',\n    borderBottomRightRadius: 5,\n    borderBottomLeftRadius: 5,\n    borderColor: '#c8c7cc',\n    borderTopWidth: 0.5,\n  },\n  powered: {},\n};\n\nexport const GooglePlacesAutocomplete = forwardRef((props, ref) => {\n  let _results = [];\n  let _requests = [];\n\n  const hasNavigator = () => {\n    if (navigator?.geolocation) {\n      return true;\n    } else {\n      console.warn(\n        'If you are using React Native v0.60.0+ you must follow these instructions to enable currentLocation: https://git.io/Jf4AR',\n      );\n      return false;\n    }\n  };\n\n  const buildRowsFromResults = (results) => {\n    let res = [];\n\n    if (results.length === 0 || props.predefinedPlacesAlwaysVisible === true) {\n      res = [\n        ...props.predefinedPlaces.filter((place) => place?.description.length),\n      ];\n\n      if (props.currentLocation === true && hasNavigator()) {\n        res.unshift({\n          description: props.currentLocationLabel,\n          isCurrentLocation: true,\n        });\n      }\n    }\n\n    res = res.map((place) => ({\n      ...place,\n      isPredefinedPlace: true,\n    }));\n\n    return [...res, ...results];\n  };\n\n  const getRequestUrl = (requestUrl) => {\n    if (requestUrl) {\n      if (requestUrl.useOnPlatform === 'all') {\n        return requestUrl.url;\n      }\n      if (requestUrl.useOnPlatform === 'web') {\n        return Platform.select({\n          web: requestUrl.url,\n          default: 'https://maps.googleapis.com/maps/api',\n        });\n      }\n    } else {\n      return 'https://maps.googleapis.com/maps/api';\n    }\n  };\n\n  const getRequestHeaders = (requestUrl) => {\n    return requestUrl?.headers || {};\n  };\n\n  const setRequestHeaders = (request, headers) => {\n    Object.keys(headers).map((headerKey) =>\n      request.setRequestHeader(headerKey, headers[headerKey]),\n    );\n  };\n\n  const [stateText, setStateText] = useState('');\n  const [dataSource, setDataSource] = useState(buildRowsFromResults([]));\n  const [listViewDisplayed, setListViewDisplayed] = useState(\n    props.listViewDisplayed === 'auto' ? false : props.listViewDisplayed,\n  );\n  const [url] = useState(getRequestUrl(props.requestUrl));\n\n  const inputRef = useRef();\n\n  useEffect(() => {\n    // This will load the default value's search results after the view has\n    // been rendered\n    _handleChangeText(stateText);\n    return () => {\n      _abortRequests();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(() => {\n    // Update dataSource if props.predefinedPlaces changed\n    setDataSource(buildRowsFromResults([]));\n  }, [props.predefinedPlaces]);\n\n  useImperativeHandle(ref, () => ({\n    setAddressText: (address) => {\n      setStateText(address);\n    },\n    getAddressText: () => stateText,\n    blur: () => inputRef.current.blur(),\n    focus: () => inputRef.current.focus(),\n    isFocused: () => inputRef.current.isFocused(),\n    clear: () => inputRef.current.clear(),\n    getCurrentLocation,\n  }));\n\n  const requestShouldUseWithCredentials = () =>\n    url === 'https://maps.googleapis.com/maps/api';\n\n  const _abortRequests = () => {\n    _requests.map((i) => i.abort());\n    _requests = [];\n  };\n\n  const supportedPlatform = () => {\n    if (Platform.OS === 'web' && !props.requestUrl) {\n      console.warn(\n        'This library cannot be used for the web unless you specify the requestUrl prop. See https://git.io/JflFv for more for details.',\n      );\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const getCurrentLocation = () => {\n    let options = {\n      enableHighAccuracy: false,\n      timeout: 20000,\n      maximumAge: 1000,\n    };\n\n    if (props.enableHighAccuracyLocation && Platform.OS === 'android') {\n      options = {\n        enableHighAccuracy: true,\n        timeout: 20000,\n      };\n    }\n    const getCurrentPosition =\n      navigator.geolocation.getCurrentPosition ||\n      navigator.geolocation.default.getCurrentPosition;\n\n    getCurrentPosition &&\n      getCurrentPosition(\n        (position) => {\n          if (props.nearbyPlacesAPI === 'None') {\n            let currentLocation = {\n              description: props.currentLocationLabel,\n              geometry: {\n                location: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude,\n                },\n              },\n            };\n\n            _disableRowLoaders();\n            props.onPress(currentLocation, currentLocation);\n          } else {\n            _requestNearby(position.coords.latitude, position.coords.longitude);\n          }\n        },\n        (error) => {\n          _disableRowLoaders();\n          console.error(error.message);\n        },\n        options,\n      );\n  };\n\n  const _onPress = (rowData) => {\n    if (rowData.isPredefinedPlace !== true && props.fetchDetails === true) {\n      if (rowData.isLoading === true) {\n        // already requesting\n        return;\n      }\n\n      Keyboard.dismiss();\n\n      _abortRequests();\n\n      // display loader\n      _enableRowLoader(rowData);\n\n      // fetch details\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) return;\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          if (responseJSON.status === 'OK') {\n            // if (_isMounted === true) {\n            const details = responseJSON.result;\n            _disableRowLoaders();\n            _onBlur();\n\n            setStateText(_renderDescription(rowData));\n\n            delete rowData.isLoading;\n            props.onPress(rowData, details);\n            // }\n          } else {\n            _disableRowLoaders();\n\n            if (props.autoFillOnNotFound) {\n              setStateText(_renderDescription(rowData));\n              delete rowData.isLoading;\n            }\n\n            if (!props.onNotFound) {\n              console.warn(\n                'google places autocomplete: ' + responseJSON.status,\n              );\n            } else {\n              props.onNotFound(responseJSON);\n            }\n          }\n        } else {\n          _disableRowLoaders();\n\n          if (!props.onFail) {\n            console.warn(\n              'google places autocomplete: request could not be completed or has been aborted',\n            );\n          } else {\n            props.onFail('request could not be completed or has been aborted');\n          }\n        }\n      };\n\n      request.open(\n        'GET',\n        `${url}/place/details/json?` +\n          Qs.stringify({\n            key: props.query.key,\n            placeid: rowData.place_id,\n            language: props.query.language,\n            ...props.GooglePlacesDetailsQuery,\n          }),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else if (rowData.isCurrentLocation === true) {\n      // display loader\n      _enableRowLoader(rowData);\n\n      setStateText(_renderDescription(rowData));\n\n      delete rowData.isLoading;\n      getCurrentLocation();\n    } else {\n      setStateText(_renderDescription(rowData));\n\n      _onBlur();\n      delete rowData.isLoading;\n      let predefinedPlace = _getPredefinedPlace(rowData);\n\n      // sending predefinedPlace as details for predefined places\n      props.onPress(predefinedPlace, predefinedPlace);\n    }\n  };\n\n  const _enableRowLoader = (rowData) => {\n    let rows = buildRowsFromResults(_results);\n    for (let i = 0; i < rows.length; i++) {\n      if (\n        rows[i].place_id === rowData.place_id ||\n        (rows[i].isCurrentLocation === true &&\n          rowData.isCurrentLocation === true)\n      ) {\n        rows[i].isLoading = true;\n        setDataSource(rows);\n        break;\n      }\n    }\n  };\n\n  const _disableRowLoaders = () => {\n    // if (_isMounted === true) {\n    for (let i = 0; i < _results.length; i++) {\n      if (_results[i].isLoading === true) {\n        _results[i].isLoading = false;\n      }\n    }\n\n    setDataSource(buildRowsFromResults(_results));\n    // }\n  };\n\n  const _getPredefinedPlace = (rowData) => {\n    if (rowData.isPredefinedPlace !== true) {\n      return rowData;\n    }\n\n    for (let i = 0; i < props.predefinedPlaces.length; i++) {\n      if (props.predefinedPlaces[i].description === rowData.description) {\n        return props.predefinedPlaces[i];\n      }\n    }\n\n    return rowData;\n  };\n\n  const _filterResultsByTypes = (unfilteredResults, types) => {\n    if (types.length === 0) return unfilteredResults;\n\n    const results = [];\n    for (let i = 0; i < unfilteredResults.length; i++) {\n      let found = false;\n\n      for (let j = 0; j < types.length; j++) {\n        if (unfilteredResults[i].types.indexOf(types[j]) !== -1) {\n          found = true;\n          break;\n        }\n      }\n\n      if (found === true) {\n        results.push(unfilteredResults[i]);\n      }\n    }\n    return results;\n  };\n\n  const _requestNearby = (latitude, longitude) => {\n    _abortRequests();\n\n    if (\n      latitude !== undefined &&\n      longitude !== undefined &&\n      latitude !== null &&\n      longitude !== null\n    ) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n\n          _disableRowLoaders();\n\n          if (typeof responseJSON.results !== 'undefined') {\n            // if (_isMounted === true) {\n            var results = [];\n            if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n              results = _filterResultsByTypes(\n                responseJSON.results,\n                props.filterReverseGeocodingByTypes,\n              );\n            } else {\n              results = responseJSON.results;\n            }\n\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      let requestUrl = '';\n      if (props.nearbyPlacesAPI === 'GoogleReverseGeocoding') {\n        // your key must be allowed to use Google Maps Geocoding API\n        requestUrl =\n          `${url}/geocode/json?` +\n          Qs.stringify({\n            latlng: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GoogleReverseGeocodingQuery,\n          });\n      } else {\n        requestUrl =\n          `${url}/place/nearbysearch/json?` +\n          Qs.stringify({\n            location: latitude + ',' + longitude,\n            key: props.query.key,\n            ...props.GooglePlacesSearchQuery,\n          });\n      }\n\n      request.open('GET', requestUrl);\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  const _request = (text) => {\n    _abortRequests();\n    if (supportedPlatform() && text && text.length >= props.minLength) {\n      const request = new XMLHttpRequest();\n      _requests.push(request);\n      request.timeout = props.timeout;\n      request.ontimeout = props.onTimeout;\n      request.onreadystatechange = () => {\n        if (request.readyState !== 4) {\n          return;\n        }\n\n        if (request.status === 200) {\n          const responseJSON = JSON.parse(request.responseText);\n          if (typeof responseJSON.predictions !== 'undefined') {\n            // if (_isMounted === true) {\n            const results =\n              props.nearbyPlacesAPI === 'GoogleReverseGeocoding'\n                ? _filterResultsByTypes(\n                    responseJSON.predictions,\n                    props.filterReverseGeocodingByTypes,\n                  )\n                : responseJSON.predictions;\n\n            _results = results;\n            setDataSource(buildRowsFromResults(results));\n            // }\n          }\n          if (typeof responseJSON.error_message !== 'undefined') {\n            if (!props.onFail)\n              console.warn(\n                'google places autocomplete: ' + responseJSON.error_message,\n              );\n            else {\n              props.onFail(responseJSON.error_message);\n            }\n          }\n        } else {\n          // console.warn(\"google places autocomplete: request could not be completed or has been aborted\");\n        }\n      };\n\n      if (props.preProcess) {\n        setStateText(props.preProcess(text));\n      }\n\n      request.open(\n        'GET',\n        `${url}/place/autocomplete/json?input=` +\n          encodeURIComponent(text) +\n          '&' +\n          Qs.stringify(props.query),\n      );\n\n      request.withCredentials = requestShouldUseWithCredentials();\n      setRequestHeaders(request, getRequestHeaders(props.requestUrl));\n\n      request.send();\n    } else {\n      _results = [];\n      setDataSource(buildRowsFromResults([]));\n    }\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const debounceData = useMemo(() => debounce(_request, props.debounce), [\n    props.query,\n  ]);\n\n  const _onChangeText = (text) => {\n    setStateText(text);\n    debounceData(text);\n  };\n\n  const _handleChangeText = (text) => {\n    _onChangeText(text);\n    props.getSearchWord(text);\n\n    const onChangeText = props?.textInputProps?.onChangeText;\n\n    if (onChangeText) {\n      onChangeText(text);\n    }\n  };\n\n  const _getRowLoader = () => {\n    return <ActivityIndicator animating={true} size='small' />;\n  };\n\n  const _renderRowData = (rowData, index) => {\n    if (props.renderRow) {\n      return props.renderRow(rowData, index);\n    }\n\n    return (\n      <Text\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.description,\n          props.styles.description,\n          rowData.isPredefinedPlace\n            ? props.styles.predefinedPlacesDescription\n            : {},\n        ]}\n        numberOfLines={props.numberOfLines}\n      >\n        {_renderDescription(rowData)}\n      </Text>\n    );\n  };\n\n  const _renderDescription = (rowData) => {\n    if (props.renderDescription) {\n      return props.renderDescription(rowData);\n    }\n\n    return rowData.description || rowData.formatted_address || rowData.name;\n  };\n\n  const _renderLoader = (rowData) => {\n    if (rowData.isLoading === true) {\n      return (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.loader,\n            props.styles.loader,\n          ]}\n        >\n          {_getRowLoader()}\n        </View>\n      );\n    }\n\n    return null;\n  };\n\n  const _renderRow = (rowData = {}, index) => {\n    return (\n      <ScrollView\n        contentContainerStyle={\n          props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n        }\n        scrollEnabled={props.isRowScrollable}\n        keyboardShouldPersistTaps={props.keyboardShouldPersistTaps}\n        horizontal={true}\n        showsHorizontalScrollIndicator={false}\n        showsVerticalScrollIndicator={false}\n      >\n        <TouchableHighlight\n          style={\n            props.isRowScrollable ? { minWidth: '100%' } : { width: '100%' }\n          }\n          onPress={() => _onPress(rowData)}\n          underlayColor={props.listUnderlayColor || '#c8c7cc'}\n        >\n          <View\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.row,\n              props.styles.row,\n              rowData.isPredefinedPlace ? props.styles.specialItemRow : {},\n            ]}\n          >\n            {_renderLoader(rowData)}\n            {_renderRowData(rowData, index)}\n          </View>\n        </TouchableHighlight>\n      </ScrollView>\n    );\n  };\n\n  const _renderSeparator = (sectionID, rowID) => {\n    if (rowID === dataSource.length - 1) {\n      return null;\n    }\n\n    return (\n      <View\n        key={`${sectionID}-${rowID}`}\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.separator,\n          props.styles.separator,\n        ]}\n      />\n    );\n  };\n\n  const isNewFocusInAutocompleteResultList = ({\n    relatedTarget,\n    currentTarget,\n  }) => {\n    if (!relatedTarget) return false;\n\n    var node = relatedTarget.parentNode;\n\n    while (node) {\n      if (node.id === 'result-list-id') return true;\n      node = node.parentNode;\n    }\n\n    return false;\n  };\n\n  const _onBlur = (e) => {\n    if (e && isNewFocusInAutocompleteResultList(e)) return;\n\n    if (!props.keepResultsAfterBlur) {\n      setListViewDisplayed(false);\n    }\n    inputRef?.current?.blur();\n  };\n\n  const _onFocus = () => setListViewDisplayed(true);\n\n  const _renderPoweredLogo = () => {\n    if (!_shouldShowPoweredLogo()) {\n      return null;\n    }\n\n    return (\n      <View\n        style={[\n          props.suppressDefaultStyles ? {} : defaultStyles.row,\n          defaultStyles.poweredContainer,\n          props.styles.poweredContainer,\n        ]}\n      >\n        <Image\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.powered,\n            props.styles.powered,\n          ]}\n          resizeMode='contain'\n          source={require('./images/powered_by_google_on_white.png')}\n        />\n      </View>\n    );\n  };\n\n  const _shouldShowPoweredLogo = () => {\n    if (!props.enablePoweredByContainer || dataSource.length === 0) {\n      return false;\n    }\n\n    for (let i = 0; i < dataSource.length; i++) {\n      let row = dataSource[i];\n\n      if (\n        !row.hasOwnProperty('isCurrentLocation') &&\n        !row.hasOwnProperty('isPredefinedPlace')\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  const _renderLeftButton = () => {\n    if (props.renderLeftButton) {\n      return props.renderLeftButton();\n    }\n  };\n\n  const _renderRightButton = () => {\n    if (props.renderRightButton) {\n      return props.renderRightButton();\n    }\n  };\n\n  const _getFlatList = () => {\n    const keyGenerator = () => Math.random().toString(36).substr(2, 10);\n\n    if (\n      supportedPlatform() &&\n      (stateText !== '' ||\n        props.predefinedPlaces.length > 0 ||\n        props.currentLocation === true) &&\n      listViewDisplayed === true\n    ) {\n      return (\n        <FlatList\n          nativeID='result-list-id'\n          scrollEnabled={!props.disableScroll}\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.listView,\n            props.styles.listView,\n          ]}\n          data={dataSource}\n          keyExtractor={keyGenerator}\n          extraData={[dataSource, props]}\n          ItemSeparatorComponent={_renderSeparator}\n          renderItem={({ item, index }) => _renderRow(item, index)}\n          ListEmptyComponent={\n            stateText.length > props.minLength && props.listEmptyComponent\n          }\n          ListHeaderComponent={\n            props.renderHeaderComponent &&\n            props.renderHeaderComponent(stateText)\n          }\n          ListFooterComponent={_renderPoweredLogo}\n          {...props}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  let {\n    onFocus,\n    onBlur,\n    onChangeText, // destructuring here stops this being set after onChangeText={_handleChangeText}\n    clearButtonMode,\n    InputComp,\n    ...userProps\n  } = props.textInputProps;\n  const TextInputComp = InputComp || TextInput;\n  return (\n    <View\n      style={[\n        props.suppressDefaultStyles ? {} : defaultStyles.container,\n        props.styles.container,\n      ]}\n      pointerEvents='box-none'\n    >\n      {!props.textInputHide && (\n        <View\n          style={[\n            props.suppressDefaultStyles ? {} : defaultStyles.textInputContainer,\n            props.styles.textInputContainer,\n          ]}\n        >\n          {_renderLeftButton()}\n          <TextInputComp\n            ref={inputRef}\n            style={[\n              props.suppressDefaultStyles ? {} : defaultStyles.textInput,\n              props.styles.textInput,\n            ]}\n            value={stateText}\n            placeholder={props.placeholder}\n            onFocus={\n              onFocus\n                ? () => {\n                    _onFocus();\n                    onFocus();\n                  }\n                : _onFocus\n            }\n            onBlur={\n              onBlur\n                ? (e) => {\n                    _onBlur(e);\n                    onBlur();\n                  }\n                : _onBlur\n            }\n            clearButtonMode={clearButtonMode || 'while-editing'}\n            onChangeText={_handleChangeText}\n           // multiline= {true}\n            onSubmitEditing={(e) => {\n              console.log('submit');\n              props.getResultArray(dataSource);}}\n            {...userProps}\n          />\n          {_renderRightButton()}\n        </View>\n      )}\n      {props.inbetweenCompo}\n      {_getFlatList()}\n      {props.children}\n    </View>\n  );\n});\n\nGooglePlacesAutocomplete.propTypes = {\n  //ADDED by Jeongin\n  getResultArray: PropTypes.func,\n  getSearchWord: PropTypes.func,\n  //\n  autoFillOnNotFound: PropTypes.bool,\n  currentLocation: PropTypes.bool,\n  currentLocationLabel: PropTypes.string,\n  debounce: PropTypes.number,\n  disableScroll: PropTypes.bool,\n  enableHighAccuracyLocation: PropTypes.bool,\n  enablePoweredByContainer: PropTypes.bool,\n  fetchDetails: PropTypes.bool,\n  filterReverseGeocodingByTypes: PropTypes.array,\n  GooglePlacesDetailsQuery: PropTypes.object,\n  GooglePlacesSearchQuery: PropTypes.object,\n  GoogleReverseGeocodingQuery: PropTypes.object,\n  inbetweenCompo: PropTypes.object,\n  isRowScrollable: PropTypes.bool,\n  keyboardShouldPersistTaps: PropTypes.oneOf(['never', 'always', 'handled']),\n  listEmptyComponent: PropTypes.func,\n  listUnderlayColor: PropTypes.string,\n  // Must write it this way: https://stackoverflow.com/a/54290946/7180620\n  listViewDisplayed: PropTypes.oneOfType([\n    PropTypes.bool,\n    PropTypes.oneOf(['auto']),\n  ]),\n  keepResultsAfterBlur: PropTypes.bool,\n  minLength: PropTypes.number,\n  nearbyPlacesAPI: PropTypes.string,\n  numberOfLines: PropTypes.number,\n  onFail: PropTypes.func,\n  onNotFound: PropTypes.func,\n  onPress: PropTypes.func,\n  onTimeout: PropTypes.func,\n  placeholder: PropTypes.string,\n  predefinedPlaces: PropTypes.array,\n  predefinedPlacesAlwaysVisible: PropTypes.bool,\n  preProcess: PropTypes.func,\n  query: PropTypes.object,\n  renderDescription: PropTypes.func,\n  renderHeaderComponent: PropTypes.func,\n  renderLeftButton: PropTypes.func,\n  renderRightButton: PropTypes.func,\n  renderRow: PropTypes.func,\n  requestUrl: PropTypes.shape({\n    url: PropTypes.string,\n    useOnPlatform: PropTypes.oneOf(['web', 'all']),\n    headers: PropTypes.objectOf(PropTypes.string),\n  }),\n  styles: PropTypes.object,\n  suppressDefaultStyles: PropTypes.bool,\n  textInputHide: PropTypes.bool,\n  textInputProps: PropTypes.object,\n  timeout: PropTypes.number,\n};\n\nGooglePlacesAutocomplete.defaultProps = {\n  autoFillOnNotFound: false,\n  currentLocation: false,\n  currentLocationLabel: 'Current location',\n  debounce: 0,\n  disableScroll: false,\n  enableHighAccuracyLocation: true,\n  enablePoweredByContainer: true,\n  fetchDetails: false,\n  filterReverseGeocodingByTypes: [],\n  GooglePlacesDetailsQuery: {},\n  GooglePlacesSearchQuery: {\n    rankby: 'distance',\n    type: 'restaurant',\n  },\n  GoogleReverseGeocodingQuery: {},\n  isRowScrollable: true,\n  keyboardShouldPersistTaps: 'always',\n  listUnderlayColor: '#c8c7cc',\n  listViewDisplayed: 'auto',\n  keepResultsAfterBlur: false,\n  minLength: 0,\n  nearbyPlacesAPI: 'GooglePlacesSearch',\n  numberOfLines: 1,\n  onFail: () => {},\n  onNotFound: () => {},\n  onPress: () => {},\n  onTimeout: () => console.warn('google places autocomplete: request timeout'),\n  placeholder: '',\n  predefinedPlaces: [],\n  predefinedPlacesAlwaysVisible: false,\n  query: {\n    key: 'missing api key',\n    language: 'en',\n    types: 'geocode',\n  },\n  styles: {},\n  suppressDefaultStyles: false,\n  textInputHide: false,\n  textInputProps: {},\n  timeout: 20000,\n};\n\nexport default { GooglePlacesAutocomplete };"],"mappings":"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"},"metadata":{},"sourceType":"module"}