{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport color from 'color';\nimport { MD3LightTheme } from \"../../styles/themes\";\nimport { AdornmentSide, AdornmentType } from \"./Adornment/enums\";\nimport { ADORNMENT_SIZE, MD2_ADORNMENT_OFFSET, MD2_AFFIX_OFFSET, MD2_FLAT_INPUT_OFFSET, MD2_ICON_OFFSET, MD2_INPUT_PADDING_HORIZONTAL, MD2_LABEL_PADDING_HORIZONTAL, MD2_LABEL_PADDING_TOP, MD2_MIN_HEIGHT, MD2_OUTLINED_INPUT_OFFSET, MD3_ADORNMENT_OFFSET, MD3_AFFIX_OFFSET, MD3_FLAT_INPUT_OFFSET, MD3_ICON_OFFSET, MD3_INPUT_PADDING_HORIZONTAL, MD3_LABEL_PADDING_HORIZONTAL, MD3_LABEL_PADDING_TOP, MD3_MIN_HEIGHT, MD3_OUTLINED_INPUT_OFFSET } from \"./constants\";\nexport var calculateLabelTopPosition = function calculateLabelTopPosition(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var optionalPadding = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n  var customHeight = height > 0 ? height : 0;\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\nexport var calculateInputHeight = function calculateInputHeight(labelHeight) {\n  var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  var minHeight = arguments.length > 2 ? arguments[2] : undefined;\n  var finalHeight = height > 0 ? height : labelHeight;\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\nexport var calculatePadding = function calculatePadding(props) {\n  var height = props.height,\n      _props$multiline = props.multiline,\n      multiline = _props$multiline === void 0 ? false : _props$multiline;\n  var result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nvar calculateTextAreaPadding = function calculateTextAreaPadding(props) {\n  var dense = props.dense;\n  return dense ? 10 : 20;\n};\n\nvar calculateInputPadding = function calculateInputPadding(_ref) {\n  var topPosition = _ref.topPosition,\n      fontSize = _ref.fontSize,\n      multiline = _ref.multiline,\n      scale = _ref.scale,\n      dense = _ref.dense,\n      offset = _ref.offset,\n      isAndroid = _ref.isAndroid;\n  var refFontSize = scale * fontSize;\n  var result = Math.floor(topPosition / 2);\n  result = result + Math.floor((refFontSize - fontSize) / 2) - (scale < 1 ? offset / 2 : 0);\n  if (multiline && isAndroid) result = Math.min(dense ? offset / 2 : offset, result);\n  return result;\n};\n\nexport var adjustPaddingOut = function adjustPaddingOut(_ref2) {\n  var pad = _ref2.pad,\n      multiline = _ref2.multiline,\n      label = _ref2.label,\n      scale = _ref2.scale,\n      height = _ref2.height,\n      fontSize = _ref2.fontSize,\n      lineHeight = _ref2.lineHeight,\n      dense = _ref2.dense,\n      offset = _ref2.offset,\n      isAndroid = _ref2.isAndroid;\n  var fontHeight = lineHeight !== null && lineHeight !== void 0 ? lineHeight : fontSize;\n  var refFontHeight = scale * fontSize;\n  var result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2)\n    };\n  }\n\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight / 2 * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n\n    if (!dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, refFontHeight * scale) : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n\n    result = Math.floor(result);\n  }\n\n  return {\n    paddingTop: result,\n    paddingBottom: result\n  };\n};\nexport var adjustPaddingFlat = function adjustPaddingFlat(_ref3) {\n  var pad = _ref3.pad,\n      scale = _ref3.scale,\n      multiline = _ref3.multiline,\n      label = _ref3.label,\n      height = _ref3.height,\n      offset = _ref3.offset,\n      dense = _ref3.dense,\n      fontSize = _ref3.fontSize,\n      isAndroid = _ref3.isAndroid,\n      styles = _ref3.styles;\n  var result = pad;\n  var topResult = result;\n  var bottomResult = result;\n  var paddingTop = styles.paddingTop,\n      paddingBottom = styles.paddingBottom;\n  var refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    if (label) {\n      return {\n        paddingTop: paddingTop,\n        paddingBottom: paddingBottom\n      };\n    }\n\n    return {\n      paddingTop: result,\n      paddingBottom: result\n    };\n  }\n\n  if (label) {\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    if (!isAndroid) {\n      if (dense) {\n        topResult += scale < 1 ? Math.min(result, refFontSize * scale) - result / 2 : Math.min(result, refFontSize * scale) - result / 2;\n      }\n\n      if (!dense) {\n        topResult += scale < 1 ? Math.min(offset / 2, refFontSize * scale) : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2)\n      };\n    }\n\n    if (!isAndroid) {\n      if (dense) {\n        result += scale < 1 ? Math.min(offset / 2, fontSize / 2 * scale) : Math.min(offset / 2, scale);\n      }\n\n      if (!dense) {\n        result += scale < 1 ? Math.min(offset, fontSize * scale) : Math.min(fontSize, offset / 2 * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult)\n  };\n};\nexport var interpolatePlaceholder = function interpolatePlaceholder(labeled, hasActiveOutline) {\n  return labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1]\n  });\n};\nexport function calculateFlatAffixTopPosition(_ref4) {\n  var height = _ref4.height,\n      paddingTop = _ref4.paddingTop,\n      paddingBottom = _ref4.paddingBottom,\n      affixHeight = _ref4.affixHeight;\n  var inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n  var halfOfTheInputHeightDecreasedByAffixHeight = (inputHeightWithoutPadding - affixHeight) / 2;\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\nexport function calculateOutlinedIconAndAffixTopPosition(_ref5) {\n  var height = _ref5.height,\n      affixHeight = _ref5.affixHeight,\n      labelYOffset = _ref5.labelYOffset;\n  return (height - affixHeight + labelYOffset) / 2;\n}\nexport var calculateFlatInputHorizontalPadding = function calculateFlatInputHorizontalPadding(_ref6) {\n  var adornmentConfig = _ref6.adornmentConfig,\n      isV3 = _ref6.isV3;\n\n  var _getConstants = getConstants(isV3),\n      LABEL_PADDING_HORIZONTAL = _getConstants.LABEL_PADDING_HORIZONTAL,\n      ADORNMENT_OFFSET = _getConstants.ADORNMENT_OFFSET,\n      FLAT_INPUT_OFFSET = _getConstants.FLAT_INPUT_OFFSET;\n\n  var paddingLeft = LABEL_PADDING_HORIZONTAL;\n  var paddingRight = LABEL_PADDING_HORIZONTAL;\n  adornmentConfig.forEach(function (_ref7) {\n    var type = _ref7.type,\n        side = _ref7.side;\n\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n  return {\n    paddingLeft: paddingLeft,\n    paddingRight: paddingRight\n  };\n};\n\nvar getInputTextColor = function getInputTextColor(_ref8) {\n  var theme = _ref8.theme,\n      textColor = _ref8.textColor,\n      disabled = _ref8.disabled,\n      mode = _ref8.mode;\n  var isFlat = mode === 'flat';\n\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nvar getActiveColor = function getActiveColor(_ref9) {\n  var theme = _ref9.theme,\n      disabled = _ref9.disabled,\n      error = _ref9.error,\n      activeUnderlineColor = _ref9.activeUnderlineColor,\n      activeOutlineColor = _ref9.activeOutlineColor,\n      mode = _ref9.mode;\n  var isFlat = mode === 'flat';\n  var modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nvar getPlaceholderColor = function getPlaceholderColor(_ref10) {\n  var theme = _ref10.theme,\n      disabled = _ref10.disabled;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nvar getFlatBackgroundColor = function getFlatBackgroundColor(_ref11) {\n  var _theme$colors, _theme$colors2;\n\n  var theme = _ref11.theme,\n      disabled = _ref11.disabled;\n\n  if (theme.isV3) {\n    if (disabled) {\n      return color(MD3LightTheme.colors.onSecondaryContainer).alpha(0.08).rgb().string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark ? color((_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.background).lighten(0.24).rgb().string() : color((_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.background).darken(0.06).rgb().string();\n};\n\nvar getFlatUnderlineColor = function getFlatUnderlineColor(_ref12) {\n  var theme = _ref12.theme,\n      disabled = _ref12.disabled,\n      underlineColor = _ref12.underlineColor;\n\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nvar getOutlinedOutlineInputColor = function getOutlinedOutlineInputColor(_ref13) {\n  var theme = _ref13.theme,\n      disabled = _ref13.disabled,\n      customOutlineColor = _ref13.customOutlineColor;\n  var isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nexport var getFlatInputColors = function getFlatInputColors(_ref14) {\n  var underlineColor = _ref14.underlineColor,\n      activeUnderlineColor = _ref14.activeUnderlineColor,\n      textColor = _ref14.textColor,\n      disabled = _ref14.disabled,\n      error = _ref14.error,\n      theme = _ref14.theme;\n  var baseFlatColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      textColor: textColor,\n      mode: 'flat'\n    })),\n    activeColor: getActiveColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      error: error,\n      activeUnderlineColor: activeUnderlineColor,\n      mode: 'flat'\n    })),\n    underlineColorCustom: getFlatUnderlineColor(_objectSpread(_objectSpread({}, baseFlatColorProps), {}, {\n      underlineColor: underlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps)\n  };\n};\nexport var getOutlinedInputColors = function getOutlinedInputColors(_ref15) {\n  var activeOutlineColor = _ref15.activeOutlineColor,\n      customOutlineColor = _ref15.customOutlineColor,\n      textColor = _ref15.textColor,\n      disabled = _ref15.disabled,\n      error = _ref15.error,\n      theme = _ref15.theme;\n  var baseOutlinedColorProps = {\n    theme: theme,\n    disabled: disabled\n  };\n  return {\n    inputTextColor: getInputTextColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      textColor: textColor,\n      mode: 'outlined'\n    })),\n    activeColor: getActiveColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      error: error,\n      activeOutlineColor: activeOutlineColor,\n      mode: 'outlined'\n    })),\n    outlineColor: getOutlinedOutlineInputColor(_objectSpread(_objectSpread({}, baseOutlinedColorProps), {}, {\n      customOutlineColor: customOutlineColor\n    })),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error\n  };\n};\nexport var getConstants = function getConstants(isV3) {\n  var AFFIX_OFFSET;\n  var ICON_OFFSET;\n  var LABEL_PADDING_TOP;\n  var LABEL_PADDING_HORIZONTAL;\n  var FLAT_INPUT_OFFSET;\n  var MIN_HEIGHT;\n  var INPUT_PADDING_HORIZONTAL;\n  var ADORNMENT_OFFSET;\n  var OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET: AFFIX_OFFSET,\n    ICON_OFFSET: ICON_OFFSET,\n    LABEL_PADDING_TOP: LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL: LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET: FLAT_INPUT_OFFSET,\n    MIN_HEIGHT: MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL: INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET: ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET: OUTLINED_INPUT_OFFSET\n  };\n};","map":{"version":3,"mappings":"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","names":["color","MD3LightTheme","AdornmentSide","AdornmentType","ADORNMENT_SIZE","MD2_ADORNMENT_OFFSET","MD2_AFFIX_OFFSET","MD2_FLAT_INPUT_OFFSET","MD2_ICON_OFFSET","MD2_INPUT_PADDING_HORIZONTAL","MD2_LABEL_PADDING_HORIZONTAL","MD2_LABEL_PADDING_TOP","MD2_MIN_HEIGHT","MD2_OUTLINED_INPUT_OFFSET","MD3_ADORNMENT_OFFSET","MD3_AFFIX_OFFSET","MD3_FLAT_INPUT_OFFSET","MD3_ICON_OFFSET","MD3_INPUT_PADDING_HORIZONTAL","MD3_LABEL_PADDING_HORIZONTAL","MD3_LABEL_PADDING_TOP","MD3_MIN_HEIGHT","MD3_OUTLINED_INPUT_OFFSET","calculateLabelTopPosition","labelHeight","height","optionalPadding","customHeight","Math","floor","calculateInputHeight","minHeight","finalHeight","calculatePadding","props","multiline","result","calculateTextAreaPadding","calculateInputPadding","max","dense","topPosition","_ref","fontSize","scale","offset","isAndroid","refFontSize","min","adjustPaddingOut","pad","_ref2","label","lineHeight","fontHeight","refFontHeight","paddingTop","paddingBottom","adjustPaddingFlat","_ref3","styles","topResult","bottomResult","interpolatePlaceholder","labeled","hasActiveOutline","interpolate","inputRange","outputRange","calculateFlatAffixTopPosition","_ref4","affixHeight","inputHeightWithoutPadding","halfOfTheInputHeightDecreasedByAffixHeight","calculateOutlinedIconAndAffixTopPosition","_ref5","labelYOffset","calculateFlatInputHorizontalPadding","adornmentConfig","_ref6","isV3","getConstants","LABEL_PADDING_HORIZONTAL","ADORNMENT_OFFSET","FLAT_INPUT_OFFSET","paddingLeft","paddingRight","forEach","type","_ref7","side","Icon","Left","Right","Affix","getInputTextColor","theme","_ref8","textColor","disabled","mode","isFlat","colors","onSurfaceDisabled","onSurfaceVariant","onSurface","text","alpha","rgb","string","getActiveColor","_ref9","error","activeUnderlineColor","activeOutlineColor","modeColor","primary","getPlaceholderColor","_ref10","placeholder","getFlatBackgroundColor","_ref11","onSecondaryContainer","surfaceVariant","undefined","dark","_theme$colors","background","lighten","_theme$colors2","darken","getFlatUnderlineColor","_ref12","underlineColor","getOutlinedOutlineInputColor","_ref13","customOutlineColor","isTransparent","surfaceDisabled","outline","getFlatInputColors","_ref14","baseFlatColorProps","inputTextColor","activeColor","underlineColorCustom","placeholderColor","errorColor","backgroundColor","getOutlinedInputColors","_ref15","baseOutlinedColorProps","outlineColor","AFFIX_OFFSET","ICON_OFFSET","LABEL_PADDING_TOP","MIN_HEIGHT","INPUT_PADDING_HORIZONTAL","OUTLINED_INPUT_OFFSET"],"sources":["helpers.tsx"],"sourcesContent":["import type { Animated } from 'react-native';\n\nimport color from 'color';\n\nimport { MD3LightTheme } from '../../styles/themes';\nimport type { InternalTheme } from '../../types';\nimport { AdornmentSide, AdornmentType } from './Adornment/enums';\nimport type { AdornmentConfig } from './Adornment/types';\nimport {\n  ADORNMENT_SIZE,\n  MD2_ADORNMENT_OFFSET,\n  MD2_AFFIX_OFFSET,\n  MD2_FLAT_INPUT_OFFSET,\n  MD2_ICON_OFFSET,\n  MD2_INPUT_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_HORIZONTAL,\n  MD2_LABEL_PADDING_TOP,\n  MD2_MIN_HEIGHT,\n  MD2_OUTLINED_INPUT_OFFSET,\n  MD3_ADORNMENT_OFFSET,\n  MD3_AFFIX_OFFSET,\n  MD3_FLAT_INPUT_OFFSET,\n  MD3_ICON_OFFSET,\n  MD3_INPUT_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_HORIZONTAL,\n  MD3_LABEL_PADDING_TOP,\n  MD3_MIN_HEIGHT,\n  MD3_OUTLINED_INPUT_OFFSET,\n} from './constants';\nimport type { TextInputLabelProp } from './types';\n\ntype PaddingProps = {\n  height: number | null;\n  labelHalfHeight: number;\n  multiline: boolean | null;\n  dense: boolean | null;\n  topPosition: number;\n  fontSize: number;\n  lineHeight?: number;\n  label?: TextInputLabelProp | null;\n  scale: number;\n  offset: number;\n  isAndroid: boolean;\n  styles: { paddingTop: number; paddingBottom: number };\n};\n\ntype AdjProps = PaddingProps & {\n  pad: number;\n};\n\nexport type Padding = { paddingTop: number; paddingBottom: number };\n\nexport const calculateLabelTopPosition = (\n  labelHeight: number,\n  height: number = 0,\n  optionalPadding: number = 0\n): number => {\n  const customHeight = height > 0 ? height : 0;\n\n  return Math.floor((customHeight - labelHeight) / 2 + optionalPadding);\n};\n\nexport const calculateInputHeight = (\n  labelHeight: number,\n  height: any = 0,\n  minHeight: number\n): number => {\n  const finalHeight = height > 0 ? height : labelHeight;\n\n  if (height > 0) return height;\n  return finalHeight < minHeight ? minHeight : finalHeight;\n};\n\nexport const calculatePadding = (props: PaddingProps): number => {\n  const { height, multiline = false } = props;\n\n  let result = 0;\n\n  if (multiline) {\n    if (height && multiline) {\n      result = calculateTextAreaPadding(props);\n    } else {\n      result = calculateInputPadding(props);\n    }\n  }\n\n  return Math.max(0, result);\n};\n\nconst calculateTextAreaPadding = (props: PaddingProps) => {\n  const { dense } = props;\n\n  return dense ? 10 : 20;\n};\n\nconst calculateInputPadding = ({\n  topPosition,\n  fontSize,\n  multiline,\n  scale,\n  dense,\n  offset,\n  isAndroid,\n}: PaddingProps): number => {\n  const refFontSize = scale * fontSize;\n  let result = Math.floor(topPosition / 2);\n\n  result =\n    result +\n    Math.floor((refFontSize - fontSize) / 2) -\n    (scale < 1 ? offset / 2 : 0);\n\n  if (multiline && isAndroid)\n    result = Math.min(dense ? offset / 2 : offset, result);\n\n  return result;\n};\n\nexport const adjustPaddingOut = ({\n  pad,\n  multiline,\n  label,\n  scale,\n  height,\n  fontSize,\n  lineHeight,\n  dense,\n  offset,\n  isAndroid,\n}: AdjProps): Padding => {\n  const fontHeight = lineHeight ?? fontSize;\n  const refFontHeight = scale * fontSize;\n  let result = pad;\n\n  if (height && !multiline) {\n    return {\n      paddingTop: Math.max(0, (height - fontHeight) / 2),\n      paddingBottom: Math.max(0, (height - fontHeight) / 2),\n    };\n  }\n  if (!isAndroid && multiline) {\n    if (dense) {\n      if (label) {\n        result += scale < 1 ? Math.min(offset, (refFontHeight / 2) * scale) : 0;\n      } else {\n        result += 0;\n      }\n    }\n    if (!dense) {\n      if (label) {\n        result +=\n          scale < 1\n            ? Math.min(offset, refFontHeight * scale)\n            : Math.min(offset / 2, refFontHeight * scale);\n      } else {\n        result += scale < 1 ? Math.min(offset / 2, refFontHeight * scale) : 0;\n      }\n    }\n    result = Math.floor(result);\n  }\n  return { paddingTop: result, paddingBottom: result };\n};\n\nexport const adjustPaddingFlat = ({\n  pad,\n  scale,\n  multiline,\n  label,\n  height,\n  offset,\n  dense,\n  fontSize,\n  isAndroid,\n  styles,\n}: AdjProps): Padding => {\n  let result = pad;\n  let topResult = result;\n  let bottomResult = result;\n  const { paddingTop, paddingBottom } = styles;\n  const refFontSize = scale * fontSize;\n\n  if (!multiline) {\n    // do not modify padding if input is not multiline\n    if (label) {\n      // return const style for flat input with label\n      return { paddingTop, paddingBottom };\n    }\n    // return pad for flat input without label\n    return { paddingTop: result, paddingBottom: result };\n  }\n\n  if (label) {\n    // add paddings passed from styles\n    topResult = paddingTop;\n    bottomResult = paddingBottom;\n\n    // adjust top padding for iOS\n    if (!isAndroid) {\n      if (dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(result, refFontSize * scale) - result / 2\n            : Math.min(result, refFontSize * scale) - result / 2;\n      }\n      if (!dense) {\n        topResult +=\n          scale < 1\n            ? Math.min(offset / 2, refFontSize * scale)\n            : Math.min(result, refFontSize * scale) - offset / 2;\n      }\n    }\n    topResult = Math.floor(topResult);\n  } else {\n    if (height) {\n      // center text when height is passed\n      return {\n        paddingTop: Math.max(0, (height - fontSize) / 2),\n        paddingBottom: Math.max(0, (height - fontSize) / 2),\n      };\n    }\n    // adjust paddings for iOS if no label\n    if (!isAndroid) {\n      if (dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset / 2, (fontSize / 2) * scale)\n            : Math.min(offset / 2, scale);\n      }\n      if (!dense) {\n        result +=\n          scale < 1\n            ? Math.min(offset, fontSize * scale)\n            : Math.min(fontSize, (offset / 2) * scale);\n      }\n\n      result = Math.floor(result);\n      topResult = result;\n      bottomResult = result;\n    }\n  }\n\n  return {\n    paddingTop: Math.max(0, topResult),\n    paddingBottom: Math.max(0, bottomResult),\n  };\n};\n\nexport const interpolatePlaceholder = (\n  labeled: Animated.Value,\n  hasActiveOutline: boolean | undefined\n) =>\n  labeled.interpolate({\n    inputRange: [0, 1],\n    outputRange: [hasActiveOutline ? 0 : 1, 1],\n  });\n\nexport function calculateFlatAffixTopPosition({\n  height,\n  paddingTop,\n  paddingBottom,\n  affixHeight,\n}: {\n  height: number;\n  paddingTop: number;\n  paddingBottom: number;\n  affixHeight: number;\n}): number {\n  const inputHeightWithoutPadding = height - paddingTop - paddingBottom;\n\n  const halfOfTheInputHeightDecreasedByAffixHeight =\n    (inputHeightWithoutPadding - affixHeight) / 2;\n\n  return paddingTop + halfOfTheInputHeightDecreasedByAffixHeight;\n}\n\nexport function calculateOutlinedIconAndAffixTopPosition({\n  height,\n  affixHeight,\n  labelYOffset,\n}: {\n  height: number;\n  affixHeight: number;\n  labelYOffset: number;\n}): number {\n  return (height - affixHeight + labelYOffset) / 2;\n}\n\nexport const calculateFlatInputHorizontalPadding = ({\n  adornmentConfig,\n  isV3,\n}: {\n  adornmentConfig: AdornmentConfig[];\n  isV3?: boolean;\n}) => {\n  const { LABEL_PADDING_HORIZONTAL, ADORNMENT_OFFSET, FLAT_INPUT_OFFSET } =\n    getConstants(isV3);\n\n  let paddingLeft = LABEL_PADDING_HORIZONTAL;\n  let paddingRight = LABEL_PADDING_HORIZONTAL;\n\n  adornmentConfig.forEach(({ type, side }) => {\n    if (type === AdornmentType.Icon && side === AdornmentSide.Left) {\n      paddingLeft = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n    } else if (side === AdornmentSide.Right) {\n      if (type === AdornmentType.Affix) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      } else if (type === AdornmentType.Icon) {\n        paddingRight = ADORNMENT_SIZE + ADORNMENT_OFFSET + FLAT_INPUT_OFFSET;\n      }\n    }\n  });\n\n  return { paddingLeft, paddingRight };\n};\n\ntype BaseProps = {\n  theme: InternalTheme;\n  disabled?: boolean;\n};\n\ntype Mode = 'flat' | 'outlined';\n\nconst getInputTextColor = ({\n  theme,\n  textColor,\n  disabled,\n  mode,\n}: BaseProps & { mode: Mode; textColor?: string }) => {\n  const isFlat = mode === 'flat';\n  if (textColor) {\n    return textColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    if (isFlat) {\n      return theme.colors.onSurfaceVariant;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.text;\n};\n\nconst getActiveColor = ({\n  theme,\n  disabled,\n  error,\n  activeUnderlineColor,\n  activeOutlineColor,\n  mode,\n}: BaseProps & {\n  error?: boolean;\n  activeUnderlineColor?: string;\n  activeOutlineColor?: string;\n  mode?: Mode;\n}) => {\n  const isFlat = mode === 'flat';\n  const modeColor = isFlat ? activeUnderlineColor : activeOutlineColor;\n\n  if (error) {\n    return theme.colors.error;\n  }\n\n  if (modeColor) {\n    return modeColor;\n  }\n\n  if (disabled) {\n    if (theme.isV3) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return color(theme.colors.text).alpha(0.54).rgb().string();\n  }\n\n  return theme.colors.primary;\n};\n\nconst getPlaceholderColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurfaceVariant;\n  }\n\n  if (disabled) {\n    return theme.colors.disabled;\n  }\n\n  return theme.colors.placeholder;\n};\n\nconst getFlatBackgroundColor = ({ theme, disabled }: BaseProps) => {\n  if (theme.isV3) {\n    if (disabled) {\n      // @ts-ignore According to Figma for both themes the base color for disabled in `onSecondaryContainer`\n      return color(MD3LightTheme.colors.onSecondaryContainer)\n        .alpha(0.08)\n        .rgb()\n        .string();\n    } else {\n      return theme.colors.surfaceVariant;\n    }\n  }\n\n  if (disabled) {\n    return undefined;\n  }\n\n  return theme.dark\n    ? color(theme.colors?.background).lighten(0.24).rgb().string()\n    : color(theme.colors?.background).darken(0.06).rgb().string();\n};\n\nconst getFlatUnderlineColor = ({\n  theme,\n  disabled,\n  underlineColor,\n}: BaseProps & { underlineColor?: string }) => {\n  if (!disabled && underlineColor) {\n    return underlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      return theme.colors.onSurfaceDisabled;\n    }\n\n    return theme.colors.onSurface;\n  }\n\n  if (disabled) {\n    return 'transparent';\n  }\n\n  return theme.colors.disabled;\n};\n\nconst getOutlinedOutlineInputColor = ({\n  theme,\n  disabled,\n  customOutlineColor,\n}: BaseProps & { customOutlineColor?: string }) => {\n  const isTransparent = color(customOutlineColor).alpha() === 0;\n\n  if (!disabled && customOutlineColor) {\n    return customOutlineColor;\n  }\n\n  if (theme.isV3) {\n    if (disabled) {\n      if (theme.dark) {\n        return 'transparent';\n      }\n      return theme.colors.surfaceDisabled;\n    }\n\n    return theme.colors.outline;\n  }\n\n  if (disabled) {\n    if (isTransparent) {\n      return customOutlineColor;\n    }\n    return theme.colors.disabled;\n  }\n  return theme.colors.placeholder;\n};\n\nexport const getFlatInputColors = ({\n  underlineColor,\n  activeUnderlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  underlineColor?: string;\n  activeUnderlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseFlatColorProps = { theme, disabled };\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseFlatColorProps,\n      textColor,\n      mode: 'flat',\n    }),\n    activeColor: getActiveColor({\n      ...baseFlatColorProps,\n      error,\n      activeUnderlineColor,\n      mode: 'flat',\n    }),\n    underlineColorCustom: getFlatUnderlineColor({\n      ...baseFlatColorProps,\n      underlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseFlatColorProps),\n    errorColor: theme.colors.error,\n    backgroundColor: getFlatBackgroundColor(baseFlatColorProps),\n  };\n};\n\nexport const getOutlinedInputColors = ({\n  activeOutlineColor,\n  customOutlineColor,\n  textColor,\n  disabled,\n  error,\n  theme,\n}: {\n  activeOutlineColor?: string;\n  customOutlineColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  error?: boolean;\n  theme: InternalTheme;\n}) => {\n  const baseOutlinedColorProps = { theme, disabled };\n\n  return {\n    inputTextColor: getInputTextColor({\n      ...baseOutlinedColorProps,\n      textColor,\n      mode: 'outlined',\n    }),\n    activeColor: getActiveColor({\n      ...baseOutlinedColorProps,\n      error,\n      activeOutlineColor,\n      mode: 'outlined',\n    }),\n    outlineColor: getOutlinedOutlineInputColor({\n      ...baseOutlinedColorProps,\n      customOutlineColor,\n    }),\n    placeholderColor: getPlaceholderColor(baseOutlinedColorProps),\n    errorColor: theme.colors.error,\n  };\n};\n\nexport const getConstants = (isV3?: boolean) => {\n  // Text input affix\n  let AFFIX_OFFSET;\n  // Text input icon\n  let ICON_OFFSET;\n  //Text input flat\n  let LABEL_PADDING_TOP;\n  let LABEL_PADDING_HORIZONTAL;\n  let FLAT_INPUT_OFFSET;\n  let MIN_HEIGHT;\n  // Text input outlined;\n  let INPUT_PADDING_HORIZONTAL;\n  let ADORNMENT_OFFSET;\n  let OUTLINED_INPUT_OFFSET;\n\n  if (isV3) {\n    AFFIX_OFFSET = MD3_AFFIX_OFFSET;\n    ICON_OFFSET = MD3_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD3_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD3_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD3_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD3_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD3_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD3_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD3_OUTLINED_INPUT_OFFSET;\n  } else {\n    AFFIX_OFFSET = MD2_AFFIX_OFFSET;\n    ICON_OFFSET = MD2_ICON_OFFSET;\n    LABEL_PADDING_TOP = MD2_LABEL_PADDING_TOP;\n    LABEL_PADDING_HORIZONTAL = MD2_LABEL_PADDING_HORIZONTAL;\n    FLAT_INPUT_OFFSET = MD2_FLAT_INPUT_OFFSET;\n    MIN_HEIGHT = MD2_MIN_HEIGHT;\n    INPUT_PADDING_HORIZONTAL = MD2_INPUT_PADDING_HORIZONTAL;\n    ADORNMENT_OFFSET = MD2_ADORNMENT_OFFSET;\n    OUTLINED_INPUT_OFFSET = MD2_OUTLINED_INPUT_OFFSET;\n  }\n\n  return {\n    AFFIX_OFFSET,\n    ICON_OFFSET,\n    LABEL_PADDING_TOP,\n    LABEL_PADDING_HORIZONTAL,\n    FLAT_INPUT_OFFSET,\n    MIN_HEIGHT,\n    INPUT_PADDING_HORIZONTAL,\n    ADORNMENT_OFFSET,\n    OUTLINED_INPUT_OFFSET,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}