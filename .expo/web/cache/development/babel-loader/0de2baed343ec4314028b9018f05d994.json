{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport * as React from 'react';\nimport { Consumer as SettingsConsumer, Provider as SettingsProvider } from \"../../core/settings\";\nimport { ThemeProvider, withInternalTheme } from \"../../core/theming\";\nimport PortalConsumer from \"./PortalConsumer\";\nimport PortalHost, { PortalContext } from \"./PortalHost\";\n\nvar Portal = function (_React$Component) {\n  _inherits(Portal, _React$Component);\n\n  var _super = _createSuper(Portal);\n\n  function Portal() {\n    _classCallCheck(this, Portal);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Portal, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          children = _this$props.children,\n          theme = _this$props.theme;\n      return React.createElement(SettingsConsumer, null, function (settings) {\n        return React.createElement(PortalContext.Consumer, null, function (manager) {\n          return React.createElement(PortalConsumer, {\n            manager: manager\n          }, React.createElement(SettingsProvider, {\n            value: settings\n          }, React.createElement(ThemeProvider, {\n            theme: theme\n          }, children)));\n        });\n      });\n    }\n  }]);\n\n  return Portal;\n}(React.Component);\n\n_defineProperty(Portal, \"Host\", PortalHost);\n\nexport default withInternalTheme(Portal);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,SACEC,QAAQ,IAAIC,gBADd,EAEEC,QAAQ,IAAIC,gBAFd;AAIA,SAASC,aAAT,EAAwBC,iBAAxB;AACA,OAAOC,cAAP;AACA,OAAOC,UAAP,IAAqBC,aAArB;;IAiCMC,M;;;;;;;;;;;;;WAIJC,kBAAS;MACP,kBAA4B,KAAKC,KAAjC;MAAA,IAAQC,QAAR,eAAQA,QAAR;MAAA,IAAkBC,KAAlB,eAAkBA,KAAlB;MAEA,OACEd,oBAACE,gBAAD,EAAiB,IAAjB,EACIa,kBAAQ;QAAA,OACRf,oBAACS,aAAa,CAACR,QAAf,EAAuB,IAAvB,EACIe,iBAAO;UAAA,OACPhB,oBAACO,cAAD,EAAe;YAACS,OAAO,EAAEA;UAAV,CAAf,EACEhB,oBAACI,gBAAD,EAAiB;YAACa,KAAK,EAAEF;UAAR,CAAjB,EAEEf,oBAACK,aAAD,EAAc;YAACS,KAAK,EAAEA;UAAR,CAAd,EAA8BD,QAA9B,CAFF,CADF,CADO;QAAA,CADX,CADQ;MAAA,CADZ,CADF;IAgBF;;;;EAvBmBb,KAAK,CAACkB,S;;AAwB1BC,gBAxBKT,MAwBL,EAxBW,MAwBX,EAtBeF,UAsBf;;AAED,eAAeF,iBAAiB,CAACI,MAAD,CAAhC","names":["React","Consumer","SettingsConsumer","Provider","SettingsProvider","ThemeProvider","withInternalTheme","PortalConsumer","PortalHost","PortalContext","Portal","render","props","children","theme","settings","manager","value","Component","_defineProperty"],"sources":["Portal.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport type { InternalTheme } from 'src/types';\n\nimport {\n  Consumer as SettingsConsumer,\n  Provider as SettingsProvider,\n} from '../../core/settings';\nimport { ThemeProvider, withInternalTheme } from '../../core/theming';\nimport PortalConsumer from './PortalConsumer';\nimport PortalHost, { PortalContext, PortalMethods } from './PortalHost';\n\nexport type Props = {\n  /**\n   * Content of the `Portal`.\n   */\n  children: React.ReactNode;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\n/**\n * Portal allows rendering a component at a different place in the parent tree.\n * You can use it to render content which should appear above other elements, similar to `Modal`.\n * It requires a [`Portal.Host`](portal-host.html) component to be rendered somewhere in the parent tree.\n * Note that if you're using the `Provider` component, this already includes a `Portal.Host`.\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => (\n *   <Portal>\n *     <Text>This is rendered at a different place</Text>\n *   </Portal>\n * );\n *\n * export default MyComponent;\n * ```\n */\nclass Portal extends React.Component<Props> {\n  // @component ./PortalHost.tsx\n  static Host = PortalHost;\n\n  render() {\n    const { children, theme } = this.props;\n\n    return (\n      <SettingsConsumer>\n        {(settings) => (\n          <PortalContext.Consumer>\n            {(manager) => (\n              <PortalConsumer manager={manager as PortalMethods}>\n                <SettingsProvider value={settings}>\n                  {/* @ts-expect-error check @callstack/react-theme-provider's children prop */}\n                  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n                </SettingsProvider>\n              </PortalConsumer>\n            )}\n          </PortalContext.Consumer>\n        )}\n      </SettingsConsumer>\n    );\n  }\n}\n\nexport default withInternalTheme(Portal);\n"]},"metadata":{},"sourceType":"module"}