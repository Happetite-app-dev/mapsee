{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { withInternalTheme } from \"../core/theming\";\nimport Icon, { isEqualIcon, isValidIcon } from \"./Icon\";\n\nvar CrossFadeIcon = function CrossFadeIcon(_ref) {\n  var color = _ref.color,\n      size = _ref.size,\n      source = _ref.source,\n      theme = _ref.theme;\n\n  var _React$useState = React.useState(function () {\n    return source;\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      currentIcon = _React$useState2[0],\n      setCurrentIcon = _React$useState2[1];\n\n  var _React$useState3 = React.useState(null),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      previousIcon = _React$useState4[0],\n      setPreviousIcon = _React$useState4[1];\n\n  var _React$useRef = React.useRef(new Animated.Value(1)),\n      fade = _React$useRef.current;\n\n  var scale = theme.animation.scale;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(function () {\n      return currentIcon;\n    });\n    setCurrentIcon(function () {\n      return source;\n    });\n  }\n\n  React.useEffect(function () {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n  var opacityPrev = fade;\n  var opacityNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: [1, 0]\n  }) : 1;\n  var rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg']\n  });\n  var rotateNext = previousIcon ? fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['0deg', '-180deg']\n  }) : '0deg';\n  return React.createElement(View, {\n    style: [styles.content, {\n      height: size,\n      width: size\n    }]\n  }, previousIcon ? React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityPrev,\n      transform: [{\n        rotate: rotatePrev\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: previousIcon,\n    size: size,\n    color: color\n  })) : null, React.createElement(Animated.View, {\n    style: [styles.icon, {\n      opacity: opacityNext,\n      transform: [{\n        rotate: rotateNext\n      }]\n    }]\n  }, React.createElement(Icon, {\n    source: currentIcon,\n    size: size,\n    color: color\n  })));\n};\n\nexport default withInternalTheme(CrossFadeIcon);\nvar styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0\n  }\n});","map":{"version":3,"mappings":"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","names":["React","withInternalTheme","Icon","isEqualIcon","isValidIcon","CrossFadeIcon","color","_ref","size","source","theme","useState","currentIcon","setCurrentIcon","previousIcon","setPreviousIcon","useRef","Animated","Value","fade","current","scale","animation","useEffect","setValue","timing","duration","toValue","useNativeDriver","start","opacityPrev","opacityNext","interpolate","inputRange","outputRange","rotatePrev","rotateNext","View","style","styles","content","height","width","icon","opacity","transform","rotate","StyleSheet","create","alignItems","justifyContent","position","top","left","right","bottom"],"sources":["CrossFadeIcon.tsx"],"sourcesContent":["import * as React from 'react';\nimport { Animated, StyleSheet, View } from 'react-native';\n\nimport { withInternalTheme } from '../core/theming';\nimport type { InternalTheme } from '../types';\nimport Icon, { IconSource, isEqualIcon, isValidIcon } from './Icon';\n\ntype Props = {\n  /**\n   * Icon to display for the `CrossFadeIcon`.\n   */\n  source: IconSource;\n  /**\n   * Color of the icon.\n   */\n  color: string;\n  /**\n   * Size of the icon.\n   */\n  size: number;\n  /**\n   * @optional\n   */\n  theme: InternalTheme;\n};\n\nconst CrossFadeIcon = ({ color, size, source, theme }: Props) => {\n  const [currentIcon, setCurrentIcon] = React.useState<IconSource>(\n    () => source\n  );\n  const [previousIcon, setPreviousIcon] = React.useState<IconSource | null>(\n    null\n  );\n  const { current: fade } = React.useRef<Animated.Value>(new Animated.Value(1));\n\n  const { scale } = theme.animation;\n\n  if (currentIcon !== source) {\n    setPreviousIcon(() => currentIcon);\n    setCurrentIcon(() => source);\n  }\n\n  React.useEffect(() => {\n    if (isValidIcon(previousIcon) && !isEqualIcon(previousIcon, currentIcon)) {\n      fade.setValue(1);\n\n      Animated.timing(fade, {\n        duration: scale * 200,\n        toValue: 0,\n        useNativeDriver: true,\n      }).start();\n    }\n  }, [currentIcon, previousIcon, fade, scale]);\n\n  const opacityPrev = fade;\n  const opacityNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: [1, 0],\n      })\n    : 1;\n\n  const rotatePrev = fade.interpolate({\n    inputRange: [0, 1],\n    outputRange: ['-90deg', '0deg'],\n  });\n\n  const rotateNext = previousIcon\n    ? fade.interpolate({\n        inputRange: [0, 1],\n        outputRange: ['0deg', '-180deg'],\n      })\n    : '0deg';\n\n  return (\n    <View\n      style={[\n        styles.content,\n        {\n          height: size,\n          width: size,\n        },\n      ]}\n    >\n      {previousIcon ? (\n        <Animated.View\n          style={[\n            styles.icon,\n            {\n              opacity: opacityPrev,\n              transform: [{ rotate: rotatePrev }],\n            },\n          ]}\n        >\n          <Icon source={previousIcon} size={size} color={color} />\n        </Animated.View>\n      ) : null}\n      <Animated.View\n        style={[\n          styles.icon,\n          {\n            opacity: opacityNext,\n            transform: [{ rotate: rotateNext }],\n          },\n        ]}\n      >\n        <Icon source={currentIcon} size={size} color={color} />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default withInternalTheme(CrossFadeIcon);\n\nconst styles = StyleSheet.create({\n  content: {\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  icon: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    bottom: 0,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}