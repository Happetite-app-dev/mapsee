{"ast":null,"code":"function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nimport * as React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useInternalTheme } from \"../../core/theming\";\n\nvar DialogScrollArea = function DialogScrollArea(props) {\n  var theme = useInternalTheme();\n  var borderStyles = {\n    borderColor: theme.isV3 ? theme.colors.surfaceVariant : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth\n  };\n  return React.createElement(View, _extends({}, props, {\n    style: [styles.container, borderStyles, theme.isV3 && styles.v3Container, props.style]\n  }), props.children);\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1\n  },\n  v3Container: {\n    marginBottom: 24\n  }\n});\nexport default DialogScrollArea;","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;;AAGA,SAASC,gBAAT;;AA+CA,IAAMC,gBAAgB,GAAIC,SAApBD,gBAAoBC,MAAY,EAAK;EACzC,IAAMC,KAAK,GAAGH,gBAAgB,EAA9B;EACA,IAAMI,YAAY,GAAG;IACnBC,WAAW,EAAEF,KAAK,CAACG,IAANH,GACTA,KAAK,CAACI,MAANJ,CAAaK,cADJL,GAET,oBAHe;IAInBM,cAAc,EAAEN,KAAK,CAACG,IAANH,GAAa,CAAbA,GAAiBO,UAAU,CAACC,aAJzB;IAKnBC,iBAAiB,EAAET,KAAK,CAACG,IAANH,GAAa,CAAbA,GAAiBO,UAAU,CAACC;EAL5B,CAArB;EAOA,OACEZ,oBAACc,IAAD,EAAKC,aACCZ,KADD,EACM;IACTa,KAAK,EAAE,CACLC,MAAM,CAACC,SADF,EAELb,YAFK,EAGLD,KAAK,CAACG,IAANH,IAAca,MAAM,CAACE,WAHhB,EAILhB,KAAK,CAACa,KAJD;EADE,CADN,CAAL,EASGb,KAAK,CAACiB,QATT,CADF;AAaD,CAtBD;;AAwBAlB,gBAAgB,CAACmB,WAAjBnB,GAA+B,mBAA/BA;AAEA,IAAMe,MAAM,GAAGN,UAAU,CAACW,MAAXX,CAAkB;EAC/BO,SAAS,EAAE;IACTK,iBAAiB,EAAE,EADV;IAETC,QAAQ,EAAE,CAFD;IAGTC,UAAU,EAAE;EAHH,CADoB;EAM/BN,WAAW,EAAE;IACXO,YAAY,EAAE;EADH;AANkB,CAAlBf,CAAf;AAWA,eAAeT,gBAAf","names":["React","useInternalTheme","DialogScrollArea","props","theme","borderStyles","borderColor","isV3","colors","surfaceVariant","borderTopWidth","StyleSheet","hairlineWidth","borderBottomWidth","View","_extends","style","styles","container","v3Container","children","displayName","create","paddingHorizontal","flexGrow","flexShrink","marginBottom"],"sources":["DialogScrollArea.tsx"],"sourcesContent":["import * as React from 'react';\nimport { StyleProp, StyleSheet, View, ViewStyle } from 'react-native';\n\nimport { useInternalTheme } from '../../core/theming';\n\nexport type Props = React.ComponentPropsWithRef<typeof View> & {\n  /**\n   * Content of the `DialogScrollArea`.\n   */\n  children: React.ReactNode;\n  style?: StyleProp<ViewStyle>;\n};\n\n/**\n * A component to show a scrollable content in a Dialog. The component only provides appropriate styling.\n * For the scrollable content you can use `ScrollView`, `FlatList` etc. depending on your requirement.\n *\n * <div class=\"screenshots\">\n *   <figure>\n *     <img class=\"small\" src=\"screenshots/dialog-scroll-area.gif\" />\n *   </figure>\n * </div>\n *\n * ## Usage\n * ```js\n * import * as React from 'react';\n * import { ScrollView } from 'react-native';\n * import { Dialog, Portal, Text } from 'react-native-paper';\n *\n * const MyComponent = () => {\n *   const [visible, setVisible] = React.useState(false);\n *\n *   const hideDialog = () => setVisible(false);\n *\n *   return (\n *     <Portal>\n *       <Dialog visible={visible} onDismiss={hideDialog}>\n *         <Dialog.ScrollArea>\n *           <ScrollView contentContainerStyle={{paddingHorizontal: 24}}>\n *             <Text>This is a scrollable area</Text>\n *           </ScrollView>\n *         </Dialog.ScrollArea>\n *       </Dialog>\n *     </Portal>\n *   );\n * };\n *\n * export default MyComponent;\n * ```\n */\nconst DialogScrollArea = (props: Props) => {\n  const theme = useInternalTheme();\n  const borderStyles = {\n    borderColor: theme.isV3\n      ? theme.colors.surfaceVariant\n      : 'rgba(0, 0, 0, .12)',\n    borderTopWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n    borderBottomWidth: theme.isV3 ? 1 : StyleSheet.hairlineWidth,\n  };\n  return (\n    <View\n      {...props}\n      style={[\n        styles.container,\n        borderStyles,\n        theme.isV3 && styles.v3Container,\n        props.style,\n      ]}\n    >\n      {props.children}\n    </View>\n  );\n};\n\nDialogScrollArea.displayName = 'Dialog.ScrollArea';\n\nconst styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 24,\n    flexGrow: 1,\n    flexShrink: 1,\n  },\n  v3Container: {\n    marginBottom: 24,\n  },\n});\n\nexport default DialogScrollArea;\n"]},"metadata":{},"sourceType":"module"}