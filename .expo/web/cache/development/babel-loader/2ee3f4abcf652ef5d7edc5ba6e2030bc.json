{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useIsFocused } from \"@react-navigation/native\";\nimport { ref, onValue, set, push, remove, off } from \"firebase/database\";\nimport { ref as ref_storage, uploadBytes, getDownloadURL, deleteObject, listAll } from \"firebase/storage\";\nimport React, { useContext, createFactory, useEffect, useState } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport TouchableHighlight from \"react-native-web/dist/exports/TouchableHighlight\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\nimport DateImage from \"../assets/icons/date.svg\";\nimport DeleteFolder from \"../assets/icons/delete.svg\";\nimport FolderImage from \"../assets/icons/folder.svg\";\nimport EditFolder from \"../assets/icons/folderEdit.svg\";\nimport FolderPrefix from \"../assets/icons/folderPrefix.svg\";\nimport GoBack from \"../assets/icons/goBack.svg\";\nimport LocationImage from \"../assets/icons/location.svg\";\nimport WritingImage from \"../assets/icons/writing.svg\";\nimport AppContext from \"../components/AppContext\";\nimport DatePicker from \"../components/EditScreen/DatePicker\";\nimport FolderBottomSheet from \"../components/FolderBottomSheet/FolderBottomSheet\";\nimport ImgPicker from \"../components/EditScreen/ImgPicker\";\nimport { PopUpType1, PopUpType2 } from \"../components/PopUp\";\nimport SnackBar from \"../components/SnackBar\";\nimport { storage, auth, database } from \"../firebase\";\nimport SendPushNotification from \"../modules/SendPushNotification\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar db = database;\nvar defaultFolderID = \"-NB6gdHZgh_liXbnuOLr\";\nvar defaultFolderName = \"폴더1\";\n\nvar uploadImage = function () {\n  var _ref = _asyncToGenerator(function* (image, imageName, newRecordID) {\n    var imageRef = ref_storage(storage, \"images/\" + newRecordID + \"/\" + imageName);\n    var blob = yield new Promise(function (resolve, reject) {\n      var xhr = new XMLHttpRequest();\n      xhr.open(\"GET\", image, true);\n      xhr.responseType = \"blob\";\n\n      xhr.onload = function () {\n        resolve(xhr.response);\n      };\n\n      xhr.onerror = function () {\n        reject(new TypeError(\"Network request failed\"));\n      };\n\n      xhr.send(null);\n    });\n    yield uploadBytes(imageRef, blob, {\n      connectType: \"image/png\"\n    }).then(function (snapshot) {});\n    blob.close();\n    return yield getDownloadURL(imageRef);\n  });\n\n  return function uploadImage(_x, _x2, _x3) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar saveData = function () {\n  var _ref2 = _asyncToGenerator(function* (myUID, myID, myFirstName, myLastName, title, place, placeID, address, lctn, date, folderID, folderName, selectedPhotos, text, writeDate_, recordID, originalfolderID) {\n    var timeNow = new Date();\n    var writeDate = writeDate_ || {\n      year: timeNow.getFullYear(),\n      month: timeNow.getMonth() + 1,\n      day: timeNow.getDate(),\n      hour: timeNow.getHours(),\n      minute: timeNow.getMinutes()\n    };\n\n    if (recordID == undefined) {\n      var reference1 = ref(db, \"/records\");\n      var newRecordID = push(reference1, {\n        folderID: folderID,\n        placeID: placeID,\n        address: address,\n        lctn: lctn,\n        userID: myUID,\n        writeDate: writeDate,\n        title: title === undefined ? timeNow.getFullYear().toString() + \"_\" + (timeNow.getMonth() + 1).toString() + \"_\" + timeNow.getDay().toString() + \"_\\uAE30\\uB85D\" : title,\n        placeName: place,\n        date: {\n          year: date.getFullYear(),\n          month: date.getMonth() + 1,\n          day: date.getDate()\n        },\n        folderName: folderName,\n        text: text\n      }).key;\n      var reference2 = ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID + \"/\" + newRecordID);\n      set(reference2, true);\n      selectedPhotos.map(function () {\n        var _ref3 = _asyncToGenerator(function* (image) {\n          var referenceImage = ref(db, \"/records/\" + newRecordID + \"/photos\");\n          var imageID = push(referenceImage, image).key;\n          var url = yield uploadImage(image, imageID, newRecordID);\n          var referenceUrl = ref(db, \"/records/\" + newRecordID + \"/photos/\" + imageID);\n          set(referenceUrl, url);\n        });\n\n        return function (_x21) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n      onValue(ref(db, \"/folders/\" + folderID + \"/userIDs\"), function (snapshot) {\n        if (snapshot.val() != null) {\n          var folderUserIDs = Object.keys(snapshot.val());\n          folderUserIDs.map(function (folderUserID) {\n            if (folderUserID != myUID) {\n              var reference = ref(db, \"/notices/\" + folderUserID);\n              push(reference, {\n                type: \"recept_recordAdd_done\",\n                performerUID: myUID,\n                time: timeNow.getTime(),\n                folderID: folderID,\n                recordID: newRecordID\n              });\n              SendPushNotification({\n                receiverUID: folderUserID,\n                title_: \"기록추가타이틀\",\n                body_: \"기록추가바디\"\n              });\n            }\n          });\n        }\n      });\n    } else {\n      var _reference = ref(db, \"/records/\" + recordID);\n\n      set(_reference, {\n        folderID: folderID,\n        placeID: placeID,\n        address: address,\n        lctn: lctn,\n        userID: myUID,\n        writeDate: writeDate,\n        title: title == undefined ? timeNow.getFullYear().toString() + \"_\" + (timeNow.getMonth() + 1).toString() + \"_\" + timeNow.getDay().toString() + \"_\\uAE30\\uB85D\" : title,\n        placeName: place,\n        date: {\n          year: date.getFullYear(),\n          month: date.getMonth() + 1,\n          day: date.getDate()\n        },\n        folderName: folderName,\n        text: text\n      });\n\n      if (folderID != originalfolderID) {\n        var _reference2 = ref(db, \"/folders/\" + originalfolderID + \"/placeRecords/\" + placeID + \"/\" + recordID);\n\n        yield remove(_reference2).then(onValue(ref(db, \"/folders/\" + originalfolderID + \"/placeRecords/\" + placeID), function (snapshot) {\n          if (!snapshot.hasChildren()) {\n            var reference3 = ref(db, \"/folders/\" + originalfolderID + \"/placeRecords/\" + placeID);\n            remove(reference3);\n          }\n        }));\n        var reference4 = ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID + \"/\" + recordID);\n        set(reference4, true);\n      }\n\n      var referenceDate = ref(db, \"/folders/\" + folderID + \"/updateDate\");\n      var now = new Date();\n      set(referenceDate, now.toString());\n      selectedPhotos.map(function () {\n        var _ref4 = _asyncToGenerator(function* (image) {\n          var referenceImage = ref(db, \"/records/\" + recordID + \"/photos\");\n          var imageID = push(referenceImage, image).key;\n          var url = yield uploadImage(image, imageID, recordID);\n          var referenceUrl = ref(db, \"/records/\" + recordID + \"/photos/\" + imageID);\n          set(referenceUrl, url);\n        });\n\n        return function (_x22) {\n          return _ref4.apply(this, arguments);\n        };\n      }());\n      var folderRef = ref_storage(storage, \"images/\" + recordID + \"/\");\n      onValue(ref(db, \"/records/\" + recordID + \"/photos/\"), function (snapshot) {\n        if (snapshot.val() != null) {\n          var keys = Object.keys(snapshot.val());\n          listAll(folderRef).then(function (result) {\n            result.items.forEach(function (imageRef) {\n              if (!keys.includes(imageRef.name)) deleteObject(imageRef);\n            });\n          }).catch(function (error) {\n            console.log(error);\n          });\n        }\n      });\n    }\n  });\n\n  return function saveData(_x4, _x5, _x6, _x7, _x8, _x9, _x10, _x11, _x12, _x13, _x14, _x15, _x16, _x17, _x18, _x19, _x20) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nvar storeRecord = function () {\n  var _ref6 = _asyncToGenerator(function* (_ref5) {\n    var navigation = _ref5.navigation,\n        myUID = _ref5.myUID,\n        myID = _ref5.myID,\n        myFirstName = _ref5.myFirstName,\n        myLastName = _ref5.myLastName,\n        title_ = _ref5.title_,\n        place = _ref5.place,\n        placeID = _ref5.placeID,\n        address = _ref5.address,\n        lctn = _ref5.lctn,\n        date_ = _ref5.date_,\n        folderID_ = _ref5.folderID_,\n        folderName_ = _ref5.folderName_,\n        selectedPhotos = _ref5.selectedPhotos,\n        text_ = _ref5.text_,\n        writeDate = _ref5.writeDate,\n        recordID = _ref5.recordID,\n        originalfolderID = _ref5.originalfolderID,\n        IsNewRecord = _ref5.IsNewRecord;\n    yield saveData(myUID, myID, myFirstName, myLastName, title_, place, placeID, address, lctn, date_, folderID_, folderName_, selectedPhotos, text_, writeDate, recordID, originalfolderID).then(function () {\n      IsNewRecord ? navigation.pop() : navigation.navigate(\"Storage\");\n    });\n  });\n\n  return function storeRecord(_x23) {\n    return _ref6.apply(this, arguments);\n  };\n}();\n\nvar removeData = function () {\n  var _ref8 = _asyncToGenerator(function* (_ref7) {\n    var recordID = _ref7.recordID,\n        folderID = _ref7.folderID,\n        placeID = _ref7.placeID;\n    var folderRef = ref_storage(storage, \"images/\" + recordID + \"/\");\n    listAll(folderRef).then(function (result) {\n      result.items.forEach(function (imageRef) {\n        deleteObject(imageRef);\n      });\n    }).catch(function (error) {\n      console.log(error);\n    });\n    var reference1 = ref(db, \"/records/\" + recordID);\n    yield remove(reference1).then(function () {\n      var reference2 = ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID + \"/\" + recordID);\n      remove(reference2);\n    }).then(onValue(ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID), function (snapshot) {\n      if (!snapshot.hasChildren()) {\n        var reference3 = ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID);\n        remove(reference3);\n      }\n    }));\n  });\n\n  return function removeData(_x24) {\n    return _ref8.apply(this, arguments);\n  };\n}();\n\nvar removeRecord = function () {\n  var _ref10 = _asyncToGenerator(function* (_ref9) {\n    var navigation = _ref9.navigation,\n        recordID = _ref9.recordID,\n        folderID_ = _ref9.folderID_,\n        placeID = _ref9.placeID;\n    yield removeData({\n      recordID: recordID,\n      folderID_: folderID_,\n      placeID: placeID\n    }).then(function () {\n      return navigation.navigate(\"Storage\");\n    });\n  });\n\n  return function removeRecord(_x25) {\n    return _ref10.apply(this, arguments);\n  };\n}();\n\nvar EditScreen = function EditScreen(_ref11) {\n  var navigation = _ref11.navigation,\n      route = _ref11.route;\n  var myContext = useContext(AppContext);\n  var myUID = myContext.myUID;\n  var myID = myContext.myID;\n  var myFirstName = myContext.myFirstName;\n  var myLastName = myContext.myLastName;\n  var timeNow2 = new Date();\n  var _route$params = route.params,\n      recordID = _route$params.recordID,\n      folderID = _route$params.folderID,\n      placeID = _route$params.placeID,\n      address = _route$params.address,\n      lctn = _route$params.lctn,\n      userID = _route$params.userID,\n      writeDate = _route$params.writeDate,\n      title = _route$params.title,\n      placeName = _route$params.placeName,\n      date = _route$params.date,\n      folderName = _route$params.folderName,\n      photos = _route$params.photos,\n      text = _route$params.text;\n  var IsNewRecord = title === undefined;\n  var IsRecordOwner = userID === myUID;\n\n  var _useState = useState(IsNewRecord),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEditable = _useState2[0],\n      setIsEditable = _useState2[1];\n\n  var _useState3 = useState(title || undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      title_ = _useState4[0],\n      setTitle_ = _useState4[1];\n\n  var _useState5 = useState(placeName),\n      _useState6 = _slicedToArray(_useState5, 2),\n      place = _useState6[0],\n      setPlace = _useState6[1];\n\n  var _useState7 = useState(date === undefined ? new Date() : new Date(date.year, date.month - 1, date.day)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      date_ = _useState8[0],\n      setDate_ = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      showDatePicker = _useState10[0],\n      setShowDatePicker = _useState10[1];\n\n  var originalfolderID = folderID;\n\n  var _useState11 = useState(folderID || defaultFolderID),\n      _useState12 = _slicedToArray(_useState11, 2),\n      folderID_ = _useState12[0],\n      setFolderID_ = _useState12[1];\n\n  var _useState13 = useState(folderName || defaultFolderName),\n      _useState14 = _slicedToArray(_useState13, 2),\n      folderName_ = _useState14[0],\n      setFolderName_ = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showFolderBottomSheet = _useState16[0],\n      setShowFolderBottomSheet = _useState16[1];\n\n  var _useState17 = useState(photos !== undefined && photos !== null ? Object.values(photos) : []),\n      _useState18 = _slicedToArray(_useState17, 2),\n      selectedPhotos = _useState18[0],\n      setSelectedPhotos = _useState18[1];\n\n  var _useState19 = useState(text || \"\"),\n      _useState20 = _slicedToArray(_useState19, 2),\n      text_ = _useState20[0],\n      setText_ = _useState20[1];\n\n  var _useState21 = useState(false),\n      _useState22 = _slicedToArray(_useState21, 2),\n      removeModalVisible = _useState22[0],\n      setRemoveModalVisible = _useState22[1];\n\n  var _useState23 = useState(false),\n      _useState24 = _slicedToArray(_useState23, 2),\n      goBackModalVisible = _useState24[0],\n      setGoBackModalVisible = _useState24[1];\n\n  var _useState25 = useState(false),\n      _useState26 = _slicedToArray(_useState25, 2),\n      visible = _useState26[0],\n      setVisible = _useState26[1];\n\n  var onToggleSnackBar = function onToggleSnackBar() {\n    return setVisible(!visible);\n  };\n\n  var onDismissSnackBar = function onDismissSnackBar() {\n    return setVisible(false);\n  };\n\n  return _jsxs(View, {\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      position: \"absolute\",\n      backgroundColor: \"white\",\n      flexDirection: \"column\"\n    },\n    children: [_jsxs(View, {\n      style: {\n        height: 56,\n        top: 32,\n        width: \"100%\",\n        flexDirection: \"row\",\n        alignItems: \"center\",\n        marginBottom: 16\n      },\n      children: [_jsx(View, {\n        onTouchEndCapture: function onTouchEndCapture() {\n          setGoBackModalVisible(true);\n        },\n        style: styles.goBack,\n        children: _jsx(GoBack, {\n          height: 24\n        })\n      }), _jsx(View, {\n        style: styles.title,\n        children: _jsx(TextInput, {\n          editable: isEditable,\n          selectTextOnFocus: isEditable,\n          style: styles.titleText,\n          onChangeText: function onChangeText(tle) {\n            return setTitle_(tle);\n          },\n          value: title_,\n          placeholder: timeNow2.getFullYear().toString() + \"_\" + (timeNow2.getMonth() + 1).toString() + \"_\" + timeNow2.getDate().toString() + \"_\\uAE30\\uB85D\"\n        })\n      }), IsRecordOwner && !isEditable && _jsx(View, {\n        style: styles.twoRightButtons,\n        children: _jsxs(View, {\n          style: {\n            flexDirection: \"row\"\n          },\n          children: [_jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setIsEditable(true);\n            },\n            style: styles.firstButton,\n            children: _jsx(EditFolder, {})\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return setRemoveModalVisible(true);\n            },\n            style: styles.secondButton,\n            children: _jsx(DeleteFolder, {})\n          })]\n        })\n      })]\n    }), _jsxs(ScrollView, {\n      style: {\n        width: \"100%\",\n        marginTop: 32\n      },\n      showsVerticalScrollIndicator: false,\n      scrollEnabled: true,\n      children: [selectedPhotos.length === 0 && !isEditable ? _jsx(_Fragment, {}) : _jsx(View, {\n        style: _objectSpread({\n          height: 210\n        }, styles.imgPicker),\n        children: _jsx(ImgPicker, {\n          onImageTaken: function onImageTaken(photo) {\n            setSelectedPhotos(function (selectedPhotos) {\n              return [].concat(_toConsumableArray(selectedPhotos), [photo]);\n            });\n          },\n          onImageErased: function onImageErased(photos) {\n            return setSelectedPhotos(function () {\n              return photos;\n            });\n          },\n          defaultPhotos: selectedPhotos,\n          IsEditable: isEditable,\n          onToggleSnackBar: onToggleSnackBar\n        })\n      }), _jsxs(View, {\n        onTouchEndCapture: function onTouchEndCapture() {\n          showFolderBottomSheet && setShowFolderBottomSheet(false);\n        },\n        style: _objectSpread({\n          height: 48\n        }, styles.item),\n        children: [_jsx(LocationImage, {}), _jsx(TextInput, {\n          editable: isEditable,\n          selectTextOnFocus: isEditable,\n          style: _objectSpread({\n            fontSize: 15\n          }, styles.textInput),\n          onChangeText: function onChangeText(plc) {\n            return setPlace(plc);\n          },\n          value: place\n        })]\n      }), _jsxs(View, {\n        onTouchEndCapture: function onTouchEndCapture() {\n          showFolderBottomSheet && setShowFolderBottomSheet(false);\n        },\n        style: _objectSpread({\n          width: 350,\n          height: showDatePicker ? 266 : 50\n        }, styles.item),\n        children: [_jsx(DateImage, {}), _jsx(DatePicker, {\n          date1: date_,\n          setDate1: function setDate1(date1) {\n            return setDate_(date1);\n          },\n          show: showDatePicker,\n          setShow: function setShow(show1) {\n            return setShowDatePicker(show1);\n          },\n          IsEditable: isEditable\n        })]\n      }), _jsxs(View, {\n        style: _objectSpread({\n          height: 50\n        }, styles.item),\n        children: [_jsx(FolderImage, {}), _jsxs(TouchableOpacity, {\n          onPress: function onPress() {\n            isEditable && setShowFolderBottomSheet(!showFolderBottomSheet);\n          },\n          style: {\n            width: 100,\n            height: 40,\n            left: 10,\n            bottom: 7,\n            alignItems: \"center\",\n            flexDirection: \"row\"\n          },\n          children: [_jsx(FolderPrefix, {\n            height: 16,\n            width: 16\n          }), _jsxs(Text, {\n            children: [\" \", folderName_]\n          })]\n        }), _jsx(View, {\n          onTouchEndCapture: function onTouchEndCapture() {\n            showFolderBottomSheet && setShowFolderBottomSheet(false);\n          },\n          style: {\n            flex: 1\n          }\n        })]\n      }), !isEditable && (text === undefined || text.length === 0) ? _jsx(_Fragment, {}) : _jsxs(View, {\n        style: _objectSpread({}, styles.item),\n        children: [_jsx(WritingImage, {}), _jsx(TextInput, {\n          editable: isEditable,\n          selectTextOnFocus: isEditable,\n          style: styles.record,\n          onChangeText: function onChangeText(txt) {\n            return setText_(txt);\n          },\n          value: text_,\n          multiline: true,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n          placeholderTextColor: \"grey\"\n        })]\n      }), isEditable && _jsxs(View, {\n        style: _objectSpread({}, styles.button),\n        children: [_jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            IsNewRecord ? navigation.pop() : setIsEditable(false);\n          },\n          style: {\n            width: 160,\n            padding: 15,\n            marginRight: 7\n          },\n          children: _jsx(Text, {\n            style: {\n              alignSelf: \"center\",\n              fontWeight: \"bold\"\n            },\n            children: \"\\uCDE8\\uC18C\"\n          })\n        }), _jsx(Text, {\n          children: \"|\"\n        }), _jsx(TouchableOpacity, {\n          onPress: function onPress() {\n            return storeRecord({\n              navigation: navigation,\n              myUID: myUID,\n              myID: myID,\n              myFirstName: myFirstName,\n              myLastName: myLastName,\n              title_: title_,\n              place: place,\n              placeID: placeID,\n              address: address,\n              lctn: lctn,\n              date_: date_,\n              folderID_: folderID_,\n              folderName_: folderName_,\n              selectedPhotos: selectedPhotos,\n              text_: text_,\n              writeDate: writeDate,\n              recordID: recordID,\n              originalfolderID: originalfolderID,\n              IsNewRecord: IsNewRecord\n            });\n          },\n          style: {\n            width: 160,\n            padding: 15,\n            marginLeft: 7\n          },\n          children: _jsx(Text, {\n            style: {\n              alignSelf: \"center\",\n              fontWeight: \"bold\"\n            },\n            children: \"\\uC800\\uC7A5\"\n          })\n        })]\n      })]\n    }), _jsx(FolderBottomSheet, {\n      stackNavigation: navigation,\n      show: showFolderBottomSheet,\n      setShow: function setShow(s) {\n        setShowFolderBottomSheet(s);\n      },\n      setFolderName: function setFolderName(f) {\n        return setFolderName_(f);\n      },\n      setFolderID: function setFolderID(f) {\n        return setFolderID_(f);\n      }\n    }), _jsx(PopUpType1, {\n      modalVisible: removeModalVisible,\n      modalHandler: setRemoveModalVisible,\n      action: function action() {\n        return removeRecord({\n          navigation: navigation,\n          recordID: recordID,\n          folderID_: folderID_,\n          placeID: placeID\n        });\n      },\n      askValue: \"\\uC815\\uB9D0 \\uC0AD\\uC81C\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\",\n      actionValue: \"\\uC0AD\\uC81C\"\n    }), _jsx(PopUpType2, {\n      modalVisible: goBackModalVisible,\n      modalHandler: setGoBackModalVisible,\n      action1: function action1() {\n        navigation.goBack();\n      },\n      action2: function action2() {\n        storeRecord({\n          navigation: navigation,\n          myUID: myUID,\n          myID: myID,\n          myFirstName: myFirstName,\n          myLastName: myLastName,\n          title_: title_,\n          place: place,\n          placeID: placeID,\n          address: address,\n          lctn: lctn,\n          date_: date_,\n          folderID_: folderID_,\n          folderName_: folderName_,\n          selectedPhotos: selectedPhotos,\n          text_: text_,\n          writeDate: writeDate,\n          recordID: recordID,\n          originalfolderID: originalfolderID,\n          IsNewRecord: IsNewRecord\n        });\n      },\n      askValue: \"\\uBCC0\\uACBD \\uC0AC\\uD56D\\uC744 \\uC800\\uC7A5\\uD558\\uC2DC\\uACA0\\uC5B4\\uC694?\",\n      actionValue1: \"\\uC800\\uC7A5 \\uC548\\uD568\",\n      actionValue2: \"\\uC800\\uC7A5\"\n    }), _jsx(SnackBar, {\n      visible: visible,\n      onDismissSnackBar: onDismissSnackBar,\n      text: \"\\uCD5C\\uB300 10\\uAC1C\\uAE4C\\uC9C0 \\uC0AC\\uC9C4 \\uCCA8\\uBD80 \\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4.\"\n    })]\n  });\n};\n\nexport default EditScreen;\nvar styles = StyleSheet.create({\n  imgPicker: {\n    marginTop: 16,\n    width: \"100%\"\n  },\n  item: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginLeft: 23\n  },\n  label: {\n    fontSize: 17,\n    marginTop: 2,\n    marginBottom: 15,\n    marginRight: 15,\n    paddingVertical: 4,\n    paddingHorizontal: 2\n  },\n  textInput: {\n    marginBottom: 15,\n    paddingVertical: 2,\n    paddingHorizontal: 2,\n    width: \"85%\",\n    bottom: 6,\n    paddingLeft: 14\n  },\n  record: {\n    width: \"85%\",\n    height: 360,\n    marginBottom: 7,\n    paddingVertical: 2,\n    paddingHorizontal: 2,\n    lineHeight: 24,\n    left: 10,\n    bottom: 6\n  },\n  button: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: 60,\n    flexDirection: \"row\",\n    position: \"absolute\",\n    marginTop: 661\n  },\n  goBack: {\n    width: 32,\n    height: 24,\n    position: \"absolute\",\n    left: 31\n  },\n  title: {\n    width: 304,\n    height: 24,\n    left: 63\n  },\n  titleText: {\n    fontSize: 16,\n    lineHeight: 24,\n    fontWeight: \"bold\"\n  },\n  twoRightButtons: {\n    position: \"absolute\",\n    right: 0,\n    width: 86,\n    height: 30\n  },\n  firstButton: {\n    width: 30,\n    height: 30\n  },\n  secondButton: {\n    width: 30,\n    height: 30,\n    left: 10\n  }\n});","map":{"version":3,"names":["useIsFocused","ref","onValue","set","push","remove","off","ref_storage","uploadBytes","getDownloadURL","deleteObject","listAll","React","useContext","createFactory","useEffect","useState","TouchableOpacity","DateImage","DeleteFolder","FolderImage","EditFolder","FolderPrefix","GoBack","LocationImage","WritingImage","AppContext","DatePicker","FolderBottomSheet","ImgPicker","PopUpType1","PopUpType2","SnackBar","storage","auth","database","SendPushNotification","db","defaultFolderID","defaultFolderName","uploadImage","image","imageName","newRecordID","imageRef","blob","Promise","resolve","reject","xhr","XMLHttpRequest","open","responseType","onload","response","onerror","TypeError","send","connectType","then","snapshot","close","saveData","myUID","myID","myFirstName","myLastName","title","place","placeID","address","lctn","date","folderID","folderName","selectedPhotos","text","writeDate_","recordID","originalfolderID","timeNow","Date","writeDate","year","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","undefined","reference1","userID","toString","getDay","placeName","key","reference2","map","referenceImage","imageID","url","referenceUrl","val","folderUserIDs","Object","keys","folderUserID","reference","type","performerUID","time","getTime","receiverUID","title_","body_","hasChildren","reference3","reference4","referenceDate","now","folderRef","result","items","forEach","includes","name","catch","error","console","log","storeRecord","navigation","date_","folderID_","folderName_","text_","IsNewRecord","pop","navigate","removeData","removeRecord","EditScreen","route","myContext","timeNow2","params","photos","IsRecordOwner","isEditable","setIsEditable","setTitle_","setPlace","setDate_","showDatePicker","setShowDatePicker","setFolderID_","setFolderName_","showFolderBottomSheet","setShowFolderBottomSheet","values","setSelectedPhotos","setText_","removeModalVisible","setRemoveModalVisible","goBackModalVisible","setGoBackModalVisible","visible","setVisible","onToggleSnackBar","onDismissSnackBar","width","height","position","backgroundColor","flexDirection","top","alignItems","marginBottom","styles","goBack","titleText","tle","twoRightButtons","firstButton","secondButton","marginTop","length","imgPicker","photo","item","fontSize","textInput","plc","date1","show1","left","bottom","flex","record","txt","button","padding","marginRight","alignSelf","fontWeight","marginLeft","s","f","StyleSheet","create","label","paddingVertical","paddingHorizontal","paddingLeft","lineHeight","justifyContent","right"],"sources":["/Users/jeongin/mapsee_2/screens/EditScreen.js"],"sourcesContent":["import { useIsFocused } from \"@react-navigation/native\";\nimport { ref, onValue, set, push, remove, off } from \"firebase/database\";\nimport {\n  ref as ref_storage,\n  uploadBytes,\n  getDownloadURL,\n  deleteObject,\n  listAll,\n} from \"firebase/storage\";\nimport React, { useContext, createFactory, useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TextInput,\n  Button,\n  Image,\n  SafeAreaView,\n  TouchableHighlight,\n  Alert,\n} from \"react-native\";\nimport { TouchableOpacity } from \"react-native-gesture-handler\";\n\nimport DateImage from \"../assets/icons/date.svg\";\nimport DeleteFolder from \"../assets/icons/delete.svg\";\nimport FolderImage from \"../assets/icons/folder.svg\";\nimport EditFolder from \"../assets/icons/folderEdit.svg\";\nimport FolderPrefix from \"../assets/icons/folderPrefix.svg\";\nimport GoBack from \"../assets/icons/goBack.svg\";\nimport LocationImage from \"../assets/icons/location.svg\";\nimport WritingImage from \"../assets/icons/writing.svg\";\nimport AppContext from \"../components/AppContext\";\nimport DatePicker from \"../components/EditScreen/DatePicker\";\nimport FolderBottomSheet from \"../components/FolderBottomSheet/FolderBottomSheet\";\nimport ImgPicker from \"../components/EditScreen/ImgPicker\";\nimport { PopUpType1, PopUpType2 } from \"../components/PopUp\";\nimport SnackBar from \"../components/SnackBar\";\nimport { storage, auth, database } from \"../firebase\";\nimport SendPushNotification from \"../modules/SendPushNotification\";\n\nconst db = database;\n\nconst defaultFolderID = \"-NB6gdHZgh_liXbnuOLr\";\nconst defaultFolderName = \"폴더1\";\n\nconst uploadImage = async (image, imageName, newRecordID) => {\n  const imageRef = ref_storage(storage, `images/${newRecordID}/${imageName}`);\n\n  // `images === 참조값이름(폴더이름), / 뒤에는 파일이름 어떻게 지을지\n  const blob = await new Promise((resolve, reject) => {\n    // image 불러오기 위한 XML 만든다\n    const xhr = new XMLHttpRequest();\n    // imagePicker통해 선택된 사진을 blob형태로 가져온다\n    xhr.open(\"GET\", image, true);\n    xhr.responseType = \"blob\";\n    // XML 상태 확인\n    xhr.onload = function () {\n      // 성공하면 Promise의 값으로 xhr.response 반환\n      resolve(xhr.response);\n    };\n    xhr.onerror = function () {\n      // 실패하면 Promise의 값으로 Error 반환\n      reject(new TypeError(\"Network request failed\"));\n    };\n    // \"GET\" 인 경우에는 서버에 데이터를 보낼 필요 없음\n    xhr.send(null);\n  });\n\n  await uploadBytes(imageRef, blob, {\n    connectType: \"image/png\",\n  }).then((snapshot) => {});\n\n  blob.close();\n  return await getDownloadURL(imageRef);\n};\n\nconst saveData = async (\n  myUID,\n  myID,\n  myFirstName,\n  myLastName,\n  title,\n  place,\n  placeID,\n  address,\n  lctn,\n  date,\n  folderID,\n  folderName,\n  selectedPhotos,\n  text,\n  writeDate_,\n  recordID,\n  originalfolderID\n) => {\n  const timeNow = new Date();\n  const writeDate = writeDate_ || {\n    year: timeNow.getFullYear(),\n    month: timeNow.getMonth() + 1,\n    day: timeNow.getDate(),\n    hour: timeNow.getHours(),\n    minute: timeNow.getMinutes(),\n  };\n  if (recordID == undefined) {\n    //새 기록이라면\n    const reference1 = ref(db, \"/records\");\n    const newRecordID = push(reference1, {\n      // records에 push\n      folderID,\n      placeID,\n      address,\n      lctn,\n      userID: myUID,\n      writeDate,\n      title:\n        title === undefined\n          ? `${timeNow.getFullYear().toString()}_${(\n              timeNow.getMonth() + 1\n            ).toString()}_${timeNow.getDay().toString()}_기록`\n          : title,\n      placeName: place,\n      date: {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate(),\n      },\n      folderName,\n      text,\n    }).key;\n    const reference2 = ref(\n      db,\n      `/folders/${folderID}/placeRecords/${placeID}/${newRecordID}`\n    ); //folder에 recordID를 넣고\n    set(reference2, true); //////// 여기에 사진 저장 함수 넣기\n    selectedPhotos.map(async (image) => {\n      const referenceImage = ref(db, \"/records/\" + newRecordID + \"/photos\");\n      const imageID = push(referenceImage, image).key;\n\n      const url = await uploadImage(image, imageID, newRecordID);\n\n      const referenceUrl = ref(\n        db,\n        \"/records/\" + newRecordID + \"/photos/\" + imageID\n      );\n      set(referenceUrl, url);\n    });\n\n    //uploadImages(selectedPhotos, imageIDs, newRecordID);\n    //push 알림과 내부 알림 보내기(나에게는 스낵바만 띄우기)\n    onValue(ref(db, `/folders/${folderID}/userIDs`), (snapshot) => {\n      if (snapshot.val() != null) {\n        const folderUserIDs = Object.keys(snapshot.val());\n        folderUserIDs.map((folderUserID) => {\n          if (folderUserID != myUID) {\n            const reference = ref(db, \"/notices/\" + folderUserID);\n            push(reference, {\n              type: \"recept_recordAdd_done\",\n              performerUID: myUID,\n              time: timeNow.getTime(),\n              //여기서 부턴 \"recept_recordAdd_done\" type 알림만의 정보\n              folderID,\n              recordID: newRecordID,\n            });\n            SendPushNotification({\n              receiverUID: folderUserID,\n              title_: \"기록추가타이틀\",\n              body_: \"기록추가바디\",\n            });\n          }\n        });\n      }\n    });\n  } //새 기록이 아니라면\n  else {\n    const reference1 = ref(db, \"/records/\" + recordID);\n    set(reference1, {\n      // records에 push\n      folderID,\n      placeID,\n      address,\n      lctn,\n      userID: myUID,\n      writeDate,\n      title:\n        title == undefined\n          ? `${timeNow.getFullYear().toString()}_${(\n              timeNow.getMonth() + 1\n            ).toString()}_${timeNow.getDay().toString()}_기록`\n          : title, //나중에 modify할 때 default title을 어떻게 할지를 기획한테 물어보기\n      placeName: place,\n      date: {\n        year: date.getFullYear(),\n        month: date.getMonth() + 1,\n        day: date.getDate(),\n      },\n      folderName,\n      text,\n    });\n    if (folderID != originalfolderID) {\n      const reference2 = ref(\n        db,\n        `/folders/${originalfolderID}/placeRecords/${placeID}/${recordID}`\n      );\n\n      await remove(reference2).then(\n        onValue(\n          ref(db, \"/folders/\" + originalfolderID + \"/placeRecords/\" + placeID),\n          (snapshot) => {\n            if (!snapshot.hasChildren()) {\n              const reference3 = ref(\n                db,\n                \"/folders/\" + originalfolderID + \"/placeRecords/\" + placeID\n              );\n              remove(reference3);\n            }\n          }\n        )\n      );\n      const reference4 = ref(\n        db,\n        `/folders/${folderID}/placeRecords/${placeID}/${recordID}`\n      ); //folder에 recordID를 넣고\n      set(reference4, true);\n    }\n\n    const referenceDate = ref(db, `/folders/${folderID}/updateDate`);\n    const now = new Date();\n    set(referenceDate, now.toString());\n\n    // storage 관련 저장/삭제\n    selectedPhotos.map(async (image) => {\n      const referenceImage = ref(db, \"/records/\" + recordID + \"/photos\");\n      const imageID = push(referenceImage, image).key;\n\n      const url = await uploadImage(image, imageID, recordID);\n      const referenceUrl = ref(\n        db,\n        \"/records/\" + recordID + \"/photos/\" + imageID\n      );\n      set(referenceUrl, url);\n    });\n\n    const folderRef = ref_storage(storage, `images/${recordID}/`);\n    onValue(ref(db, \"/records/\" + recordID + \"/photos/\"), (snapshot) => {\n      if (snapshot.val() != null) {\n        const keys = Object.keys(snapshot.val());\n\n        listAll(folderRef)\n          .then(function (result) {\n            result.items.forEach(function (imageRef) {\n              // And finally display them\n              if (!keys.includes(imageRef.name)) deleteObject(imageRef);\n            });\n          })\n          .catch(function (error) {\n            console.log(error);\n          });\n      }\n    });\n\n    //기존 기록의 수정이나 삭제는 알림 없어도 됨.\n  }\n};\nconst storeRecord = async ({\n  navigation,\n  myUID,\n  myID,\n  myFirstName,\n  myLastName,\n  title_,\n  place,\n  placeID,\n  address,\n  lctn,\n  date_,\n  folderID_,\n  folderName_,\n  selectedPhotos,\n  text_,\n  writeDate,\n  recordID,\n  originalfolderID,\n  IsNewRecord,\n}) => {\n  await saveData(\n    myUID,\n    myID,\n    myFirstName,\n    myLastName,\n    title_,\n    place,\n    placeID,\n    address,\n    lctn,\n    date_,\n    folderID_,\n    folderName_,\n    selectedPhotos,\n    text_,\n    writeDate,\n    recordID,\n    originalfolderID\n  ).then(() => {\n    IsNewRecord ? navigation.pop() : navigation.navigate(\"Storage\"); //realtimeDataBase가 모두 업데이트 된후\n  });\n};\nconst removeData = async ({ recordID, folderID, placeID }) => {\n  //remove from storage\n  const folderRef = ref_storage(storage, `images/${recordID}/`);\n\n  listAll(folderRef)\n    .then(function (result) {\n      result.items.forEach(function (imageRef) {\n        // And finally display them\n        deleteObject(imageRef);\n      });\n    })\n    .catch(function (error) {\n      console.log(error);\n    });\n\n  // remove from database\n  const reference1 = ref(db, \"/records/\" + recordID);\n  await remove(reference1)\n    .then(() => {\n      const reference2 = ref(\n        db,\n        \"/folders/\" + folderID + \"/placeRecords/\" + placeID + \"/\" + recordID\n      );\n      remove(reference2);\n    })\n    .then(\n      onValue(\n        ref(db, \"/folders/\" + folderID + \"/placeRecords/\" + placeID),\n        (snapshot) => {\n          if (!snapshot.hasChildren()) {\n            const reference3 = ref(\n              db,\n              \"/folders/\" + folderID + \"/placeRecords/\" + placeID\n            );\n            remove(reference3);\n          }\n        }\n      )\n    );\n};\n\nconst removeRecord = async ({ navigation, recordID, folderID_, placeID }) => {\n  await removeData({ recordID, folderID_, placeID }).then(\n    () => navigation.navigate(\"Storage\") //realtimeDataBase가 모두 업데이트 된후\n  );\n};\n\nconst EditScreen = ({ navigation, route }) => {\n  const myContext = useContext(AppContext);\n  const myUID = myContext.myUID;\n  const myID = myContext.myID;\n  const myFirstName = myContext.myFirstName;\n  const myLastName = myContext.myLastName;\n\n  const timeNow2 = new Date();\n\n  const {\n    recordID,\n    folderID,\n    placeID,\n    address,\n    lctn,\n    userID,\n    writeDate,\n    title,\n    placeName,\n    date,\n    folderName,\n    photos,\n    text,\n  } = route.params;\n\n  const IsNewRecord = title === undefined; //지금 사용자가 작성하고 있는 record가 새로 만드는 record인지 기존에 있던 record인지를 알려주는 bool\n  const IsRecordOwner = userID === myUID; //기존의 기록인 경우, 그것이 자신의 기록인지 확인하는 bool\n  const [isEditable, setIsEditable] = useState(IsNewRecord); //이거는 IsNewRecord이거나, IsRecordOwner이고 토글을 눌렀을 때 true가 됨\n\n  const [title_, setTitle_] = useState(title || undefined);\n\n  const [place, setPlace] = useState(placeName);\n\n  const [date_, setDate_] = useState(\n    date === undefined\n      ? new Date()\n      : new Date(date.year, date.month - 1, date.day)\n  );\n  const [showDatePicker, setShowDatePicker] = useState(false);\n\n  const originalfolderID = folderID; //만약 IsnewRecord가 아니라면 기존에 저장되어 있을 folderID를 받는다. IsNewRecord라면\n  const [folderID_, setFolderID_] = useState(folderID || defaultFolderID);\n  const [folderName_, setFolderName_] = useState(\n    folderName || defaultFolderName\n  );\n  const [showFolderBottomSheet, setShowFolderBottomSheet] = useState(false);\n\n  const [selectedPhotos, setSelectedPhotos] = useState(\n    photos !== undefined && photos !== null ? Object.values(photos) : []\n  );\n\n  const [text_, setText_] = useState(text || \"\");\n  const [removeModalVisible, setRemoveModalVisible] = useState(false);\n  const [goBackModalVisible, setGoBackModalVisible] = useState(false);\n\n  const [visible, setVisible] = useState(false); // Snackbar\n  const onToggleSnackBar = () => setVisible(!visible); // SnackbarButton -> 나중에는 없애기\n  const onDismissSnackBar = () => setVisible(false); // Snackbar\n  return (\n    <View\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\",\n        backgroundColor: \"white\",\n        flexDirection: \"column\",\n      }}\n    >\n      <View\n        style={{\n          height: 56,\n          top: 32,\n          width: \"100%\",\n          flexDirection: \"row\",\n          alignItems: \"center\",\n          marginBottom: 16,\n        }}\n      >\n        <View\n          onTouchEndCapture={() => {\n            setGoBackModalVisible(true);\n          }}\n          style={styles.goBack}\n        >\n          <GoBack height={24} />\n        </View>\n        <View style={styles.title}>\n          <TextInput\n            editable={isEditable}\n            selectTextOnFocus={isEditable}\n            style={styles.titleText}\n            onChangeText={(tle) => setTitle_(tle)}\n            value={title_}\n            placeholder={`${timeNow2.getFullYear().toString()}_${(\n              timeNow2.getMonth() + 1\n            ).toString()}_${timeNow2.getDate().toString()}_기록`}\n          />\n        </View>\n        {IsRecordOwner && !isEditable && (\n          <View style={styles.twoRightButtons}>\n            <View style={{ flexDirection: \"row\" }}>\n              <TouchableOpacity\n                onPress={() => setIsEditable(true)}\n                style={styles.firstButton}\n              >\n                <EditFolder />\n              </TouchableOpacity>\n              <TouchableOpacity\n                onPress={() => setRemoveModalVisible(true)}\n                style={styles.secondButton}\n              >\n                <DeleteFolder />\n              </TouchableOpacity>\n            </View>\n          </View>\n        )}\n      </View>\n      <ScrollView\n        style={{ width: \"100%\", marginTop: 32 }}\n        showsVerticalScrollIndicator={false}\n        scrollEnabled\n      >\n        {selectedPhotos.length === 0 && !isEditable ? (\n          <></>\n        ) : (\n          <View style={{ height: 210, ...styles.imgPicker }}>\n            {/* <Image source={RecordPhotoImage} /> */}\n            <ImgPicker\n              onImageTaken={(photo) => {\n                setSelectedPhotos((selectedPhotos) => [\n                  ...selectedPhotos,\n                  photo,\n                ]);\n              }}\n              onImageErased={(photos) => setSelectedPhotos(() => photos)}\n              defaultPhotos={selectedPhotos}\n              IsEditable={isEditable}\n              onToggleSnackBar={onToggleSnackBar}\n            />\n          </View>\n        )}\n        <View\n          onTouchEndCapture={() => {\n            showFolderBottomSheet && setShowFolderBottomSheet(false);\n          }}\n          style={{ height: 48, ...styles.item }}\n        >\n          <LocationImage />\n          <TextInput\n            editable={isEditable}\n            selectTextOnFocus={isEditable}\n            style={{ fontSize: 15, ...styles.textInput }}\n            onChangeText={(plc) => setPlace(plc)}\n            value={place}\n          />\n        </View>\n        <View\n          onTouchEndCapture={() => {\n            showFolderBottomSheet && setShowFolderBottomSheet(false);\n          }}\n          style={{\n            width: 350,\n            height: showDatePicker ? 266 : 50,\n            ...styles.item,\n          }}\n        >\n          <DateImage />\n          <DatePicker\n            date1={date_}\n            setDate1={(date1) => setDate_(date1)}\n            show={showDatePicker}\n            setShow={(show1) => setShowDatePicker(show1)}\n            IsEditable={isEditable}\n          />\n        </View>\n        <View style={{ height: 50, ...styles.item }}>\n          <FolderImage />\n          <TouchableOpacity\n            onPress={() => {\n              isEditable && setShowFolderBottomSheet(!showFolderBottomSheet);\n            }}\n            style={{\n              width: 100,\n              height: 40,\n              left: 10,\n              bottom: 7,\n              alignItems: \"center\",\n              flexDirection: \"row\",\n            }}\n          >\n            <FolderPrefix height={16} width={16} />\n            <Text> {folderName_}</Text>\n          </TouchableOpacity>\n          <View\n            onTouchEndCapture={() => {\n              showFolderBottomSheet && setShowFolderBottomSheet(false);\n            }}\n            style={{ flex: 1 }}\n          />\n        </View>\n        {!isEditable && (text === undefined || text.length === 0) ? (\n          <></>\n        ) : (\n          <View style={{ ...styles.item }}>\n            <WritingImage />\n            <TextInput\n              editable={isEditable}\n              selectTextOnFocus={isEditable}\n              style={styles.record}\n              onChangeText={(txt) => setText_(txt)}\n              value={text_}\n              multiline\n              placeholder=\"내용을 입력해주세요\"\n              placeholderTextColor=\"grey\"\n            />\n          </View>\n        )}\n\n        {isEditable && (\n          <View style={{ ...styles.button }}>\n            <TouchableOpacity\n              onPress={() => {\n                IsNewRecord ? navigation.pop() : setIsEditable(false);\n              }}\n              style={{ width: 160, padding: 15, marginRight: 7 }}\n            >\n              <Text style={{ alignSelf: \"center\", fontWeight: \"bold\" }}>\n                취소\n              </Text>\n            </TouchableOpacity>\n            <Text>|</Text>\n            <TouchableOpacity\n              onPress={() =>\n                storeRecord({\n                  navigation,\n                  myUID,\n                  myID,\n                  myFirstName,\n                  myLastName,\n                  title_,\n                  place,\n                  placeID,\n                  address,\n                  lctn,\n                  date_,\n                  folderID_,\n                  folderName_,\n                  selectedPhotos,\n                  text_,\n                  writeDate,\n                  recordID,\n                  originalfolderID,\n                  IsNewRecord,\n                })\n              }\n              style={{ width: 160, padding: 15, marginLeft: 7 }}\n            >\n              <Text style={{ alignSelf: \"center\", fontWeight: \"bold\" }}>\n                저장\n              </Text>\n            </TouchableOpacity>\n          </View>\n        )}\n      </ScrollView>\n      <FolderBottomSheet\n        stackNavigation={navigation}\n        show={showFolderBottomSheet}\n        setShow={(s) => {\n          setShowFolderBottomSheet(s);\n        }}\n        setFolderName={(f) => setFolderName_(f)}\n        setFolderID={(f) => setFolderID_(f)}\n      />\n      <PopUpType1\n        modalVisible={removeModalVisible}\n        modalHandler={setRemoveModalVisible}\n        action={() =>\n          removeRecord({ navigation, recordID, folderID_, placeID })\n        }\n        askValue=\"정말 삭제하시겠어요?\"\n        actionValue=\"삭제\"\n      />\n      <PopUpType2\n        modalVisible={goBackModalVisible}\n        modalHandler={setGoBackModalVisible}\n        action1={() => {\n          navigation.goBack();\n        }}\n        action2={() => {\n          storeRecord({\n            navigation,\n            myUID,\n            myID,\n            myFirstName,\n            myLastName,\n            title_,\n            place,\n            placeID,\n            address,\n            lctn,\n            date_,\n            folderID_,\n            folderName_,\n            selectedPhotos,\n            text_,\n            writeDate,\n            recordID,\n            originalfolderID,\n            IsNewRecord,\n          });\n        }}\n        askValue=\"변경 사항을 저장하시겠어요?\"\n        actionValue1=\"저장 안함\"\n        actionValue2=\"저장\"\n      />\n\n      <SnackBar\n        visible={visible}\n        onDismissSnackBar={onDismissSnackBar}\n        text=\"최대 10개까지 사진 첨부 가능합니다.\"\n      />\n    </View>\n  );\n};\n\nexport default EditScreen;\n\nconst styles = StyleSheet.create({\n  imgPicker: { marginTop: 16, width: \"100%\" },\n  item: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginLeft: 23,\n  },\n  label: {\n    fontSize: 17,\n    marginTop: 2,\n    marginBottom: 15,\n    marginRight: 15,\n    paddingVertical: 4,\n    paddingHorizontal: 2,\n  },\n  textInput: {\n    //borderBottomColor: '#B0E0E6',\n    //borderBottomWidth:1,\n    marginBottom: 15,\n    paddingVertical: 2,\n    paddingHorizontal: 2,\n    width: \"85%\",\n    bottom: 6,\n    paddingLeft: 14,\n  },\n  record: {\n    //borderColor: '#B0E0E6',\n    width: \"85%\",\n    height: 360,\n    //borderWidth:1,\n    marginBottom: 7,\n    paddingVertical: 2,\n    paddingHorizontal: 2,\n    lineHeight: 24,\n    left: 10,\n    bottom: 6,\n  },\n  button: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\",\n    height: 60,\n    flexDirection: \"row\",\n    position: \"absolute\",\n    marginTop: 661,\n  },\n\n  goBack: {\n    width: 32,\n    height: 24,\n    position: \"absolute\",\n    left: 31,\n  },\n  title: {\n    width: 304,\n    height: 24,\n    left: 63,\n  },\n  titleText: {\n    fontSize: 16,\n    lineHeight: 24,\n    fontWeight: \"bold\",\n  },\n  twoRightButtons: {\n    position: \"absolute\",\n    right: 0,\n    width: 86,\n    height: 30,\n  },\n  firstButton: {\n    width: 30,\n    height: 30,\n  },\n  secondButton: {\n    width: 30,\n    height: 30,\n    left: 10,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}